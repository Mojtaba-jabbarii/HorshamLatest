!=======================================================================
! Generated by: PSCAD v5.0.1.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : TapCtrl_1
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE TapCtrl_1Dyn(Pos_t_o, Tap_o, Vrms, Vord_pu, TpWdg,     &
     &   Vtr_2, dPos, Hyst_pu, NupSteps, NdnSteps, Pos0, Tfilt_rms,     &
     &   Tdelay_first_tap, Ttap, Tdelay_subsequent, Ttap_init,          &
     &   TstartInit, TendInit, Dir)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    EMTDC_X2COMP  ! 'Comparator with Interpolation'
      REAL    REALPOLE      ! Real Pole
      REAL    EMTDC_XINT    ! 'Integrator /w Interpolation'

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      INTEGER, INTENT(IN)  :: TpWdg, NupSteps
      INTEGER, INTENT(IN)  :: NdnSteps, Pos0, Dir
      REAL,    INTENT(IN)  :: Vrms, Vord_pu
      REAL,    INTENT(IN)  :: Vtr_2, dPos
      REAL,    INTENT(IN)  :: Hyst_pu, Tfilt_rms
      REAL,    INTENT(IN)  :: Tdelay_first_tap
      REAL,    INTENT(IN)  :: Ttap
      REAL,    INTENT(IN)  :: Tdelay_subsequent
      REAL,    INTENT(IN)  :: Ttap_init
      REAL,    INTENT(IN)  :: TstartInit
      REAL,    INTENT(IN)  :: TendInit
      INTEGER, INTENT(OUT) :: Pos_t_o! Aliases: Pos_t
      REAL,    INTENT(OUT) :: Tap_o! Aliases: Tap

! Electrical Node Indices

! Control Signals
      INTEGER  IT_1, IT_2, IT_3, IT_4, Frz, IT_5
      INTEGER  IT_6, IT_7, IT_8, IT_9, IT_10
      INTEGER  IT_11, IT_12, IT_13, IT_14, IT_15
      INTEGER  IT_16, NP
      REAL     RT_1, Vrms2_pu, RT_2, RT_3, RT_4
      REAL     RT_5, RT_6, RT_7, RT_8, RT_9
      REAL     RT_10, RT_11, Hband, RT_12, RT_13
      REAL     RT_14, RT_15, RT_16, RT_17, RT_18
      REAL     RT_19, Ttap_current, RT_20, RT_21
      REAL     initial_combined_constant, RT_22

! Internal Variables
      REAL     RVD2_1(2), RVD1_1, RVD2_2(2)

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOI, ISTOF, IT_0                  ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOI     = NSTOI
      NSTOI     = NSTOI + 24
      ISTOF     = NSTOF
      NSTOF     = NSTOF + 39
      IPGB      = NPGB
      NPGB      = NPGB + 7
      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      Pos_t_o  = STOI(ISTOI + 1)
      Tap_o    = STOF(ISTOF + 1)
      IT_1     = STOI(ISTOI + 7)
      IT_2     = STOI(ISTOI + 8)
      IT_3     = STOI(ISTOI + 9)
      IT_4     = STOI(ISTOI + 10)
      Frz      = STOI(ISTOI + 11)
      RT_1     = STOF(ISTOF + 14)
      Vrms2_pu = STOF(ISTOF + 15)
      RT_2     = STOF(ISTOF + 16)
      RT_3     = STOF(ISTOF + 17)
      RT_4     = STOF(ISTOF + 18)
      RT_5     = STOF(ISTOF + 19)
      RT_6     = STOF(ISTOF + 20)
      RT_7     = STOF(ISTOF + 21)
      RT_8     = STOF(ISTOF + 22)
      IT_5     = STOI(ISTOI + 12)
      IT_6     = STOI(ISTOI + 13)
      IT_7     = STOI(ISTOI + 14)
      IT_8     = STOI(ISTOI + 15)
      IT_9     = STOI(ISTOI + 16)
      RT_9     = STOF(ISTOF + 23)
      RT_10    = STOF(ISTOF + 24)
      RT_11    = STOF(ISTOF + 25)
      Hband    = STOF(ISTOF + 26)
      RT_12    = STOF(ISTOF + 27)
      RT_13    = STOF(ISTOF + 28)
      RT_14    = STOF(ISTOF + 29)
      RT_15    = STOF(ISTOF + 30)
      RT_16    = STOF(ISTOF + 31)
      RT_17    = STOF(ISTOF + 32)
      IT_10    = STOI(ISTOI + 17)
      IT_11    = STOI(ISTOI + 18)
      RT_18    = STOF(ISTOF + 33)
      IT_12    = STOI(ISTOI + 19)
      IT_13    = STOI(ISTOI + 20)
      RT_19    = STOF(ISTOF + 34)
      Ttap_current = STOF(ISTOF + 35)
      RT_20    = STOF(ISTOF + 36)
      IT_14    = STOI(ISTOI + 21)
      RT_21    = STOF(ISTOF + 37)
      initial_combined_constant = STOF(ISTOF + 38)
      IT_15    = STOI(ISTOI + 22)
      IT_16    = STOI(ISTOI + 23)
      RT_22    = STOF(ISTOF + 39)
      NP       = STOI(ISTOI + 24)


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'TapCtrl_1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 80:[gain] Gain Block 
!  Gain
      Hband = Hyst_pu * dPos

! 180:[const] Real Constant 
      RT_12 = 1.0

! 190:[const] Real Constant 
      RT_16 = 1.0

! 210:[const] Real Constant 
      RT_11 = 1.0

! 230:[sumjct] Summing/Differencing Junctions 
      RT_10 = + Vord_pu + Hband

! 240:[const] Real Constant 
      RT_5 = 1.0

! 250:[sumjct] Summing/Differencing Junctions 
      RT_9 = + Vord_pu - Hband

! 260:[const] Real Constant 
      RT_3 = 1.0

! 290:[time-sig] Output of Simulation Time 
      RT_20 = TIME

! 300:[time-sig] Output of Simulation Time 
      RT_21 = TIME

! 310:[time-sig] Output of Simulation Time 
      RT_18 = TIME

! 320:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,RT_18,TendInit,1.0,0.0,0.0,RVD2_1)
      IT_12 = NINT(RVD2_1(1))

! 330:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_13 = NINT(REAL(IT_12))

! 340:[div] Divider 
      IF (ABS(RT_11) .LT. 1.0E-100) THEN
         IF (RT_11 .LT. 0.0)  THEN
            RT_1 = -1.0E100 * Vrms
         ELSE
            RT_1 =  1.0E100 * Vrms
         ENDIF
      ELSE
         RT_1 = Vrms / RT_11
      ENDIF

! 350:[realpole] Real Pole 
!  Real_Pole
      Vrms2_pu = REALPOLE(0,1,0,1.0,Tfilt_rms,RT_1,0.0,-1.0E20,1.0E20)

! 360:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,Vrms2_pu,RT_10,1.0,0.0,0.0,RVD2_1)
      IT_1 = NINT(RVD2_1(1))

! 370:[inv] Interpolated Logic Inverter 
      IF (IT_1 .NE. 0) THEN
         IT_2 = 0
      ELSE
         IT_2 = 1
      ENDIF

! 380:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,RT_9,Vrms2_pu,1.0,0.0,0.0,RVD2_1)
      IT_8 = NINT(RVD2_1(1))

! 390:[inv] Interpolated Logic Inverter 
      IF (IT_8 .NE. 0) THEN
         IT_11 = 0
      ELSE
         IT_11 = 1
      ENDIF

! 400:[sumjct] Summing/Differencing Junctions 
      RT_22 = + Ttap + Tdelay_subsequent

! 410:[sumjct] Summing/Differencing Junctions 
      initial_combined_constant = + Ttap + Tdelay_first_tap

! 420:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,TstartInit,RT_20,1.0,0.0,0.0,RVD2_1)
      IT_14 = NINT(RVD2_1(1))

! 430:[unity] Type/Shape conversion block 
! real -> nearest integer
      Frz = NINT(REAL(IT_14))

! 440:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,RT_21,initial_combined_constant,1.0,0.0,0.0,&
     &RVD2_1)
      IT_15 = NINT(RVD2_1(1))

! 450:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_16 = NINT(REAL(IT_15))

! 460:[logic_mult] Multiple Input Logic Gate 
!
! Multi input OR gate
!
      IF ( (IT_2 .NE. 0) .OR. (Frz .NE. 0) .OR. (IT_4 .NE. 0) ) THEN
        IT_3 = 1
      ELSE
        IT_3 = 0
      ENDIF

! 470:[logic_mult] Multiple Input Logic Gate 
!
! Multi input OR gate
!
      IF ( (IT_11 .NE. 0) .OR. (Frz .NE. 0) .OR. (IT_10 .NE. 0) ) THEN
        IT_9 = 1
      ELSE
        IT_9 = 0
      ENDIF

! 480:[select] Two Input Selector 
      IF (IT_16 .EQ. RTCI(NRTCI)) THEN
         RT_19 = RT_22
      ELSE
         RT_19 = initial_combined_constant
      ENDIF
      NRTCI = NRTCI + 1
!

! 490:[select] Two Input Selector 
      IF (IT_13 .EQ. RTCI(NRTCI)) THEN
         Ttap_current = RT_19
      ELSE
         Ttap_current = Ttap_init
      ENDIF
      NRTCI = NRTCI + 1
!

! 500:[integral] Interpolated Integrator 
      RVD1_1 = RTCF(NRTCF) ! Initial Output
      NRTCF = NRTCF + 1
      RVD2_1(1) = REAL(IT_1)
      RVD2_1(2) = 0.0
      RVD2_2(1) = FLOAT(IT_3)
      RVD2_2(2) = 0.0
      RT_6 = EMTDC_XINT(0, 0, 1, RVD1_1, Ttap_current, 0.0, 0.0, 1.01, R&
     &VD2_2, RVD2_1)

! 510:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,1,RT_6,RT_5,1.0,0.0,0.0,RVD2_1)
      RT_7 = RVD2_1(1)

! 520:[edge] Edge Detector 
!  Edge_Detector
      IF (RT_7 .LT. STORF(NSTORF)) THEN
         IT_6 = 0
      ELSE IF (RT_7 .GT. STORF(NSTORF)) THEN
         IT_6 = 1
      ELSE
         IT_6 = 0
      ENDIF
      STORF(NSTORF) = RT_7
      NSTORF = NSTORF + 1

! 530:[integral] Interpolated Integrator 
      RVD1_1 = RTCF(NRTCF) ! Initial Output
      NRTCF = NRTCF + 1
      RVD2_1(1) = REAL(IT_8)
      RVD2_1(2) = 0.0
      RVD2_2(1) = FLOAT(IT_9)
      RVD2_2(2) = 0.0
      RT_2 = EMTDC_XINT(0, 0, 1, RVD1_1, Ttap_current, 0.0, 0.0, 1.01, R&
     &VD2_2, RVD2_1)

! 540:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,1,RT_2,RT_3,1.0,0.0,0.0,RVD2_1)
      RT_4 = RVD2_1(1)

! 550:[edge] Edge Detector 
!  Edge_Detector
      IF (RT_4 .LT. STORF(NSTORF)) THEN
         IT_5 = 0
      ELSE IF (RT_4 .GT. STORF(NSTORF)) THEN
         IT_5 = 1
      ELSE
         IT_5 = 0
      ENDIF
      STORF(NSTORF) = RT_4
      NSTORF = NSTORF + 1

! 560:[sumjct] Summing/Differencing Junctions 
      IT_7 = - IT_5 + IT_6

! 570:[gain] Gain Block 
!  Gain
      RT_8 = REAL(Dir) * REAL(IT_7)

! 580:[counter] Counter 
!  Counter
      CALL COUNTER1_EXE(NINT(RT_8),0,Pos0,Pos_t_o)
!

! 590:[sumjct] Summing/Differencing Junctions 
      RT_13 = - RT_12 + REAL(Pos_t_o) - REAL(NdnSteps)

! 600:[gain] Gain Block 
!  Gain
      RT_15 = REAL(TpWdg) * RT_13

! 610:[gain] Gain Block 
!  Gain
      RT_14 = dPos * RT_15

! 620:[gain] Gain Block 
!  Gain
      RT_17 = REAL(Dir) * RT_14

! 630:[sumjct] Summing/Differencing Junctions 
      Tap_o = + RT_16 + RT_17

! 640:[pgb] Output Channel 'Ttap_current'

      PGB(IPGB+1) = Ttap_current

! 650:[pgb] Output Channel 'Freeze'

      PGB(IPGB+2) = REAL(Frz)

! 660:[pgb] Output Channel 'Neg pos'

      PGB(IPGB+3) = RT_4

! 680:[pgb] Output Channel 'edge'

      PGB(IPGB+4) = RT_8

! 690:[pgb] Output Channel 'Int pos'

      PGB(IPGB+5) = RT_7

! 710:[pgb] Output Channel 'Vrms2_pu'

      PGB(IPGB+6) = Vrms2_pu

! 720:[pgb] Output Channel 'tap_ratio'

      PGB(IPGB+7) = Tap_o

! 730:[zminusone] Feedback Loop Selector 'Unused'
! Unused
      IT_4 = IT_6

! 740:[zminusone] Feedback Loop Selector 'Unused'
! Unused
      IT_10 = IT_5

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOI(ISTOI + 1) = Pos_t_o
      STOF(ISTOF + 1) = Tap_o
      STOF(ISTOF + 2) = Vrms
      STOF(ISTOF + 3) = Vord_pu
      STOI(ISTOI + 2) = TpWdg
      STOF(ISTOF + 4) = Vtr_2
      STOF(ISTOF + 5) = dPos
      STOF(ISTOF + 6) = Hyst_pu
      STOI(ISTOI + 3) = NupSteps
      STOI(ISTOI + 4) = NdnSteps
      STOI(ISTOI + 5) = Pos0
      STOF(ISTOF + 7) = Tfilt_rms
      STOF(ISTOF + 8) = Tdelay_first_tap
      STOF(ISTOF + 9) = Ttap
      STOF(ISTOF + 10) = Tdelay_subsequent
      STOF(ISTOF + 11) = Ttap_init
      STOF(ISTOF + 12) = TstartInit
      STOF(ISTOF + 13) = TendInit
      STOI(ISTOI + 6) = Dir
      STOI(ISTOI + 7) = IT_1
      STOI(ISTOI + 8) = IT_2
      STOI(ISTOI + 9) = IT_3
      STOI(ISTOI + 10) = IT_4
      STOI(ISTOI + 11) = Frz
      STOF(ISTOF + 14) = RT_1
      STOF(ISTOF + 15) = Vrms2_pu
      STOF(ISTOF + 16) = RT_2
      STOF(ISTOF + 17) = RT_3
      STOF(ISTOF + 18) = RT_4
      STOF(ISTOF + 19) = RT_5
      STOF(ISTOF + 20) = RT_6
      STOF(ISTOF + 21) = RT_7
      STOF(ISTOF + 22) = RT_8
      STOI(ISTOI + 12) = IT_5
      STOI(ISTOI + 13) = IT_6
      STOI(ISTOI + 14) = IT_7
      STOI(ISTOI + 15) = IT_8
      STOI(ISTOI + 16) = IT_9
      STOF(ISTOF + 23) = RT_9
      STOF(ISTOF + 24) = RT_10
      STOF(ISTOF + 25) = RT_11
      STOF(ISTOF + 26) = Hband
      STOF(ISTOF + 27) = RT_12
      STOF(ISTOF + 28) = RT_13
      STOF(ISTOF + 29) = RT_14
      STOF(ISTOF + 30) = RT_15
      STOF(ISTOF + 31) = RT_16
      STOF(ISTOF + 32) = RT_17
      STOI(ISTOI + 17) = IT_10
      STOI(ISTOI + 18) = IT_11
      STOF(ISTOF + 33) = RT_18
      STOI(ISTOI + 19) = IT_12
      STOI(ISTOI + 20) = IT_13
      STOF(ISTOF + 34) = RT_19
      STOF(ISTOF + 35) = Ttap_current
      STOF(ISTOF + 36) = RT_20
      STOI(ISTOI + 21) = IT_14
      STOF(ISTOF + 37) = RT_21
      STOF(ISTOF + 38) = initial_combined_constant
      STOI(ISTOI + 22) = IT_15
      STOI(ISTOI + 23) = IT_16
      STOF(ISTOF + 39) = RT_22
      STOI(ISTOI + 24) = NP


!---------------------------------------
! Transfer to Exports
!---------------------------------------
      !Pos_t_o  is output
      !Tap_o    is output

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE TapCtrl_1Out()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices

! Control Signals
      REAL     RT_3, RT_5, RT_11, RT_12, RT_16

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC          ! Storage Indices
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NPGB      = NPGB + 7
      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_3     = STOF(ISTOF + 17)
      RT_5     = STOF(ISTOF + 19)
      RT_11    = STOF(ISTOF + 25)
      RT_12    = STOF(ISTOF + 27)
      RT_16    = STOF(ISTOF + 31)


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'TapCtrl_1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 180:[const] Real Constant 

      RT_12 = 1.0

! 190:[const] Real Constant 

      RT_16 = 1.0

! 210:[const] Real Constant 

      RT_11 = 1.0

! 240:[const] Real Constant 

      RT_5 = 1.0

! 260:[const] Real Constant 

      RT_3 = 1.0

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 17) = RT_3
      STOF(ISTOF + 19) = RT_5
      STOF(ISTOF + 25) = RT_11
      STOF(ISTOF + 27) = RT_12
      STOF(ISTOF + 31) = RT_16


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE TapCtrl_1Dyn_Begin(TpWdg, Vtr_2, dPos, Hyst_pu,        &
     &   NupSteps, NdnSteps, TstartInit, TendInit, Dir)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      INTEGER, INTENT(IN)  :: TpWdg, NupSteps
      INTEGER, INTENT(IN)  :: NdnSteps, Dir
      REAL,    INTENT(IN)  :: Vtr_2, dPos
      REAL,    INTENT(IN)  :: Hyst_pu, TstartInit
      REAL,    INTENT(IN)  :: TendInit

! Electrical Node Indices

! Control Signals
      INTEGER  NP
      REAL     RT_3, RT_5, RT_11, RT_12, RT_16

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 80:[gain] Gain Block 

! 180:[const] Real Constant 
      RT_12 = 1.0

! 190:[const] Real Constant 
      RT_16 = 1.0

! 210:[const] Real Constant 
      RT_11 = 1.0

! 220:[Tap_No_positons_1]  
      NP = NupSteps + NdnSteps

! 230:[sumjct] Summing/Differencing Junctions 

! 240:[const] Real Constant 
      RT_5 = 1.0

! 250:[sumjct] Summing/Differencing Junctions 

! 260:[const] Real Constant 
      RT_3 = 1.0

! 290:[time-sig] Output of Simulation Time 

! 300:[time-sig] Output of Simulation Time 

! 310:[time-sig] Output of Simulation Time 

! 320:[compar] Two Input Comparator 

! 330:[unity] Type/Shape conversion block 

! 340:[div] Divider 

! 350:[realpole] Real Pole 

! 360:[compar] Two Input Comparator 

! 370:[inv] Interpolated Logic Inverter 

! 380:[compar] Two Input Comparator 

! 390:[inv] Interpolated Logic Inverter 

! 400:[sumjct] Summing/Differencing Junctions 

! 410:[sumjct] Summing/Differencing Junctions 

! 420:[compar] Two Input Comparator 

! 430:[unity] Type/Shape conversion block 

! 440:[compar] Two Input Comparator 

! 450:[unity] Type/Shape conversion block 

! 480:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 490:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 500:[integral] Interpolated Integrator 
      RTCF(NRTCF) = 0.0
      NRTCF = NRTCF + 1

! 510:[compar] Two Input Comparator 

! 520:[edge] Edge Detector 

! 530:[integral] Interpolated Integrator 
      RTCF(NRTCF) = 0.0
      NRTCF = NRTCF + 1

! 540:[compar] Two Input Comparator 

! 550:[edge] Edge Detector 

! 560:[sumjct] Summing/Differencing Junctions 

! 570:[gain] Gain Block 

! 580:[counter] Counter 
      CALL COMPONENT_ID(ICALL_NO,465301460)
      CALL COUNTER1_CFG(1,NP,0)

! 590:[sumjct] Summing/Differencing Junctions 

! 600:[gain] Gain Block 

! 610:[gain] Gain Block 

! 620:[gain] Gain Block 

! 630:[sumjct] Summing/Differencing Junctions 

! 640:[pgb] Output Channel 'Ttap_current'

! 650:[pgb] Output Channel 'Freeze'

! 660:[pgb] Output Channel 'Neg pos'

! 680:[pgb] Output Channel 'edge'

! 690:[pgb] Output Channel 'Int pos'

! 710:[pgb] Output Channel 'Vrms2_pu'

! 720:[pgb] Output Channel 'tap_ratio'

! 730:[zminusone] Feedback Loop Selector 'Unused'

! 740:[zminusone] Feedback Loop Selector 'Unused'

      RETURN
      END

!=======================================================================

      SUBROUTINE TapCtrl_1Out_Begin(TpWdg, Vtr_2, dPos, Hyst_pu,        &
     &   NupSteps, NdnSteps, TstartInit, TendInit, Dir)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      INTEGER, INTENT(IN)  :: TpWdg, NupSteps
      INTEGER, INTENT(IN)  :: NdnSteps, Dir
      REAL,    INTENT(IN)  :: Vtr_2, dPos
      REAL,    INTENT(IN)  :: Hyst_pu, TstartInit
      REAL,    INTENT(IN)  :: TendInit

! Electrical Node Indices

! Control Signals
      INTEGER  NP
      REAL     RT_3, RT_5, RT_11, RT_12, RT_16

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 180:[const] Real Constant 
      RT_12 = 1.0

! 190:[const] Real Constant 
      RT_16 = 1.0

! 210:[const] Real Constant 
      RT_11 = 1.0

! 240:[const] Real Constant 
      RT_5 = 1.0

! 260:[const] Real Constant 
      RT_3 = 1.0

      RETURN
      END

