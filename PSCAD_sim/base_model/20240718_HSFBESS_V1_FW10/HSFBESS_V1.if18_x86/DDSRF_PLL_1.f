!=======================================================================
! Generated by: PSCAD v5.0.1.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : DDSRF_PLL_1
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE DDSRF_PLL_1Dyn(Vsys, Fsys, Meas_Island, Meas_Grid)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    DGTL_RMS      ! 'RMS Measurement using Digital Samlping'
!     SUBR    DDSRF_PLL_2Dyn  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: Vsys, Fsys
      REAL,    INTENT(OUT) :: Meas_Island(10)
      REAL,    INTENT(OUT) :: Meas_Grid(10)

! Electrical Node Indices

! Control Signals
      INTEGER  IT_1, IT_2
      REAL     Island_Hz, RT_1(3), Grid_Hz
      REAL     RT_2(3), Grid_Vol, Grid_Phs, RT_3
      REAL     RT_4, Island_Vol, Island_Phs
      REAL     Vabc1(3), RT_5, RT_6, Vabc2(3)
      REAL     RT_7, Vol2CA, RT_8, Vol2BC, RT_9
      REAL     Vol2AB, Vol2_rms(3), RT_10, RT_11
      REAL     RT_12, Vol1_rms(3), Vol1AB, Vol1BC
      REAL     Vol1CA

! Internal Variables
      REAL     RVD1_1, RVD1_2, RVD1_3

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOI, ISTOF, IT_0                  ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER ISUBS, SS(2), INODE                 ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOI     = NSTOI
      NSTOI     = NSTOI + 2
      ISTOF     = NSTOF
      NSTOF     = NSTOF + 62
      IPGB      = NPGB
      NPGB      = NPGB + 2
      INODE     = NNODE + 2
      NNODE     = NNODE + 8
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 2

      DO IT_0 = 1,2
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO
!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      Island_Hz = STOF(ISTOF + 23)
      Grid_Hz  = STOF(ISTOF + 27)
      IT_1     = STOI(ISTOI + 1)
      IT_2     = STOI(ISTOI + 2)
      Grid_Vol = STOF(ISTOF + 31)
      Grid_Phs = STOF(ISTOF + 32)
      RT_3     = STOF(ISTOF + 33)
      RT_4     = STOF(ISTOF + 34)
      Island_Vol = STOF(ISTOF + 35)
      Island_Phs = STOF(ISTOF + 36)
      RT_5     = STOF(ISTOF + 40)
      RT_6     = STOF(ISTOF + 41)
      RT_7     = STOF(ISTOF + 45)
      Vol2CA   = STOF(ISTOF + 46)
      RT_8     = STOF(ISTOF + 47)
      Vol2BC   = STOF(ISTOF + 48)
      RT_9     = STOF(ISTOF + 49)
      Vol2AB   = STOF(ISTOF + 50)
      RT_10    = STOF(ISTOF + 54)
      RT_11    = STOF(ISTOF + 55)
      RT_12    = STOF(ISTOF + 56)
      Vol1AB   = STOF(ISTOF + 60)
      Vol1BC   = STOF(ISTOF + 61)
      Vol1CA   = STOF(ISTOF + 62)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         RT_1(IT_0) = STOF(ISTOF + 23 + IT_0)
         RT_2(IT_0) = STOF(ISTOF + 27 + IT_0)
         Vabc1(IT_0) = STOF(ISTOF + 36 + IT_0)
         Vabc2(IT_0) = STOF(ISTOF + 41 + IT_0)
         Vol2_rms(IT_0) = STOF(ISTOF + 50 + IT_0)
         Vol1_rms(IT_0) = STOF(ISTOF + 56 + IT_0)
      END DO

! Array (1:10) quantities...
      DO IT_0 = 1,10
         Meas_Island(IT_0) = STOF(ISTOF + 2 + IT_0)
         Meas_Grid(IT_0) = STOF(ISTOF + 12 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'DDSRF_PLL_1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 40:[const] Real Constant 
      RT_4 = 0.0

! 70:[const] Real Constant 
      RT_3 = 0.0

! 130:[gain] Gain Block 
!  Gain
      RT_5 = 0.81639 * Vsys

! 140:[gain] Gain Block 
!  Gain
      RT_6 = 0.81639 * Vsys

! 150:[rms-inst] Single Phase RMS Meter 
      RVD1_1 = RTCF(NRTCF)
      RVD1_2 = RTCF(NRTCF+1)
      RVD1_3 = RTCF(NRTCF+2)
      NRTCF = NRTCF + 3
      CALL DGTL_RMS(64,RVD1_1,Vol1AB,RVD1_3,RVD1_2,RT_10)

! 160:[rms-inst] Single Phase RMS Meter 
      RVD1_1 = RTCF(NRTCF)
      RVD1_2 = RTCF(NRTCF+1)
      RVD1_3 = RTCF(NRTCF+2)
      NRTCF = NRTCF + 3
      CALL DGTL_RMS(64,RVD1_1,Vol2AB,RVD1_3,RVD1_2,RT_9)

! 170:[rms-inst] Single Phase RMS Meter 
      RVD1_1 = RTCF(NRTCF)
      RVD1_2 = RTCF(NRTCF+1)
      RVD1_3 = RTCF(NRTCF+2)
      NRTCF = NRTCF + 3
      CALL DGTL_RMS(64,RVD1_1,Vol1BC,RVD1_3,RVD1_2,RT_11)

! 180:[rms-inst] Single Phase RMS Meter 
      RVD1_1 = RTCF(NRTCF)
      RVD1_2 = RTCF(NRTCF+1)
      RVD1_3 = RTCF(NRTCF+2)
      NRTCF = NRTCF + 3
      CALL DGTL_RMS(64,RVD1_1,Vol2BC,RVD1_3,RVD1_2,RT_8)

! 190:[rms-inst] Single Phase RMS Meter 
      RVD1_1 = RTCF(NRTCF)
      RVD1_2 = RTCF(NRTCF+1)
      RVD1_3 = RTCF(NRTCF+2)
      NRTCF = NRTCF + 3
      CALL DGTL_RMS(64,RVD1_1,Vol1CA,RVD1_3,RVD1_2,RT_12)

! 200:[rms-inst] Single Phase RMS Meter 
      RVD1_1 = RTCF(NRTCF)
      RVD1_2 = RTCF(NRTCF+1)
      RVD1_3 = RTCF(NRTCF+2)
      NRTCF = NRTCF + 3
      CALL DGTL_RMS(64,RVD1_1,Vol2CA,RVD1_3,RVD1_2,RT_7)

! 210:[datamerge] Merges data signals into an array 
      Vol1_rms(1) = RT_10
      Vol1_rms(2) = RT_11
      Vol1_rms(3) = RT_12

! 220:[datamerge] Merges data signals into an array 
      Vol2_rms(1) = RT_9
      Vol2_rms(2) = RT_8
      Vol2_rms(3) = RT_7

! 270:[div] Divider 
      IF (ABS(RT_5) .LT. 1.0E-100) THEN
         IF (RT_5 .LT. 0.0)  THEN
            RT_1 = -1.0E100 * Vabc1
         ELSE
            RT_1 =  1.0E100 * Vabc1
         ENDIF
      ELSE
         RT_1 = Vabc1 / RT_5
      ENDIF

! 280:[DDSRF_PLL_2]  'PLL_Island'
      CALL DDSRF_PLL_2Dyn(Island_Hz, RT_1, Fsys)


! 290:[div] Divider 
      IF (ABS(RT_6) .LT. 1.0E-100) THEN
         IF (RT_6 .LT. 0.0)  THEN
            RT_2 = -1.0E100 * Vabc2
         ELSE
            RT_2 =  1.0E100 * Vabc2
         ENDIF
      ELSE
         RT_2 = Vabc2 / RT_6
      ENDIF

! 300:[DDSRF_PLL_2]  'PLL_Grid'
      CALL DDSRF_PLL_2Dyn(Grid_Hz, RT_2, Fsys)


! 310:[datamerge] Merges data signals into an array 
      Meas_Grid(1) = Grid_Vol
      Meas_Grid(2) = Grid_Hz
      Meas_Grid(3) = Vol2AB
      Meas_Grid(4) = Vol2BC
      Meas_Grid(5) = Vol2CA
      Meas_Grid(6 : 8) = Vol2_rms
      Meas_Grid(9) = Grid_Phs
      Meas_Grid(10) = RT_3

! 320:[datamerge] Merges data signals into an array 
      Meas_Island(1) = Island_Vol
      Meas_Island(2) = Island_Hz
      Meas_Island(3) = Vol1AB
      Meas_Island(4) = Vol1BC
      Meas_Island(5) = Vol1CA
      Meas_Island(6 : 8) = Vol1_rms
      Meas_Island(9) = Island_Phs
      Meas_Island(10) = RT_4

! 330:[pgb] Output Channel 'Grid_Hz'

      PGB(IPGB+1) = Grid_Hz

! 340:[pgb] Output Channel 'Island_Hz'

      PGB(IPGB+2) = Island_Hz

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 1) = Vsys
      STOF(ISTOF + 2) = Fsys
      STOF(ISTOF + 23) = Island_Hz
      STOF(ISTOF + 27) = Grid_Hz
      STOI(ISTOI + 1) = IT_1
      STOI(ISTOI + 2) = IT_2
      STOF(ISTOF + 31) = Grid_Vol
      STOF(ISTOF + 32) = Grid_Phs
      STOF(ISTOF + 33) = RT_3
      STOF(ISTOF + 34) = RT_4
      STOF(ISTOF + 35) = Island_Vol
      STOF(ISTOF + 36) = Island_Phs
      STOF(ISTOF + 40) = RT_5
      STOF(ISTOF + 41) = RT_6
      STOF(ISTOF + 45) = RT_7
      STOF(ISTOF + 46) = Vol2CA
      STOF(ISTOF + 47) = RT_8
      STOF(ISTOF + 48) = Vol2BC
      STOF(ISTOF + 49) = RT_9
      STOF(ISTOF + 50) = Vol2AB
      STOF(ISTOF + 54) = RT_10
      STOF(ISTOF + 55) = RT_11
      STOF(ISTOF + 56) = RT_12
      STOF(ISTOF + 60) = Vol1AB
      STOF(ISTOF + 61) = Vol1BC
      STOF(ISTOF + 62) = Vol1CA

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 23 + IT_0) = RT_1(IT_0)
         STOF(ISTOF + 27 + IT_0) = RT_2(IT_0)
         STOF(ISTOF + 36 + IT_0) = Vabc1(IT_0)
         STOF(ISTOF + 41 + IT_0) = Vabc2(IT_0)
         STOF(ISTOF + 50 + IT_0) = Vol2_rms(IT_0)
         STOF(ISTOF + 56 + IT_0) = Vol1_rms(IT_0)
      END DO

! Array (1:10) quantities...
      DO IT_0 = 1,10
         STOF(ISTOF + 2 + IT_0) = Meas_Island(IT_0)
         STOF(ISTOF + 12 + IT_0) = Meas_Grid(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------
      !Meas_Island is output
      !Meas_Grid is output

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE DDSRF_PLL_1Out()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

      REAL    EMTDC_VVDC    ! 
!     SUBR    DGTL_RMS3     ! '3 Phase Digital RMS Meter'
!     SUBR    MPHASE3PS     ! Phase Measurement in a 3p signal
!     SUBR    DDSRF_PLL_2Out  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices
      INTEGER  Island(3), Grid(3), NT_1, NT_2
      INTEGER  NT_3, NT_4, NT_5, NT_6

! Control Signals
      INTEGER  IT_1, IT_2
      REAL     Grid_Vol, Grid_Phs, RT_3, RT_4
      REAL     Island_Vol, Island_Phs, Vabc1(3)
      REAL     Vabc2(3), Vol2CA, Vol2BC, Vol2AB
      REAL     Vol1AB, Vol1BC, Vol1CA

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER ISUBS, SS(2), INODE                 ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NPGB      = NPGB + 2
      INODE     = NNODE + 2
      NNODE     = NNODE + 8
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 2

      DO IT_0 = 1,2
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO
!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      IT_1     = STOI(ISTOI + 1)
      IT_2     = STOI(ISTOI + 2)
      Grid_Vol = STOF(ISTOF + 31)
      Grid_Phs = STOF(ISTOF + 32)
      RT_3     = STOF(ISTOF + 33)
      RT_4     = STOF(ISTOF + 34)
      Island_Vol = STOF(ISTOF + 35)
      Island_Phs = STOF(ISTOF + 36)
      Vol2CA   = STOF(ISTOF + 46)
      Vol2BC   = STOF(ISTOF + 48)
      Vol2AB   = STOF(ISTOF + 50)
      Vol1AB   = STOF(ISTOF + 60)
      Vol1BC   = STOF(ISTOF + 61)
      Vol1CA   = STOF(ISTOF + 62)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Vabc1(IT_0) = STOF(ISTOF + 36 + IT_0)
         Vabc2(IT_0) = STOF(ISTOF + 41 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------

      NT_1  = NODE(INODE + 5)
      NT_2  = NODE(INODE + 6)
      NT_3  = NODE(INODE + 4)
      NT_4  = NODE(INODE + 3)
      NT_5  = NODE(INODE + 1)
      NT_6  = NODE(INODE + 2)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Island(IT_0) = NODE(INODE + 0 + IT_0)
         Grid(IT_0) = NODE(INODE + 3 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'DDSRF_PLL_1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 40:[const] Real Constant 

      RT_4 = 0.0

! 50:[voltmeter] Voltmeter (Line - Line) 'Vol1AB'
      Vol1AB = EMTDC_VVDC(SS(1), NT_5, NT_6)

! 60:[voltmeter] Voltmeter (Line - Line) 'Vol1BC'
      Vol1BC = EMTDC_VVDC(SS(1), NT_6, NT_4)

! 70:[const] Real Constant 

      RT_3 = 0.0

! 80:[voltmeter] Voltmeter (Line - Line) 'Vol2AB'
      Vol2AB = EMTDC_VVDC(SS(2), NT_3, NT_1)

! 90:[voltmeter] Voltmeter (Line - Line) 'Vol2BC'
      Vol2BC = EMTDC_VVDC(SS(2), NT_1, NT_2)

! 100:[voltmeter] Voltmeter (Line - Line) 'Vol1CA'
      Vol1CA = EMTDC_VVDC(SS(1), NT_4, NT_5)

! 120:[voltmeter] Voltmeter (Line - Line) 'Vol2CA'
      Vol2CA = EMTDC_VVDC(SS(2), NT_2, NT_3)

! 230:[rms3ph] Three Phase RMS Meter 
      RVD1_1 = RTCF(NRTCF) ! Inverse of rated voltage
      RVD1_2 = RTCF(NRTCF+1) ! Frequency
      RVD1_3 = RTCF(NRTCF+2) ! Initial value
      NRTCF = NRTCF + 3
      CALL DGTL_RMS3(64,SS(1),Island(1),Island(2),Island(3),RVD1_2,RVD1_&
     &1,RVD1_3,Island_Vol)
!

! 240:[rms3ph] Three Phase RMS Meter 
      RVD1_1 = RTCF(NRTCF) ! Inverse of rated voltage
      RVD1_2 = RTCF(NRTCF+1) ! Frequency
      RVD1_3 = RTCF(NRTCF+2) ! Initial value
      NRTCF = NRTCF + 3
      CALL DGTL_RMS3(64,SS(2),Grid(1),Grid(2),Grid(3),RVD1_2,RVD1_1,RVD1&
     &_3,Grid_Vol)
!

! 250:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      Vabc1(1) = EMTDC_VVDC(SS(1), Island(1), 0)
      Vabc1(2) = EMTDC_VVDC(SS(1), Island(2), 0)
      Vabc1(3) = EMTDC_VVDC(SS(1), Island(3), 0)
      RVD1_2 = EMTDC_VVDC(SS(1), Island(1), 0)
      RVD1_3 = EMTDC_VVDC(SS(1), Island(2), 0)
      RVD1_4 = EMTDC_VVDC(SS(1), Island(3), 0)
      CALL MPHASE3PS(1, 1, RVD1_2, RVD1_3, RVD1_4, RTCF(IVD1_1+2), RTCF(&
     &IVD1_1+3) , RVD1_1)
      Island_Phs = RVD1_1

! 260:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      Vabc2(1) = EMTDC_VVDC(SS(2), Grid(1), 0)
      Vabc2(2) = EMTDC_VVDC(SS(2), Grid(2), 0)
      Vabc2(3) = EMTDC_VVDC(SS(2), Grid(3), 0)
      RVD1_2 = EMTDC_VVDC(SS(2), Grid(1), 0)
      RVD1_3 = EMTDC_VVDC(SS(2), Grid(2), 0)
      RVD1_4 = EMTDC_VVDC(SS(2), Grid(3), 0)
      CALL MPHASE3PS(1, 1, RVD1_2, RVD1_3, RVD1_4, RTCF(IVD1_1+2), RTCF(&
     &IVD1_1+3) , RVD1_1)
      Grid_Phs = RVD1_1

! 280:[DDSRF_PLL_2]  'PLL_Island'
      CALL DDSRF_PLL_2Out()


! 300:[DDSRF_PLL_2]  'PLL_Grid'
      CALL DDSRF_PLL_2Out()


!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOI(ISTOI + 1) = IT_1
      STOI(ISTOI + 2) = IT_2
      STOF(ISTOF + 31) = Grid_Vol
      STOF(ISTOF + 32) = Grid_Phs
      STOF(ISTOF + 33) = RT_3
      STOF(ISTOF + 34) = RT_4
      STOF(ISTOF + 35) = Island_Vol
      STOF(ISTOF + 36) = Island_Phs
      STOF(ISTOF + 46) = Vol2CA
      STOF(ISTOF + 48) = Vol2BC
      STOF(ISTOF + 50) = Vol2AB
      STOF(ISTOF + 60) = Vol1AB
      STOF(ISTOF + 61) = Vol1BC
      STOF(ISTOF + 62) = Vol1CA

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 36 + IT_0) = Vabc1(IT_0)
         STOF(ISTOF + 41 + IT_0) = Vabc2(IT_0)
      END DO


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE DDSRF_PLL_1Dyn_Begin(Vsys, Fsys)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    DDSRF_PLL_2Dyn_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: Vsys, Fsys

! Electrical Node Indices

! Control Signals
      REAL     RT_3, RT_4

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ISUBS, SS(2), INODE                 ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 8
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 2

      DO IT_0 = 1,2
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO
!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 40:[const] Real Constant 
      RT_4 = 0.0

! 70:[const] Real Constant 
      RT_3 = 0.0

! 130:[gain] Gain Block 

! 140:[gain] Gain Block 

! 150:[rms-inst] Single Phase RMS Meter 
      RTCF(NRTCF)   = Fsys
      RTCF(NRTCF+1) = 0.0
      IF (1.0 .GT. 1.0E-20) THEN
        RTCF(NRTCF+2) = 1.0/1.0
      ELSE
        RTCF(NRTCF+2) = 1.0
      ENDIF
      NRTCF = NRTCF + 3

! 160:[rms-inst] Single Phase RMS Meter 
      RTCF(NRTCF)   = Fsys
      RTCF(NRTCF+1) = 0.0
      IF (1.0 .GT. 1.0E-20) THEN
        RTCF(NRTCF+2) = 1.0/1.0
      ELSE
        RTCF(NRTCF+2) = 1.0
      ENDIF
      NRTCF = NRTCF + 3

! 170:[rms-inst] Single Phase RMS Meter 
      RTCF(NRTCF)   = Fsys
      RTCF(NRTCF+1) = 0.0
      IF (1.0 .GT. 1.0E-20) THEN
        RTCF(NRTCF+2) = 1.0/1.0
      ELSE
        RTCF(NRTCF+2) = 1.0
      ENDIF
      NRTCF = NRTCF + 3

! 180:[rms-inst] Single Phase RMS Meter 
      RTCF(NRTCF)   = Fsys
      RTCF(NRTCF+1) = 0.0
      IF (1.0 .GT. 1.0E-20) THEN
        RTCF(NRTCF+2) = 1.0/1.0
      ELSE
        RTCF(NRTCF+2) = 1.0
      ENDIF
      NRTCF = NRTCF + 3

! 190:[rms-inst] Single Phase RMS Meter 
      RTCF(NRTCF)   = Fsys
      RTCF(NRTCF+1) = 0.0
      IF (1.0 .GT. 1.0E-20) THEN
        RTCF(NRTCF+2) = 1.0/1.0
      ELSE
        RTCF(NRTCF+2) = 1.0
      ENDIF
      NRTCF = NRTCF + 3

! 200:[rms-inst] Single Phase RMS Meter 
      RTCF(NRTCF)   = Fsys
      RTCF(NRTCF+1) = 0.0
      IF (1.0 .GT. 1.0E-20) THEN
        RTCF(NRTCF+2) = 1.0/1.0
      ELSE
        RTCF(NRTCF+2) = 1.0
      ENDIF
      NRTCF = NRTCF + 3

! 210:[datamerge] Merges data signals into an array 

! 220:[datamerge] Merges data signals into an array 

! 270:[div] Divider 

! 280:[DDSRF_PLL_2]  'PLL_Island'
      CALL DDSRF_PLL_2Dyn_Begin()


! 290:[div] Divider 

! 300:[DDSRF_PLL_2]  'PLL_Grid'
      CALL DDSRF_PLL_2Dyn_Begin()


! 310:[datamerge] Merges data signals into an array 

! 320:[datamerge] Merges data signals into an array 

! 330:[pgb] Output Channel 'Grid_Hz'

! 340:[pgb] Output Channel 'Island_Hz'

      RETURN
      END

!=======================================================================

      SUBROUTINE DDSRF_PLL_1Out_Begin(Vsys, Fsys)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    DDSRF_PLL_2Out_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: Vsys, Fsys

! Electrical Node Indices
      INTEGER  Island(3), Grid(3), NT_1, NT_2
      INTEGER  NT_3, NT_4, NT_5, NT_6

! Control Signals
      REAL     RT_3, RT_4

! Internal Variables
      INTEGER  IVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ISUBS, SS(2), INODE                 ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 8
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 2

      DO IT_0 = 1,2
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO
!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------

      NT_1  = NODE(INODE + 5)
      NT_2  = NODE(INODE + 6)
      NT_3  = NODE(INODE + 4)
      NT_4  = NODE(INODE + 3)
      NT_5  = NODE(INODE + 1)
      NT_6  = NODE(INODE + 2)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Island(IT_0) = NODE(INODE + 0 + IT_0)
         Grid(IT_0) = NODE(INODE + 3 + IT_0)
      END DO

!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 40:[const] Real Constant 
      RT_4 = 0.0

! 70:[const] Real Constant 
      RT_3 = 0.0

! 230:[rms3ph] Three Phase RMS Meter 
      RTCF(NRTCF) = 1.0
      IF (1.0 .GT. 1.0E-20) RTCF(NRTCF) = 1.0/1.0
      RTCF(NRTCF+1) = Fsys
      RTCF(NRTCF+2) = 0.0
      NRTCF = NRTCF + 3

! 240:[rms3ph] Three Phase RMS Meter 
      RTCF(NRTCF) = 1.0
      IF (1.0 .GT. 1.0E-20) RTCF(NRTCF) = 1.0/1.0
      RTCF(NRTCF+1) = Fsys
      RTCF(NRTCF+2) = 0.0
      NRTCF = NRTCF + 3

! 250:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      RTCF(IVD1_1+2) = 0.02
      RTCF(IVD1_1+3) = Fsys

! 260:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      RTCF(IVD1_1+2) = 0.02
      RTCF(IVD1_1+3) = Fsys

! 280:[DDSRF_PLL_2]  'PLL_Island'
      CALL DDSRF_PLL_2Out_Begin()


! 300:[DDSRF_PLL_2]  'PLL_Grid'
      CALL DDSRF_PLL_2Out_Begin()


      RETURN
      END

