!=======================================================================
! Generated by: PSCAD v5.0.1.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : SignalTruncator_2_3
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE SignalTruncator_2_3Dyn(Y10_out, Y9_out, Y8_out,        &
     &   Y7_out, Y6_out, Y5_out, Y4_out, Y3_out, Y2_out, Y1_out,        &
     &   X10_out, X9_out, X8_out, X7_out, X6_out, X5_out, X4_out,       &
     &   X3_out, X2_out, X1_out, N, Y10_in, Y9_in, Y8_in, Y7_in, Y6_in, &
     &   Y5_in, Y4_in, Y3_in, Y2_in, Y1_in, X10_in, X9_in, X8_in,       &
     &   X7_in, X6_in, X5_in, X4_in, X3_in, X2_in, X1_in)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    EMTDC_X2COMP  ! 'Comparator with Interpolation'

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: N, Y10_in, Y9_in
      REAL,    INTENT(IN)  :: Y8_in, Y7_in, Y6_in
      REAL,    INTENT(IN)  :: Y5_in, Y4_in, Y3_in
      REAL,    INTENT(IN)  :: Y2_in, X10_in
      REAL,    INTENT(IN)  :: X9_in, X8_in, X7_in
      REAL,    INTENT(IN)  :: X6_in, X5_in, X4_in
      REAL,    INTENT(IN)  :: X3_in, X2_in
      REAL,    INTENT(IN)  :: Y1_in! Aliases: Y1_out
      REAL,    INTENT(IN)  :: X1_in! Aliases: X1_out
      REAL,    INTENT(OUT) :: Y10_out, Y9_out
      REAL,    INTENT(OUT) :: Y8_out, Y7_out
      REAL,    INTENT(OUT) :: Y6_out, Y5_out
      REAL,    INTENT(OUT) :: Y4_out, Y3_out
      REAL,    INTENT(OUT) :: Y2_out, X10_out
      REAL,    INTENT(OUT) :: X9_out, X8_out
      REAL,    INTENT(OUT) :: X7_out, X6_out
      REAL,    INTENT(OUT) :: X5_out, X4_out
      REAL,    INTENT(OUT) :: X3_out, X2_out
      REAL,    INTENT(OUT) :: Y1_out! Aliases: Y1_in
      REAL,    INTENT(OUT) :: X1_out! Aliases: X1_in

! Electrical Node Indices

! Control Signals
      INTEGER  IT_1, IT_2, IT_3, IT_4, IT_5, IT_6
      INTEGER  IT_7, IT_8, IT_9, IT_10, IT_11
      INTEGER  IT_12, IT_13, IT_14, IT_15, IT_16
      INTEGER  IT_17, IT_18
      REAL     RT_1, RT_2, RT_3, RT_4, RT_5, RT_6
      REAL     RT_7, RT_8, RT_9, RT_10, RT_11
      REAL     RT_12, RT_13, RT_14, RT_15, RT_16
      REAL     RT_17, RT_18, RT_19, RT_20, RT_21
      REAL     RT_22, RT_23, RT_24, RT_25, RT_26
      REAL     RT_27, RT_28, RT_29, RT_30, RT_31
      REAL     RT_32, RT_33, RT_34, RT_35, RT_36
      REAL     RT_37, RT_38, RT_39, RT_40, RT_41
      REAL     RT_42, RT_43, RT_44, RT_45

! Internal Variables
      REAL     RVD2_1(2)

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOI, ISTOF, IT_0                  ! Storage Indices
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOI     = NSTOI
      NSTOI     = NSTOI + 18
      ISTOF     = NSTOF
      NSTOF     = NSTOF + 86
      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      Y10_out  = STOF(ISTOF + 1)
      Y9_out   = STOF(ISTOF + 2)
      Y8_out   = STOF(ISTOF + 3)
      Y7_out   = STOF(ISTOF + 4)
      Y6_out   = STOF(ISTOF + 5)
      Y5_out   = STOF(ISTOF + 6)
      Y4_out   = STOF(ISTOF + 7)
      Y3_out   = STOF(ISTOF + 8)
      Y2_out   = STOF(ISTOF + 9)
      Y1_out   = STOF(ISTOF + 10)
      X10_out  = STOF(ISTOF + 11)
      X9_out   = STOF(ISTOF + 12)
      X8_out   = STOF(ISTOF + 13)
      X7_out   = STOF(ISTOF + 14)
      X6_out   = STOF(ISTOF + 15)
      X5_out   = STOF(ISTOF + 16)
      X4_out   = STOF(ISTOF + 17)
      X3_out   = STOF(ISTOF + 18)
      X2_out   = STOF(ISTOF + 19)
      X1_out   = STOF(ISTOF + 20)
      RT_1     = STOF(ISTOF + 42)
      IT_1     = STOI(ISTOI + 1)
      RT_2     = STOF(ISTOF + 43)
      RT_3     = STOF(ISTOF + 44)
      RT_4     = STOF(ISTOF + 45)
      RT_5     = STOF(ISTOF + 46)
      IT_2     = STOI(ISTOI + 2)
      RT_6     = STOF(ISTOF + 47)
      RT_7     = STOF(ISTOF + 48)
      IT_3     = STOI(ISTOI + 3)
      RT_8     = STOF(ISTOF + 49)
      RT_9     = STOF(ISTOF + 50)
      RT_10    = STOF(ISTOF + 51)
      IT_4     = STOI(ISTOI + 4)
      RT_11    = STOF(ISTOF + 52)
      RT_12    = STOF(ISTOF + 53)
      RT_13    = STOF(ISTOF + 54)
      IT_5     = STOI(ISTOI + 5)
      RT_14    = STOF(ISTOF + 55)
      RT_15    = STOF(ISTOF + 56)
      RT_16    = STOF(ISTOF + 57)
      IT_6     = STOI(ISTOI + 6)
      RT_17    = STOF(ISTOF + 58)
      RT_18    = STOF(ISTOF + 59)
      RT_19    = STOF(ISTOF + 60)
      IT_7     = STOI(ISTOI + 7)
      RT_20    = STOF(ISTOF + 61)
      RT_21    = STOF(ISTOF + 62)
      RT_22    = STOF(ISTOF + 63)
      IT_8     = STOI(ISTOI + 8)
      RT_23    = STOF(ISTOF + 64)
      RT_24    = STOF(ISTOF + 65)
      RT_25    = STOF(ISTOF + 66)
      IT_9     = STOI(ISTOI + 9)
      RT_26    = STOF(ISTOF + 67)
      RT_27    = STOF(ISTOF + 68)
      RT_28    = STOF(ISTOF + 69)
      RT_29    = STOF(ISTOF + 70)
      IT_10    = STOI(ISTOI + 10)
      RT_30    = STOF(ISTOF + 71)
      RT_31    = STOF(ISTOF + 72)
      IT_11    = STOI(ISTOI + 11)
      RT_32    = STOF(ISTOF + 73)
      RT_33    = STOF(ISTOF + 74)
      IT_12    = STOI(ISTOI + 12)
      RT_34    = STOF(ISTOF + 75)
      RT_35    = STOF(ISTOF + 76)
      IT_13    = STOI(ISTOI + 13)
      RT_36    = STOF(ISTOF + 77)
      RT_37    = STOF(ISTOF + 78)
      IT_14    = STOI(ISTOI + 14)
      RT_38    = STOF(ISTOF + 79)
      RT_39    = STOF(ISTOF + 80)
      IT_15    = STOI(ISTOI + 15)
      RT_40    = STOF(ISTOF + 81)
      RT_41    = STOF(ISTOF + 82)
      IT_16    = STOI(ISTOI + 16)
      IT_17    = STOI(ISTOI + 17)
      RT_42    = STOF(ISTOF + 83)
      RT_43    = STOF(ISTOF + 84)
      RT_44    = STOF(ISTOF + 85)
      RT_45    = STOF(ISTOF + 86)
      IT_18    = STOI(ISTOI + 18)


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'SignalTruncator_2_3.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 70:[const] Real Constant 
      RT_1 = 99999.0

! 90:[const] Real Constant 
      RT_6 = 99999.0

! 110:[const] Real Constant 
      RT_7 = 99999.0

! 130:[const] Real Constant 
      RT_10 = 99999.0

! 150:[const] Real Constant 
      RT_13 = 99999.0

! 170:[const] Real Constant 
      RT_16 = 99999.0

! 190:[const] Real Constant 
      RT_2 = 1.0

! 200:[const] Real Constant 
      RT_19 = 99999.0

! 210:[const] Real Constant 
      RT_4 = 2.0

! 220:[const] Real Constant 
      RT_22 = 99999.0

! 230:[const] Real Constant 
      RT_8 = 3.0

! 240:[const] Real Constant 
      RT_25 = 99999.0

! 250:[const] Real Constant 
      RT_11 = 4.0

! 260:[const] Real Constant 
      RT_14 = 5.0

! 280:[const] Real Constant 
      RT_17 = 6.0

! 300:[const] Real Constant 
      RT_20 = 7.0

! 320:[const] Real Constant 
      RT_23 = 8.0

! 340:[const] Real Constant 
      RT_26 = 9.0

! 420:[const] Real Constant 
      RT_44 = 1.0

! 430:[const] Real Constant 
      RT_42 = 2.0

! 440:[const] Real Constant 
      RT_40 = 3.0

! 450:[const] Real Constant 
      RT_38 = 4.0

! 460:[const] Real Constant 
      RT_36 = 5.0

! 470:[const] Real Constant 
      RT_34 = 6.0

! 480:[const] Real Constant 
      RT_32 = 7.0

! 490:[const] Real Constant 
      RT_30 = 8.0

! 500:[const] Real Constant 
      RT_28 = 9.0

! 510:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_2,1.0,0.0,0.0,RVD2_1)
      RT_3 = RVD2_1(1)

! 520:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_1 = NINT(RT_3)

! 530:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_4,1.0,0.0,0.0,RVD2_1)
      RT_5 = RVD2_1(1)

! 540:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_2 = NINT(RT_5)

! 550:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_8,1.0,0.0,0.0,RVD2_1)
      RT_9 = RVD2_1(1)

! 560:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_3 = NINT(RT_9)

! 570:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_11,1.0,0.0,0.0,RVD2_1)
      RT_12 = RVD2_1(1)

! 580:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_4 = NINT(RT_12)

! 590:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_14,1.0,0.0,0.0,RVD2_1)
      RT_15 = RVD2_1(1)

! 600:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_5 = NINT(RT_15)

! 610:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_17,1.0,0.0,0.0,RVD2_1)
      RT_18 = RVD2_1(1)

! 620:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_6 = NINT(RT_18)

! 630:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_20,1.0,0.0,0.0,RVD2_1)
      RT_21 = RVD2_1(1)

! 640:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_7 = NINT(RT_21)

! 650:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_23,1.0,0.0,0.0,RVD2_1)
      RT_24 = RVD2_1(1)

! 660:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_8 = NINT(RT_24)

! 670:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_26,1.0,0.0,0.0,RVD2_1)
      RT_27 = RVD2_1(1)

! 680:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_9 = NINT(RT_27)

! 690:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_44,1.0,0.0,0.0,RVD2_1)
      RT_45 = RVD2_1(1)

! 700:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_18 = NINT(RT_45)

! 710:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_42,1.0,0.0,0.0,RVD2_1)
      RT_43 = RVD2_1(1)

! 720:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_17 = NINT(RT_43)

! 730:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_40,1.0,0.0,0.0,RVD2_1)
      RT_41 = RVD2_1(1)

! 740:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_16 = NINT(RT_41)

! 750:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_38,1.0,0.0,0.0,RVD2_1)
      RT_39 = RVD2_1(1)

! 760:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_15 = NINT(RT_39)

! 770:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_36,1.0,0.0,0.0,RVD2_1)
      RT_37 = RVD2_1(1)

! 780:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_14 = NINT(RT_37)

! 790:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_34,1.0,0.0,0.0,RVD2_1)
      RT_35 = RVD2_1(1)

! 800:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_13 = NINT(RT_35)

! 810:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_32,1.0,0.0,0.0,RVD2_1)
      RT_33 = RVD2_1(1)

! 820:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_12 = NINT(RT_33)

! 830:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_30,1.0,0.0,0.0,RVD2_1)
      RT_31 = RVD2_1(1)

! 840:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_11 = NINT(RT_31)

! 850:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,N,RT_28,1.0,0.0,0.0,RVD2_1)
      RT_29 = RVD2_1(1)

! 860:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_10 = NINT(RT_29)

! 870:[select] Two Input Selector 
      IF (IT_18 .EQ. RTCI(NRTCI)) THEN
         Y2_out = Y2_in
      ELSE
         Y2_out = Y1_in
      ENDIF
      NRTCI = NRTCI + 1
!

! 880:[select] Two Input Selector 
      IF (IT_17 .EQ. RTCI(NRTCI)) THEN
         Y3_out = Y3_in
      ELSE
         Y3_out = Y2_out
      ENDIF
      NRTCI = NRTCI + 1
!

! 890:[select] Two Input Selector 
      IF (IT_16 .EQ. RTCI(NRTCI)) THEN
         Y4_out = Y4_in
      ELSE
         Y4_out = Y3_out
      ENDIF
      NRTCI = NRTCI + 1
!

! 900:[select] Two Input Selector 
      IF (IT_15 .EQ. RTCI(NRTCI)) THEN
         Y5_out = Y5_in
      ELSE
         Y5_out = Y4_out
      ENDIF
      NRTCI = NRTCI + 1
!

! 910:[select] Two Input Selector 
      IF (IT_14 .EQ. RTCI(NRTCI)) THEN
         Y6_out = Y6_in
      ELSE
         Y6_out = Y5_out
      ENDIF
      NRTCI = NRTCI + 1
!

! 920:[select] Two Input Selector 
      IF (IT_13 .EQ. RTCI(NRTCI)) THEN
         Y7_out = Y7_in
      ELSE
         Y7_out = Y6_out
      ENDIF
      NRTCI = NRTCI + 1
!

! 930:[select] Two Input Selector 
      IF (IT_12 .EQ. RTCI(NRTCI)) THEN
         Y8_out = Y8_in
      ELSE
         Y8_out = Y7_out
      ENDIF
      NRTCI = NRTCI + 1
!

! 940:[select] Two Input Selector 
      IF (IT_11 .EQ. RTCI(NRTCI)) THEN
         Y9_out = Y9_in
      ELSE
         Y9_out = Y8_out
      ENDIF
      NRTCI = NRTCI + 1
!

! 950:[select] Two Input Selector 
      IF (IT_10 .EQ. RTCI(NRTCI)) THEN
         Y10_out = Y10_in
      ELSE
         Y10_out = Y9_out
      ENDIF
      NRTCI = NRTCI + 1
!

! 960:[select] Two Input Selector 
      IF (IT_9 .EQ. RTCI(NRTCI)) THEN
         X10_out = X10_in
      ELSE
         X10_out = RT_25
      ENDIF
      NRTCI = NRTCI + 1
!

! 970:[select] Two Input Selector 
      IF (IT_8 .EQ. RTCI(NRTCI)) THEN
         X9_out = X9_in
      ELSE
         X9_out = RT_22
      ENDIF
      NRTCI = NRTCI + 1
!

! 980:[select] Two Input Selector 
      IF (IT_7 .EQ. RTCI(NRTCI)) THEN
         X8_out = X8_in
      ELSE
         X8_out = RT_19
      ENDIF
      NRTCI = NRTCI + 1
!

! 990:[select] Two Input Selector 
      IF (IT_6 .EQ. RTCI(NRTCI)) THEN
         X7_out = X7_in
      ELSE
         X7_out = RT_16
      ENDIF
      NRTCI = NRTCI + 1
!

! 1000:[select] Two Input Selector 
      IF (IT_5 .EQ. RTCI(NRTCI)) THEN
         X6_out = X6_in
      ELSE
         X6_out = RT_13
      ENDIF
      NRTCI = NRTCI + 1
!

! 1010:[select] Two Input Selector 
      IF (IT_4 .EQ. RTCI(NRTCI)) THEN
         X5_out = X5_in
      ELSE
         X5_out = RT_10
      ENDIF
      NRTCI = NRTCI + 1
!

! 1020:[select] Two Input Selector 
      IF (IT_3 .EQ. RTCI(NRTCI)) THEN
         X4_out = X4_in
      ELSE
         X4_out = RT_7
      ENDIF
      NRTCI = NRTCI + 1
!

! 1030:[select] Two Input Selector 
      IF (IT_2 .EQ. RTCI(NRTCI)) THEN
         X3_out = X3_in
      ELSE
         X3_out = RT_6
      ENDIF
      NRTCI = NRTCI + 1
!

! 1040:[select] Two Input Selector 
      IF (IT_1 .EQ. RTCI(NRTCI)) THEN
         X2_out = X2_in
      ELSE
         X2_out = RT_1
      ENDIF
      NRTCI = NRTCI + 1
!

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 1) = Y10_out
      STOF(ISTOF + 2) = Y9_out
      STOF(ISTOF + 3) = Y8_out
      STOF(ISTOF + 4) = Y7_out
      STOF(ISTOF + 5) = Y6_out
      STOF(ISTOF + 6) = Y5_out
      STOF(ISTOF + 7) = Y4_out
      STOF(ISTOF + 8) = Y3_out
      STOF(ISTOF + 9) = Y2_out
      STOF(ISTOF + 10) = Y1_out
      STOF(ISTOF + 11) = X10_out
      STOF(ISTOF + 12) = X9_out
      STOF(ISTOF + 13) = X8_out
      STOF(ISTOF + 14) = X7_out
      STOF(ISTOF + 15) = X6_out
      STOF(ISTOF + 16) = X5_out
      STOF(ISTOF + 17) = X4_out
      STOF(ISTOF + 18) = X3_out
      STOF(ISTOF + 19) = X2_out
      STOF(ISTOF + 20) = X1_out
      STOF(ISTOF + 21) = N
      STOF(ISTOF + 22) = Y10_in
      STOF(ISTOF + 23) = Y9_in
      STOF(ISTOF + 24) = Y8_in
      STOF(ISTOF + 25) = Y7_in
      STOF(ISTOF + 26) = Y6_in
      STOF(ISTOF + 27) = Y5_in
      STOF(ISTOF + 28) = Y4_in
      STOF(ISTOF + 29) = Y3_in
      STOF(ISTOF + 30) = Y2_in
      STOF(ISTOF + 31) = Y1_in
      STOF(ISTOF + 32) = X10_in
      STOF(ISTOF + 33) = X9_in
      STOF(ISTOF + 34) = X8_in
      STOF(ISTOF + 35) = X7_in
      STOF(ISTOF + 36) = X6_in
      STOF(ISTOF + 37) = X5_in
      STOF(ISTOF + 38) = X4_in
      STOF(ISTOF + 39) = X3_in
      STOF(ISTOF + 40) = X2_in
      STOF(ISTOF + 41) = X1_in
      STOF(ISTOF + 42) = RT_1
      STOI(ISTOI + 1) = IT_1
      STOF(ISTOF + 43) = RT_2
      STOF(ISTOF + 44) = RT_3
      STOF(ISTOF + 45) = RT_4
      STOF(ISTOF + 46) = RT_5
      STOI(ISTOI + 2) = IT_2
      STOF(ISTOF + 47) = RT_6
      STOF(ISTOF + 48) = RT_7
      STOI(ISTOI + 3) = IT_3
      STOF(ISTOF + 49) = RT_8
      STOF(ISTOF + 50) = RT_9
      STOF(ISTOF + 51) = RT_10
      STOI(ISTOI + 4) = IT_4
      STOF(ISTOF + 52) = RT_11
      STOF(ISTOF + 53) = RT_12
      STOF(ISTOF + 54) = RT_13
      STOI(ISTOI + 5) = IT_5
      STOF(ISTOF + 55) = RT_14
      STOF(ISTOF + 56) = RT_15
      STOF(ISTOF + 57) = RT_16
      STOI(ISTOI + 6) = IT_6
      STOF(ISTOF + 58) = RT_17
      STOF(ISTOF + 59) = RT_18
      STOF(ISTOF + 60) = RT_19
      STOI(ISTOI + 7) = IT_7
      STOF(ISTOF + 61) = RT_20
      STOF(ISTOF + 62) = RT_21
      STOF(ISTOF + 63) = RT_22
      STOI(ISTOI + 8) = IT_8
      STOF(ISTOF + 64) = RT_23
      STOF(ISTOF + 65) = RT_24
      STOF(ISTOF + 66) = RT_25
      STOI(ISTOI + 9) = IT_9
      STOF(ISTOF + 67) = RT_26
      STOF(ISTOF + 68) = RT_27
      STOF(ISTOF + 69) = RT_28
      STOF(ISTOF + 70) = RT_29
      STOI(ISTOI + 10) = IT_10
      STOF(ISTOF + 71) = RT_30
      STOF(ISTOF + 72) = RT_31
      STOI(ISTOI + 11) = IT_11
      STOF(ISTOF + 73) = RT_32
      STOF(ISTOF + 74) = RT_33
      STOI(ISTOI + 12) = IT_12
      STOF(ISTOF + 75) = RT_34
      STOF(ISTOF + 76) = RT_35
      STOI(ISTOI + 13) = IT_13
      STOF(ISTOF + 77) = RT_36
      STOF(ISTOF + 78) = RT_37
      STOI(ISTOI + 14) = IT_14
      STOF(ISTOF + 79) = RT_38
      STOF(ISTOF + 80) = RT_39
      STOI(ISTOI + 15) = IT_15
      STOF(ISTOF + 81) = RT_40
      STOF(ISTOF + 82) = RT_41
      STOI(ISTOI + 16) = IT_16
      STOI(ISTOI + 17) = IT_17
      STOF(ISTOF + 83) = RT_42
      STOF(ISTOF + 84) = RT_43
      STOF(ISTOF + 85) = RT_44
      STOF(ISTOF + 86) = RT_45
      STOI(ISTOI + 18) = IT_18


!---------------------------------------
! Transfer to Exports
!---------------------------------------
      !Y10_out  is output
      !Y9_out   is output
      !Y8_out   is output
      !Y7_out   is output
      !Y6_out   is output
      !Y5_out   is output
      !Y4_out   is output
      !Y3_out   is output
      !Y2_out   is output
      Y1_out   = Y1_in
      !X10_out  is output
      !X9_out   is output
      !X8_out   is output
      !X7_out   is output
      !X6_out   is output
      !X5_out   is output
      !X4_out   is output
      !X3_out   is output
      !X2_out   is output
      X1_out   = X1_in

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE SignalTruncator_2_3Out()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices

! Control Signals
      REAL     RT_1, RT_2, RT_4, RT_6, RT_7, RT_8
      REAL     RT_10, RT_11, RT_13, RT_14, RT_16
      REAL     RT_17, RT_19, RT_20, RT_22, RT_23
      REAL     RT_25, RT_26, RT_28, RT_30, RT_32
      REAL     RT_34, RT_36, RT_38, RT_40, RT_42
      REAL     RT_44

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC          ! Storage Indices
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_1     = STOF(ISTOF + 42)
      RT_2     = STOF(ISTOF + 43)
      RT_4     = STOF(ISTOF + 45)
      RT_6     = STOF(ISTOF + 47)
      RT_7     = STOF(ISTOF + 48)
      RT_8     = STOF(ISTOF + 49)
      RT_10    = STOF(ISTOF + 51)
      RT_11    = STOF(ISTOF + 52)
      RT_13    = STOF(ISTOF + 54)
      RT_14    = STOF(ISTOF + 55)
      RT_16    = STOF(ISTOF + 57)
      RT_17    = STOF(ISTOF + 58)
      RT_19    = STOF(ISTOF + 60)
      RT_20    = STOF(ISTOF + 61)
      RT_22    = STOF(ISTOF + 63)
      RT_23    = STOF(ISTOF + 64)
      RT_25    = STOF(ISTOF + 66)
      RT_26    = STOF(ISTOF + 67)
      RT_28    = STOF(ISTOF + 69)
      RT_30    = STOF(ISTOF + 71)
      RT_32    = STOF(ISTOF + 73)
      RT_34    = STOF(ISTOF + 75)
      RT_36    = STOF(ISTOF + 77)
      RT_38    = STOF(ISTOF + 79)
      RT_40    = STOF(ISTOF + 81)
      RT_42    = STOF(ISTOF + 83)
      RT_44    = STOF(ISTOF + 85)


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'SignalTruncator_2_3.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 70:[const] Real Constant 

      RT_1 = 99999.0

! 90:[const] Real Constant 

      RT_6 = 99999.0

! 110:[const] Real Constant 

      RT_7 = 99999.0

! 130:[const] Real Constant 

      RT_10 = 99999.0

! 150:[const] Real Constant 

      RT_13 = 99999.0

! 170:[const] Real Constant 

      RT_16 = 99999.0

! 190:[const] Real Constant 

      RT_2 = 1.0

! 200:[const] Real Constant 

      RT_19 = 99999.0

! 210:[const] Real Constant 

      RT_4 = 2.0

! 220:[const] Real Constant 

      RT_22 = 99999.0

! 230:[const] Real Constant 

      RT_8 = 3.0

! 240:[const] Real Constant 

      RT_25 = 99999.0

! 250:[const] Real Constant 

      RT_11 = 4.0

! 260:[const] Real Constant 

      RT_14 = 5.0

! 280:[const] Real Constant 

      RT_17 = 6.0

! 300:[const] Real Constant 

      RT_20 = 7.0

! 320:[const] Real Constant 

      RT_23 = 8.0

! 340:[const] Real Constant 

      RT_26 = 9.0

! 420:[const] Real Constant 

      RT_44 = 1.0

! 430:[const] Real Constant 

      RT_42 = 2.0

! 440:[const] Real Constant 

      RT_40 = 3.0

! 450:[const] Real Constant 

      RT_38 = 4.0

! 460:[const] Real Constant 

      RT_36 = 5.0

! 470:[const] Real Constant 

      RT_34 = 6.0

! 480:[const] Real Constant 

      RT_32 = 7.0

! 490:[const] Real Constant 

      RT_30 = 8.0

! 500:[const] Real Constant 

      RT_28 = 9.0

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 42) = RT_1
      STOF(ISTOF + 43) = RT_2
      STOF(ISTOF + 45) = RT_4
      STOF(ISTOF + 47) = RT_6
      STOF(ISTOF + 48) = RT_7
      STOF(ISTOF + 49) = RT_8
      STOF(ISTOF + 51) = RT_10
      STOF(ISTOF + 52) = RT_11
      STOF(ISTOF + 54) = RT_13
      STOF(ISTOF + 55) = RT_14
      STOF(ISTOF + 57) = RT_16
      STOF(ISTOF + 58) = RT_17
      STOF(ISTOF + 60) = RT_19
      STOF(ISTOF + 61) = RT_20
      STOF(ISTOF + 63) = RT_22
      STOF(ISTOF + 64) = RT_23
      STOF(ISTOF + 66) = RT_25
      STOF(ISTOF + 67) = RT_26
      STOF(ISTOF + 69) = RT_28
      STOF(ISTOF + 71) = RT_30
      STOF(ISTOF + 73) = RT_32
      STOF(ISTOF + 75) = RT_34
      STOF(ISTOF + 77) = RT_36
      STOF(ISTOF + 79) = RT_38
      STOF(ISTOF + 81) = RT_40
      STOF(ISTOF + 83) = RT_42
      STOF(ISTOF + 85) = RT_44


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE SignalTruncator_2_3Dyn_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_1, RT_2, RT_4, RT_6, RT_7, RT_8
      REAL     RT_10, RT_11, RT_13, RT_14, RT_16
      REAL     RT_17, RT_19, RT_20, RT_22, RT_23
      REAL     RT_25, RT_26, RT_28, RT_30, RT_32
      REAL     RT_34, RT_36, RT_38, RT_40, RT_42
      REAL     RT_44

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 70:[const] Real Constant 
      RT_1 = 99999.0

! 90:[const] Real Constant 
      RT_6 = 99999.0

! 110:[const] Real Constant 
      RT_7 = 99999.0

! 130:[const] Real Constant 
      RT_10 = 99999.0

! 150:[const] Real Constant 
      RT_13 = 99999.0

! 170:[const] Real Constant 
      RT_16 = 99999.0

! 190:[const] Real Constant 
      RT_2 = 1.0

! 200:[const] Real Constant 
      RT_19 = 99999.0

! 210:[const] Real Constant 
      RT_4 = 2.0

! 220:[const] Real Constant 
      RT_22 = 99999.0

! 230:[const] Real Constant 
      RT_8 = 3.0

! 240:[const] Real Constant 
      RT_25 = 99999.0

! 250:[const] Real Constant 
      RT_11 = 4.0

! 260:[const] Real Constant 
      RT_14 = 5.0

! 280:[const] Real Constant 
      RT_17 = 6.0

! 300:[const] Real Constant 
      RT_20 = 7.0

! 320:[const] Real Constant 
      RT_23 = 8.0

! 340:[const] Real Constant 
      RT_26 = 9.0

! 420:[const] Real Constant 
      RT_44 = 1.0

! 430:[const] Real Constant 
      RT_42 = 2.0

! 440:[const] Real Constant 
      RT_40 = 3.0

! 450:[const] Real Constant 
      RT_38 = 4.0

! 460:[const] Real Constant 
      RT_36 = 5.0

! 470:[const] Real Constant 
      RT_34 = 6.0

! 480:[const] Real Constant 
      RT_32 = 7.0

! 490:[const] Real Constant 
      RT_30 = 8.0

! 500:[const] Real Constant 
      RT_28 = 9.0

! 510:[compar] Two Input Comparator 

! 520:[unity] Type/Shape conversion block 

! 530:[compar] Two Input Comparator 

! 540:[unity] Type/Shape conversion block 

! 550:[compar] Two Input Comparator 

! 560:[unity] Type/Shape conversion block 

! 570:[compar] Two Input Comparator 

! 580:[unity] Type/Shape conversion block 

! 590:[compar] Two Input Comparator 

! 600:[unity] Type/Shape conversion block 

! 610:[compar] Two Input Comparator 

! 620:[unity] Type/Shape conversion block 

! 630:[compar] Two Input Comparator 

! 640:[unity] Type/Shape conversion block 

! 650:[compar] Two Input Comparator 

! 660:[unity] Type/Shape conversion block 

! 670:[compar] Two Input Comparator 

! 680:[unity] Type/Shape conversion block 

! 690:[compar] Two Input Comparator 

! 700:[unity] Type/Shape conversion block 

! 710:[compar] Two Input Comparator 

! 720:[unity] Type/Shape conversion block 

! 730:[compar] Two Input Comparator 

! 740:[unity] Type/Shape conversion block 

! 750:[compar] Two Input Comparator 

! 760:[unity] Type/Shape conversion block 

! 770:[compar] Two Input Comparator 

! 780:[unity] Type/Shape conversion block 

! 790:[compar] Two Input Comparator 

! 800:[unity] Type/Shape conversion block 

! 810:[compar] Two Input Comparator 

! 820:[unity] Type/Shape conversion block 

! 830:[compar] Two Input Comparator 

! 840:[unity] Type/Shape conversion block 

! 850:[compar] Two Input Comparator 

! 860:[unity] Type/Shape conversion block 

! 870:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 880:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 890:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 900:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 910:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 920:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 930:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 940:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 950:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 960:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 970:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 980:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 990:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 1000:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 1010:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 1020:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 1030:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 1040:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

      RETURN
      END

!=======================================================================

      SUBROUTINE SignalTruncator_2_3Out_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_1, RT_2, RT_4, RT_6, RT_7, RT_8
      REAL     RT_10, RT_11, RT_13, RT_14, RT_16
      REAL     RT_17, RT_19, RT_20, RT_22, RT_23
      REAL     RT_25, RT_26, RT_28, RT_30, RT_32
      REAL     RT_34, RT_36, RT_38, RT_40, RT_42
      REAL     RT_44

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 70:[const] Real Constant 
      RT_1 = 99999.0

! 90:[const] Real Constant 
      RT_6 = 99999.0

! 110:[const] Real Constant 
      RT_7 = 99999.0

! 130:[const] Real Constant 
      RT_10 = 99999.0

! 150:[const] Real Constant 
      RT_13 = 99999.0

! 170:[const] Real Constant 
      RT_16 = 99999.0

! 190:[const] Real Constant 
      RT_2 = 1.0

! 200:[const] Real Constant 
      RT_19 = 99999.0

! 210:[const] Real Constant 
      RT_4 = 2.0

! 220:[const] Real Constant 
      RT_22 = 99999.0

! 230:[const] Real Constant 
      RT_8 = 3.0

! 240:[const] Real Constant 
      RT_25 = 99999.0

! 250:[const] Real Constant 
      RT_11 = 4.0

! 260:[const] Real Constant 
      RT_14 = 5.0

! 280:[const] Real Constant 
      RT_17 = 6.0

! 300:[const] Real Constant 
      RT_20 = 7.0

! 320:[const] Real Constant 
      RT_23 = 8.0

! 340:[const] Real Constant 
      RT_26 = 9.0

! 420:[const] Real Constant 
      RT_44 = 1.0

! 430:[const] Real Constant 
      RT_42 = 2.0

! 440:[const] Real Constant 
      RT_40 = 3.0

! 450:[const] Real Constant 
      RT_38 = 4.0

! 460:[const] Real Constant 
      RT_36 = 5.0

! 470:[const] Real Constant 
      RT_34 = 6.0

! 480:[const] Real Constant 
      RT_32 = 7.0

! 490:[const] Real Constant 
      RT_30 = 8.0

! 500:[const] Real Constant 
      RT_28 = 9.0

      RETURN
      END

