!=======================================================================
! Generated by: PSCAD v5.0.1.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : setpointProfiles
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE setpointProfilesDyn(Pstp, PFstp, Qstp, Vstp, Pman,     &
     &   PFman, Qman, Vman, AUXman, AUXstp, P1stp, P1man, Q1stp, Q1man, &
     &   PF1stp, PF1man, Vstp_X1, Vstp_Y1, Vstp_Y2, VstpBase, Vstp_Y3,  &
     &   Vstp_Y4, Vstp_Y5, Vstp_Y6, Vstp_Y7, Vstp_Y8, Vstp_Y9, Vstp_X2, &
     &   Vstp_X3, VstpMethod, Vstp_X4, Vstp_X5, Vstp_X6, Vstp_X7,       &
     &   Vstp_X8, Vstp_X9, Vstp_X10, Vstp_Y10, Vstp_N, VstpDefault,     &
     &   Qstp_X1, Qstp_Y1, Qstp_Y2, QstpBase, Qstp_Y3, Qstp_Y4,         &
     &   Qstp_Y5, Qstp_Y6, Qstp_Y7, Qstp_Y8, Qstp_Y9, Qstp_X2, Qstp_X3, &
     &   QstpMethod, Qstp_X4, Qstp_X5, Qstp_X6, Qstp_X7, Qstp_X8,       &
     &   Qstp_X9, Qstp_X10, Qstp_Y10, Qstp_N, QstpDefault, Q1stp_X1,    &
     &   Q1stp_Y1, Q1stp_Y2, Q1stpBase, Q1stp_Y3, Q1stp_Y4, Q1stp_Y5,   &
     &   Q1stp_Y6, Q1stp_Y7, Q1stp_Y8, Q1stp_Y9, Q1stp_X2, Q1stp_X3,    &
     &   Q1stpMethod, Q1stp_X4, Q1stp_X5, Q1stp_X6, Q1stp_X7, Q1stp_X8, &
     &   Q1stp_X9, Q1stp_X10, Q1stp_Y10, Q1stp_N, Q1stpDefault,         &
     &   PFstp_X1, PFstp_Y1, PFstp_Y2, PFstpBase, PFstp_Y3, PFstp_Y4,   &
     &   PFstp_Y5, PFstp_Y6, PFstp_Y7, PFstp_Y8, PFstp_Y9, PFstp_X2,    &
     &   PFstp_X3, PFstpMethod, PFstp_X4, PFstp_X5, PFstp_X6, PFstp_X7, &
     &   PFstp_X8, PFstp_X9, PFstp_X10, PFstp_Y10, PFstp_N,             &
     &   PFstpDefault, PF1stp_X1, PF1stp_Y1, PF1stp_Y2, PF1stpBase,     &
     &   PF1stp_Y3, PF1stp_Y4, PF1stp_Y5, PF1stp_Y6, PF1stp_Y7,         &
     &   PF1stp_Y8, PF1stp_Y9, PF1stp_X2, PF1stp_X3, PF1stpMethod,      &
     &   PF1stp_X4, PF1stp_X5, PF1stp_X6, PF1stp_X7, PF1stp_X8,         &
     &   PF1stp_X9, PF1stp_X10, PF1stp_Y10, PF1stp_N, PF1stpDefault,    &
     &   Pstp_X1, Pstp_Y1, Pstp_Y2, PstpBase, Pstp_Y3, Pstp_Y4,         &
     &   Pstp_Y5, Pstp_Y6, Pstp_Y7, Pstp_Y8, Pstp_Y9, Pstp_X2, Pstp_X3, &
     &   PstpMethod, Pstp_X4, Pstp_X5, Pstp_X6, Pstp_X7, Pstp_X8,       &
     &   Pstp_X9, Pstp_X10, Pstp_Y10, Pstp_N, PstpDefault, P1stp_X1,    &
     &   P1stp_Y1, P1stp_Y2, P1stpBase, P1stp_Y3, P1stp_Y4, P1stp_Y5,   &
     &   P1stp_Y6, P1stp_Y7, P1stp_Y8, P1stp_Y9, P1stp_X2, P1stp_X3,    &
     &   P1stpMethod, P1stp_X4, P1stp_X5, P1stp_X6, P1stp_X7, P1stp_X8, &
     &   P1stp_X9, P1stp_X10, P1stp_Y10, P1stp_N, P1stpDefault,         &
     &   AUXstp_X1, AUXstp_Y1, AUXstp_Y2, AUXstpBase, AUXstp_Y3,        &
     &   AUXstp_Y4, AUXstp_Y5, AUXstp_Y6, AUXstp_Y7, AUXstp_Y8,         &
     &   AUXstp_Y9, AUXstp_X2, AUXstp_X3, AUXstpMethod, AUXstp_X4,      &
     &   AUXstp_X5, AUXstp_X6, AUXstp_X7, AUXstp_X8, AUXstp_X9,         &
     &   AUXstp_X10, AUXstp_Y10, AUXstp_N, AUXstpDefault)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

      REAL    XYFUNC        ! XY-Transfer function
!     SUBR    XY_profile_2Dyn  ! 
!     SUBR    EMTDC_X2COMP  ! 'Comparator with Interpolation'

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      INTEGER, INTENT(IN)  :: VstpMethod, Vstp_N
      INTEGER, INTENT(IN)  :: QstpMethod, Qstp_N
      INTEGER, INTENT(IN)  :: Q1stpMethod
      INTEGER, INTENT(IN)  :: Q1stp_N
      INTEGER, INTENT(IN)  :: PFstpMethod
      INTEGER, INTENT(IN)  :: PFstp_N
      INTEGER, INTENT(IN)  :: PF1stpMethod
      INTEGER, INTENT(IN)  :: PF1stp_N
      INTEGER, INTENT(IN)  :: PstpMethod, Pstp_N
      INTEGER, INTENT(IN)  :: P1stpMethod
      INTEGER, INTENT(IN)  :: P1stp_N
      INTEGER, INTENT(IN)  :: AUXstpMethod
      INTEGER, INTENT(IN)  :: AUXstp_N
      REAL,    INTENT(IN)  :: Pman, PFman, Qman
      REAL,    INTENT(IN)  :: Vman, AUXman, P1man
      REAL,    INTENT(IN)  :: Q1man, PF1man
      REAL,    INTENT(IN)  :: Vstp_X1, Vstp_Y1
      REAL,    INTENT(IN)  :: Vstp_Y2, VstpBase
      REAL,    INTENT(IN)  :: Vstp_Y3, Vstp_Y4
      REAL,    INTENT(IN)  :: Vstp_Y5, Vstp_Y6
      REAL,    INTENT(IN)  :: Vstp_Y7, Vstp_Y8
      REAL,    INTENT(IN)  :: Vstp_Y9, Vstp_X2
      REAL,    INTENT(IN)  :: Vstp_X3, Vstp_X4
      REAL,    INTENT(IN)  :: Vstp_X5, Vstp_X6
      REAL,    INTENT(IN)  :: Vstp_X7, Vstp_X8
      REAL,    INTENT(IN)  :: Vstp_X9, Vstp_X10
      REAL,    INTENT(IN)  :: Vstp_Y10
      REAL,    INTENT(IN)  :: VstpDefault
      REAL,    INTENT(IN)  :: Qstp_X1, Qstp_Y1
      REAL,    INTENT(IN)  :: Qstp_Y2, QstpBase
      REAL,    INTENT(IN)  :: Qstp_Y3, Qstp_Y4
      REAL,    INTENT(IN)  :: Qstp_Y5, Qstp_Y6
      REAL,    INTENT(IN)  :: Qstp_Y7, Qstp_Y8
      REAL,    INTENT(IN)  :: Qstp_Y9, Qstp_X2
      REAL,    INTENT(IN)  :: Qstp_X3, Qstp_X4
      REAL,    INTENT(IN)  :: Qstp_X5, Qstp_X6
      REAL,    INTENT(IN)  :: Qstp_X7, Qstp_X8
      REAL,    INTENT(IN)  :: Qstp_X9, Qstp_X10
      REAL,    INTENT(IN)  :: Qstp_Y10
      REAL,    INTENT(IN)  :: QstpDefault
      REAL,    INTENT(IN)  :: Q1stp_X1, Q1stp_Y1
      REAL,    INTENT(IN)  :: Q1stp_Y2, Q1stpBase
      REAL,    INTENT(IN)  :: Q1stp_Y3, Q1stp_Y4
      REAL,    INTENT(IN)  :: Q1stp_Y5, Q1stp_Y6
      REAL,    INTENT(IN)  :: Q1stp_Y7, Q1stp_Y8
      REAL,    INTENT(IN)  :: Q1stp_Y9, Q1stp_X2
      REAL,    INTENT(IN)  :: Q1stp_X3, Q1stp_X4
      REAL,    INTENT(IN)  :: Q1stp_X5, Q1stp_X6
      REAL,    INTENT(IN)  :: Q1stp_X7, Q1stp_X8
      REAL,    INTENT(IN)  :: Q1stp_X9, Q1stp_X10
      REAL,    INTENT(IN)  :: Q1stp_Y10
      REAL,    INTENT(IN)  :: Q1stpDefault
      REAL,    INTENT(IN)  :: PFstp_X1, PFstp_Y1
      REAL,    INTENT(IN)  :: PFstp_Y2, PFstpBase
      REAL,    INTENT(IN)  :: PFstp_Y3, PFstp_Y4
      REAL,    INTENT(IN)  :: PFstp_Y5, PFstp_Y6
      REAL,    INTENT(IN)  :: PFstp_Y7, PFstp_Y8
      REAL,    INTENT(IN)  :: PFstp_Y9, PFstp_X2
      REAL,    INTENT(IN)  :: PFstp_X3, PFstp_X4
      REAL,    INTENT(IN)  :: PFstp_X5, PFstp_X6
      REAL,    INTENT(IN)  :: PFstp_X7, PFstp_X8
      REAL,    INTENT(IN)  :: PFstp_X9, PFstp_X10
      REAL,    INTENT(IN)  :: PFstp_Y10
      REAL,    INTENT(IN)  :: PFstpDefault
      REAL,    INTENT(IN)  :: PF1stp_X1
      REAL,    INTENT(IN)  :: PF1stp_Y1
      REAL,    INTENT(IN)  :: PF1stp_Y2
      REAL,    INTENT(IN)  :: PF1stpBase
      REAL,    INTENT(IN)  :: PF1stp_Y3
      REAL,    INTENT(IN)  :: PF1stp_Y4
      REAL,    INTENT(IN)  :: PF1stp_Y5
      REAL,    INTENT(IN)  :: PF1stp_Y6
      REAL,    INTENT(IN)  :: PF1stp_Y7
      REAL,    INTENT(IN)  :: PF1stp_Y8
      REAL,    INTENT(IN)  :: PF1stp_Y9
      REAL,    INTENT(IN)  :: PF1stp_X2
      REAL,    INTENT(IN)  :: PF1stp_X3
      REAL,    INTENT(IN)  :: PF1stp_X4
      REAL,    INTENT(IN)  :: PF1stp_X5
      REAL,    INTENT(IN)  :: PF1stp_X6
      REAL,    INTENT(IN)  :: PF1stp_X7
      REAL,    INTENT(IN)  :: PF1stp_X8
      REAL,    INTENT(IN)  :: PF1stp_X9
      REAL,    INTENT(IN)  :: PF1stp_X10
      REAL,    INTENT(IN)  :: PF1stp_Y10
      REAL,    INTENT(IN)  :: PF1stpDefault
      REAL,    INTENT(IN)  :: Pstp_X1, Pstp_Y1
      REAL,    INTENT(IN)  :: Pstp_Y2, PstpBase
      REAL,    INTENT(IN)  :: Pstp_Y3, Pstp_Y4
      REAL,    INTENT(IN)  :: Pstp_Y5, Pstp_Y6
      REAL,    INTENT(IN)  :: Pstp_Y7, Pstp_Y8
      REAL,    INTENT(IN)  :: Pstp_Y9, Pstp_X2
      REAL,    INTENT(IN)  :: Pstp_X3, Pstp_X4
      REAL,    INTENT(IN)  :: Pstp_X5, Pstp_X6
      REAL,    INTENT(IN)  :: Pstp_X7, Pstp_X8
      REAL,    INTENT(IN)  :: Pstp_X9, Pstp_X10
      REAL,    INTENT(IN)  :: Pstp_Y10
      REAL,    INTENT(IN)  :: PstpDefault
      REAL,    INTENT(IN)  :: P1stp_X1, P1stp_Y1
      REAL,    INTENT(IN)  :: P1stp_Y2, P1stpBase
      REAL,    INTENT(IN)  :: P1stp_Y3, P1stp_Y4
      REAL,    INTENT(IN)  :: P1stp_Y5, P1stp_Y6
      REAL,    INTENT(IN)  :: P1stp_Y7, P1stp_Y8
      REAL,    INTENT(IN)  :: P1stp_Y9, P1stp_X2
      REAL,    INTENT(IN)  :: P1stp_X3, P1stp_X4
      REAL,    INTENT(IN)  :: P1stp_X5, P1stp_X6
      REAL,    INTENT(IN)  :: P1stp_X7, P1stp_X8
      REAL,    INTENT(IN)  :: P1stp_X9, P1stp_X10
      REAL,    INTENT(IN)  :: P1stp_Y10
      REAL,    INTENT(IN)  :: P1stpDefault
      REAL,    INTENT(IN)  :: AUXstp_X1
      REAL,    INTENT(IN)  :: AUXstp_Y1
      REAL,    INTENT(IN)  :: AUXstp_Y2
      REAL,    INTENT(IN)  :: AUXstpBase
      REAL,    INTENT(IN)  :: AUXstp_Y3
      REAL,    INTENT(IN)  :: AUXstp_Y4
      REAL,    INTENT(IN)  :: AUXstp_Y5
      REAL,    INTENT(IN)  :: AUXstp_Y6
      REAL,    INTENT(IN)  :: AUXstp_Y7
      REAL,    INTENT(IN)  :: AUXstp_Y8
      REAL,    INTENT(IN)  :: AUXstp_Y9
      REAL,    INTENT(IN)  :: AUXstp_X2
      REAL,    INTENT(IN)  :: AUXstp_X3
      REAL,    INTENT(IN)  :: AUXstp_X4
      REAL,    INTENT(IN)  :: AUXstp_X5
      REAL,    INTENT(IN)  :: AUXstp_X6
      REAL,    INTENT(IN)  :: AUXstp_X7
      REAL,    INTENT(IN)  :: AUXstp_X8
      REAL,    INTENT(IN)  :: AUXstp_X9
      REAL,    INTENT(IN)  :: AUXstp_X10
      REAL,    INTENT(IN)  :: AUXstp_Y10
      REAL,    INTENT(IN)  :: AUXstpDefault
      REAL,    INTENT(OUT) :: Pstp, PFstp, Qstp
      REAL,    INTENT(OUT) :: Vstp, AUXstp, P1stp
      REAL,    INTENT(OUT) :: Q1stp, PF1stp

! Electrical Node Indices

! Control Signals
      INTEGER  IT_1, IT_2, IT_3, IT_4, IT_5, IT_6
      INTEGER  IT_7, IT_8, IT_9, IT_10, IT_11
      INTEGER  IT_12, IT_13, IT_14, IT_15, IT_16
      INTEGER  IT_17, IT_18, IT_19, IT_20, IT_21
      INTEGER  IT_22, IT_23, IT_24
      REAL     RT_1, RT_2, RT_3, RT_4, RT_5, RT_6
      REAL     RT_7, RT_8, RT_9, RT_10, RT_11
      REAL     RT_12, RT_13, RT_14, RT_15, RT_16
      REAL     RT_17, RT_18, RT_19, RT_20, RT_21
      REAL     RT_22, RT_23, RT_24, RT_25, RT_26
      REAL     RT_27, RT_28, RT_29, RT_30, RT_31
      REAL     RT_32, RT_33, RT_34, RT_35, RT_36
      REAL     RT_37, RT_38, RT_39, RT_40, RT_41
      REAL     RT_42, RT_43, RT_44, RT_45, RT_46
      REAL     RT_47, RT_48, RT_49, RT_50, RT_51
      REAL     RT_52, RT_53, RT_54, RT_55, RT_56
      REAL     RT_57, RT_58, RT_59, RT_60, RT_61
      REAL     RT_62, RT_63, RT_64, RT_65, RT_66
      REAL     RT_67, RT_68, RT_69, RT_70, RT_71
      REAL     RT_72, RT_73, RT_74, RT_75, RT_76
      REAL     RT_77, RT_78, RT_79, RT_80, RT_81
      REAL     RT_82, RT_83, RT_84, RT_85, RT_86
      REAL     RT_87, RT_88, RT_89, RT_90, RT_91
      REAL     RT_92, RT_93, RT_94, RT_95, RT_96
      REAL     RT_97, RT_98, RT_99, RT_100
      REAL     RT_101, RT_102, RT_103, RT_104

! Internal Variables
      REAL     RVD2_1(2)

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOI, ISTOF, IT_0                  ! Storage Indices
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOI     = NSTOI
      NSTOI     = NSTOI + 40
      ISTOF     = NSTOF
      NSTOF     = NSTOF + 296
      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      Pstp     = STOF(ISTOF + 1)
      PFstp    = STOF(ISTOF + 2)
      Qstp     = STOF(ISTOF + 3)
      Vstp     = STOF(ISTOF + 4)
      AUXstp   = STOF(ISTOF + 10)
      P1stp    = STOF(ISTOF + 11)
      Q1stp    = STOF(ISTOF + 13)
      PF1stp   = STOF(ISTOF + 15)
      RT_1     = STOF(ISTOF + 193)
      RT_2     = STOF(ISTOF + 194)
      RT_3     = STOF(ISTOF + 195)
      RT_4     = STOF(ISTOF + 196)
      RT_5     = STOF(ISTOF + 197)
      RT_6     = STOF(ISTOF + 198)
      RT_7     = STOF(ISTOF + 199)
      RT_8     = STOF(ISTOF + 200)
      RT_9     = STOF(ISTOF + 201)
      RT_10    = STOF(ISTOF + 202)
      RT_11    = STOF(ISTOF + 203)
      RT_12    = STOF(ISTOF + 204)
      RT_13    = STOF(ISTOF + 205)
      RT_14    = STOF(ISTOF + 206)
      RT_15    = STOF(ISTOF + 207)
      RT_16    = STOF(ISTOF + 208)
      IT_1     = STOI(ISTOI + 17)
      RT_17    = STOF(ISTOF + 209)
      RT_18    = STOF(ISTOF + 210)
      RT_19    = STOF(ISTOF + 211)
      RT_20    = STOF(ISTOF + 212)
      RT_21    = STOF(ISTOF + 213)
      RT_22    = STOF(ISTOF + 214)
      IT_2     = STOI(ISTOI + 18)
      RT_23    = STOF(ISTOF + 215)
      IT_3     = STOI(ISTOI + 19)
      RT_24    = STOF(ISTOF + 216)
      RT_25    = STOF(ISTOF + 217)
      RT_26    = STOF(ISTOF + 218)
      RT_27    = STOF(ISTOF + 219)
      RT_28    = STOF(ISTOF + 220)
      RT_29    = STOF(ISTOF + 221)
      RT_30    = STOF(ISTOF + 222)
      RT_31    = STOF(ISTOF + 223)
      IT_4     = STOI(ISTOI + 20)
      RT_32    = STOF(ISTOF + 224)
      RT_33    = STOF(ISTOF + 225)
      IT_5     = STOI(ISTOI + 21)
      RT_34    = STOF(ISTOF + 226)
      RT_35    = STOF(ISTOF + 227)
      RT_36    = STOF(ISTOF + 228)
      RT_37    = STOF(ISTOF + 229)
      RT_38    = STOF(ISTOF + 230)
      IT_6     = STOI(ISTOI + 22)
      IT_7     = STOI(ISTOI + 23)
      RT_39    = STOF(ISTOF + 231)
      RT_40    = STOF(ISTOF + 232)
      RT_41    = STOF(ISTOF + 233)
      RT_42    = STOF(ISTOF + 234)
      RT_43    = STOF(ISTOF + 235)
      RT_44    = STOF(ISTOF + 236)
      IT_8     = STOI(ISTOI + 24)
      RT_45    = STOF(ISTOF + 237)
      IT_9     = STOI(ISTOI + 25)
      RT_46    = STOF(ISTOF + 238)
      RT_47    = STOF(ISTOF + 239)
      RT_48    = STOF(ISTOF + 240)
      RT_49    = STOF(ISTOF + 241)
      RT_50    = STOF(ISTOF + 242)
      RT_51    = STOF(ISTOF + 243)
      RT_52    = STOF(ISTOF + 244)
      RT_53    = STOF(ISTOF + 245)
      IT_10    = STOI(ISTOI + 26)
      RT_54    = STOF(ISTOF + 246)
      RT_55    = STOF(ISTOF + 247)
      IT_11    = STOI(ISTOI + 27)
      RT_56    = STOF(ISTOF + 248)
      RT_57    = STOF(ISTOF + 249)
      RT_58    = STOF(ISTOF + 250)
      RT_59    = STOF(ISTOF + 251)
      RT_60    = STOF(ISTOF + 252)
      IT_12    = STOI(ISTOI + 28)
      RT_61    = STOF(ISTOF + 253)
      IT_13    = STOI(ISTOI + 29)
      RT_62    = STOF(ISTOF + 254)
      IT_14    = STOI(ISTOI + 30)
      RT_63    = STOF(ISTOF + 255)
      IT_15    = STOI(ISTOI + 31)
      RT_64    = STOF(ISTOF + 256)
      RT_65    = STOF(ISTOF + 257)
      RT_66    = STOF(ISTOF + 258)
      RT_67    = STOF(ISTOF + 259)
      RT_68    = STOF(ISTOF + 260)
      RT_69    = STOF(ISTOF + 261)
      RT_70    = STOF(ISTOF + 262)
      RT_71    = STOF(ISTOF + 263)
      RT_72    = STOF(ISTOF + 264)
      RT_73    = STOF(ISTOF + 265)
      RT_74    = STOF(ISTOF + 266)
      RT_75    = STOF(ISTOF + 267)
      IT_16    = STOI(ISTOI + 32)
      RT_76    = STOF(ISTOF + 268)
      RT_77    = STOF(ISTOF + 269)
      IT_17    = STOI(ISTOI + 33)
      RT_78    = STOF(ISTOF + 270)
      RT_79    = STOF(ISTOF + 271)
      RT_80    = STOF(ISTOF + 272)
      RT_81    = STOF(ISTOF + 273)
      RT_82    = STOF(ISTOF + 274)
      IT_18    = STOI(ISTOI + 34)
      RT_83    = STOF(ISTOF + 275)
      RT_84    = STOF(ISTOF + 276)
      RT_85    = STOF(ISTOF + 277)
      RT_86    = STOF(ISTOF + 278)
      IT_19    = STOI(ISTOI + 35)
      RT_87    = STOF(ISTOF + 279)
      RT_88    = STOF(ISTOF + 280)
      IT_20    = STOI(ISTOI + 36)
      RT_89    = STOF(ISTOF + 281)
      RT_90    = STOF(ISTOF + 282)
      RT_91    = STOF(ISTOF + 283)
      RT_92    = STOF(ISTOF + 284)
      RT_93    = STOF(ISTOF + 285)
      IT_21    = STOI(ISTOI + 37)
      IT_22    = STOI(ISTOI + 38)
      RT_94    = STOF(ISTOF + 286)
      RT_95    = STOF(ISTOF + 287)
      RT_96    = STOF(ISTOF + 288)
      RT_97    = STOF(ISTOF + 289)
      RT_98    = STOF(ISTOF + 290)
      RT_99    = STOF(ISTOF + 291)
      IT_23    = STOI(ISTOI + 39)
      RT_100   = STOF(ISTOF + 292)
      IT_24    = STOI(ISTOI + 40)
      RT_101   = STOF(ISTOF + 293)
      RT_102   = STOF(ISTOF + 294)
      RT_103   = STOF(ISTOF + 295)
      RT_104   = STOF(ISTOF + 296)


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'setpointProfiles.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 60:[time-sig] Output of Simulation Time 
      RT_4 = TIME

! 160:[time-sig] Output of Simulation Time 
      RT_27 = TIME

! 170:[xy_transfer_function] X-Y transfer function 'Vstp_profile'
      CALL COMPONENT_ID(ICALL_NO,626637343)
! File name: testProfiles/Vstp_profile.txt
      RT_24 = XYFUNC(0,RT_27,0,0.0,0.0,1.0,1.0,0)

! 280:[const] Real Constant 
      RT_25 = 0.5

! 300:[const] Real Constant 
      RT_21 = 1.5

! 360:[time-sig] Output of Simulation Time 
      RT_2 = TIME

! 370:[const] Real Constant 
      RT_19 = 2.5

! 460:[time-sig] Output of Simulation Time 
      RT_28 = TIME

! 480:[xy_transfer_function] X-Y transfer function 'Qstp_profile'
      CALL COMPONENT_ID(ICALL_NO,47901822)
! File name: testProfiles/Qstp_profile.txt
      RT_29 = XYFUNC(0,RT_28,0,0.0,0.0,1.0,1.0,0)

! 590:[const] Real Constant 
      RT_30 = 0.5

! 610:[const] Real Constant 
      RT_35 = 1.5

! 640:[const] Real Constant 
      RT_37 = 2.5

! 680:[time-sig] Output of Simulation Time 
      RT_14 = TIME

! 700:[XY_profile_2]  
      CALL XY_profile_2Dyn(RT_13, RT_14, Qstp_X1, Qstp_Y1, Qstp_X2, Qstp&
     &_Y2, Qstp_X3, Qstp_Y3, Qstp_X4, Qstp_Y4, Qstp_X5, Qstp_Y5, Qstp_X6&
     &, Qstp_Y6, Qstp_X7, Qstp_Y7, Qstp_X8, Qstp_Y8, Qstp_X9, Qstp_Y9, Q&
     &stp_X10, Qstp_Y10, QstpBase, Qstp_N)


! 790:[time-sig] Output of Simulation Time 
      RT_83 = TIME

! 800:[xy_transfer_function] X-Y transfer function 'Q1stp_profile'
      CALL COMPONENT_ID(ICALL_NO,2052650100)
! File name: testProfiles/Q1stp_profile.txt
      RT_84 = XYFUNC(0,RT_83,0,0.0,0.0,1.0,1.0,0)

! 910:[const] Real Constant 
      RT_85 = 0.5

! 930:[const] Real Constant 
      RT_90 = 1.5

! 960:[const] Real Constant 
      RT_92 = 2.5

! 1000:[time-sig] Output of Simulation Time 
      RT_6 = TIME

! 1100:[time-sig] Output of Simulation Time 
      RT_49 = TIME

! 1110:[xy_transfer_function] X-Y transfer function 'PFstp_profile'
      CALL COMPONENT_ID(ICALL_NO,1775954593)
! File name: testProfiles/PFstp_profile.txt
      RT_46 = XYFUNC(0,RT_49,0,0.0,0.0,1.0,1.0,0)

! 1220:[const] Real Constant 
      RT_47 = 0.5

! 1240:[const] Real Constant 
      RT_43 = 1.5

! 1250:[const] Real Constant 
      RT_41 = 2.5

! 1310:[time-sig] Output of Simulation Time 
      RT_16 = TIME

! 1330:[XY_profile_2]  
      CALL XY_profile_2Dyn(RT_15, RT_16, PFstp_X1, PFstp_Y1, PFstp_X2, P&
     &Fstp_Y2, PFstp_X3, PFstp_Y3, PFstp_X4, PFstp_Y4, PFstp_X5, PFstp_Y&
     &5, PFstp_X6, PFstp_Y6, PFstp_X7, PFstp_Y7, PFstp_X8, PFstp_Y8, PFs&
     &tp_X9, PFstp_Y9, PFstp_X10, PFstp_Y10, PFstpBase, PFstp_N)


! 1420:[time-sig] Output of Simulation Time 
      RT_104 = TIME

! 1430:[xy_transfer_function] X-Y transfer function 'PF1stp_profile'
      CALL COMPONENT_ID(ICALL_NO,1066702073)
! File name: testProfiles/PF1stp_profile.txt
      RT_101 = XYFUNC(0,RT_104,0,0.0,0.0,1.0,1.0,0)

! 1540:[const] Real Constant 
      RT_102 = 0.5

! 1560:[const] Real Constant 
      RT_98 = 1.5

! 1570:[const] Real Constant 
      RT_96 = 2.5

! 1630:[time-sig] Output of Simulation Time 
      RT_8 = TIME

! 1720:[time-sig] Output of Simulation Time 
      RT_50 = TIME

! 1740:[xy_transfer_function] X-Y transfer function 'Pstp_profile'
      CALL COMPONENT_ID(ICALL_NO,305157189)
! File name: testProfiles/Pstp_profile.txt
      RT_51 = XYFUNC(0,RT_50,0,0.0,0.0,1.0,1.0,0)

! 1850:[const] Real Constant 
      RT_52 = 0.5

! 1870:[const] Real Constant 
      RT_57 = 1.5

! 1930:[time-sig] Output of Simulation Time 
      RT_12 = TIME

! 1940:[const] Real Constant 
      RT_59 = 2.5

! 2030:[time-sig] Output of Simulation Time 
      RT_72 = TIME

! 2050:[xy_transfer_function] X-Y transfer function 'P1stp_profile'
      CALL COMPONENT_ID(ICALL_NO,2104320057)
! File name: testProfiles/P1stp_profile.txt
      RT_73 = XYFUNC(0,RT_72,0,0.0,0.0,1.0,1.0,0)

! 2160:[const] Real Constant 
      RT_74 = 0.5

! 2180:[const] Real Constant 
      RT_79 = 1.5

! 2210:[const] Real Constant 
      RT_81 = 2.5

! 2250:[time-sig] Output of Simulation Time 
      RT_10 = TIME

! 2280:[XY_profile_2]  
      CALL XY_profile_2Dyn(RT_9, RT_10, Pstp_X1, Pstp_Y1, Pstp_X2, Pstp_&
     &Y2, Pstp_X3, Pstp_Y3, Pstp_X4, Pstp_Y4, Pstp_X5, Pstp_Y5, Pstp_X6,&
     & Pstp_Y6, Pstp_X7, Pstp_Y7, Pstp_X8, Pstp_Y8, Pstp_X9, Pstp_Y9, Ps&
     &tp_X10, Pstp_Y10, PstpBase, Pstp_N)


! 2360:[time-sig] Output of Simulation Time 
      RT_71 = TIME

! 2370:[xy_transfer_function] X-Y transfer function 'AUX_profile'
      CALL COMPONENT_ID(ICALL_NO,935825497)
! File name: testProfiles/AUX_profile.txt
      RT_69 = XYFUNC(0,RT_71,0,0.0,0.0,1.0,1.0,0)

! 2480:[const] Real Constant 
      RT_70 = 0.5

! 2500:[const] Real Constant 
      RT_67 = 1.5

! 2510:[const] Real Constant 
      RT_66 = 2.5

! 2520:[XY_profile_2]  
      CALL XY_profile_2Dyn(RT_3, RT_4, Vstp_X1, Vstp_Y1, Vstp_X2, Vstp_Y&
     &2, Vstp_X3, Vstp_Y3, Vstp_X4, Vstp_Y4, Vstp_X5, Vstp_Y5, Vstp_X6, &
     &Vstp_Y6, Vstp_X7, Vstp_Y7, Vstp_X8, Vstp_Y8, Vstp_X9, Vstp_Y9, Vst&
     &p_X10, Vstp_Y10, VstpBase, Vstp_N)


! 2530:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(VstpMethod),RT_25,1.0,0.0,0.0,RVD2_1)
      RT_26 = RVD2_1(1)

! 2540:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_3 = NINT(RT_26)

! 2550:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(VstpMethod),RT_21,1.0,0.0,0.0,RVD2_1)
      RT_22 = RVD2_1(1)

! 2560:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_2 = NINT(RT_22)

! 2570:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(VstpMethod),RT_19,1.0,0.0,0.0,RVD2_1)
      RT_20 = RVD2_1(1)

! 2580:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_1 = NINT(RT_20)

! 2590:[XY_profile_2]  
      CALL XY_profile_2Dyn(RT_1, RT_2, Qstp_X1, Qstp_Y1, Qstp_X2, Qstp_Y&
     &2, Qstp_X3, Qstp_Y3, Qstp_X4, Qstp_Y4, Qstp_X5, Qstp_Y5, Qstp_X6, &
     &Qstp_Y6, Qstp_X7, Qstp_Y7, Qstp_X8, Qstp_Y8, Qstp_X9, Qstp_Y9, Qst&
     &p_X10, Qstp_Y10, QstpBase, Qstp_N)


! 2600:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(QstpMethod),RT_30,1.0,0.0,0.0,RVD2_1)
      RT_31 = RVD2_1(1)

! 2610:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_4 = NINT(RT_31)

! 2620:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(QstpMethod),RT_35,1.0,0.0,0.0,RVD2_1)
      RT_36 = RVD2_1(1)

! 2630:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_5 = NINT(RT_36)

! 2640:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(QstpMethod),RT_37,1.0,0.0,0.0,RVD2_1)
      RT_38 = RVD2_1(1)

! 2650:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_6 = NINT(RT_38)

! 2660:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(Q1stpMethod),RT_85,1.0,0.0,0.0,RVD2_1)
      RT_86 = RVD2_1(1)

! 2670:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_19 = NINT(RT_86)

! 2680:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(Q1stpMethod),RT_90,1.0,0.0,0.0,RVD2_1)
      RT_91 = RVD2_1(1)

! 2690:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_20 = NINT(RT_91)

! 2700:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(Q1stpMethod),RT_92,1.0,0.0,0.0,RVD2_1)
      RT_93 = RVD2_1(1)

! 2710:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_21 = NINT(RT_93)

! 2720:[XY_profile_2]  
      CALL XY_profile_2Dyn(RT_5, RT_6, PFstp_X1, PFstp_Y1, PFstp_X2, PFs&
     &tp_Y2, PFstp_X3, PFstp_Y3, PFstp_X4, PFstp_Y4, PFstp_X5, PFstp_Y5,&
     & PFstp_X6, PFstp_Y6, PFstp_X7, PFstp_Y7, PFstp_X8, PFstp_Y8, PFstp&
     &_X9, PFstp_Y9, PFstp_X10, PFstp_Y10, PFstpBase, PFstp_N)


! 2730:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(PFstpMethod),RT_47,1.0,0.0,0.0,RVD2_1)
      RT_48 = RVD2_1(1)

! 2740:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_9 = NINT(RT_48)

! 2750:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(PFstpMethod),RT_43,1.0,0.0,0.0,RVD2_1)
      RT_44 = RVD2_1(1)

! 2760:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_8 = NINT(RT_44)

! 2770:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(PFstpMethod),RT_41,1.0,0.0,0.0,RVD2_1)
      RT_42 = RVD2_1(1)

! 2780:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_7 = NINT(RT_42)

! 2790:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(PF1stpMethod),RT_102,1.0,0.0,0.0,RVD2_1&
     &)
      RT_103 = RVD2_1(1)

! 2800:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_24 = NINT(RT_103)

! 2810:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(PF1stpMethod),RT_98,1.0,0.0,0.0,RVD2_1)
      RT_99 = RVD2_1(1)

! 2820:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_23 = NINT(RT_99)

! 2830:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(PF1stpMethod),RT_96,1.0,0.0,0.0,RVD2_1)
      RT_97 = RVD2_1(1)

! 2840:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_22 = NINT(RT_97)

! 2850:[XY_profile_2]  
      CALL XY_profile_2Dyn(RT_7, RT_8, Pstp_X1, Pstp_Y1, Pstp_X2, Pstp_Y&
     &2, Pstp_X3, Pstp_Y3, Pstp_X4, Pstp_Y4, Pstp_X5, Pstp_Y5, Pstp_X6, &
     &Pstp_Y6, Pstp_X7, Pstp_Y7, Pstp_X8, Pstp_Y8, Pstp_X9, Pstp_Y9, Pst&
     &p_X10, Pstp_Y10, PstpBase, Pstp_N)


! 2860:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(PstpMethod),RT_52,1.0,0.0,0.0,RVD2_1)
      RT_53 = RVD2_1(1)

! 2870:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_10 = NINT(RT_53)

! 2880:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(PstpMethod),RT_57,1.0,0.0,0.0,RVD2_1)
      RT_58 = RVD2_1(1)

! 2890:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_11 = NINT(RT_58)

! 2900:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(PstpMethod),RT_59,1.0,0.0,0.0,RVD2_1)
      RT_60 = RVD2_1(1)

! 2910:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_12 = NINT(RT_60)

! 2920:[XY_profile_2]  
      CALL XY_profile_2Dyn(RT_11, RT_12, P1stp_X1, P1stp_Y1, P1stp_X2, P&
     &1stp_Y2, P1stp_X3, P1stp_Y3, P1stp_X4, P1stp_Y4, P1stp_X5, P1stp_Y&
     &5, P1stp_X6, P1stp_Y6, P1stp_X7, P1stp_Y7, P1stp_X8, P1stp_Y8, P1s&
     &tp_X9, P1stp_Y9, P1stp_X10, P1stp_Y10, P1stpBase, P1stp_N)


! 2930:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(P1stpMethod),RT_74,1.0,0.0,0.0,RVD2_1)
      RT_75 = RVD2_1(1)

! 2940:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_16 = NINT(RT_75)

! 2950:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(P1stpMethod),RT_79,1.0,0.0,0.0,RVD2_1)
      RT_80 = RVD2_1(1)

! 2960:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_17 = NINT(RT_80)

! 2970:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(P1stpMethod),RT_81,1.0,0.0,0.0,RVD2_1)
      RT_82 = RVD2_1(1)

! 2980:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_18 = NINT(RT_82)

! 2990:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(AUXstpMethod),RT_70,1.0,0.0,0.0,RVD2_1)
      RT_63 = RVD2_1(1)

! 3000:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_15 = NINT(RT_63)

! 3010:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(AUXstpMethod),RT_67,1.0,0.0,0.0,RVD2_1)
      RT_62 = RVD2_1(1)

! 3020:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_14 = NINT(RT_62)

! 3030:[compar] Two Input Comparator 
!
      CALL EMTDC_X2COMP(0,0,REAL(AUXstpMethod),RT_66,1.0,0.0,0.0,RVD2_1)
      RT_61 = RVD2_1(1)

! 3040:[unity] Type/Shape conversion block 
! real -> nearest integer
      IT_13 = NINT(RT_61)

! 3050:[select] Two Input Selector 
      IF (IT_3 .EQ. RTCI(NRTCI)) THEN
         RT_23 = RT_3
      ELSE
         RT_23 = RT_24
      ENDIF
      NRTCI = NRTCI + 1
!

! 3060:[select] Two Input Selector 
      IF (IT_2 .EQ. RTCI(NRTCI)) THEN
         RT_17 = Vman
      ELSE
         RT_17 = RT_23
      ENDIF
      NRTCI = NRTCI + 1
!

! 3070:[select] Two Input Selector 
      IF (IT_1 .EQ. RTCI(NRTCI)) THEN
         RT_18 = VstpDefault
      ELSE
         RT_18 = RT_17
      ENDIF
      NRTCI = NRTCI + 1
!

! 3080:[select] Two Input Selector 
      IF (IT_4 .EQ. RTCI(NRTCI)) THEN
         RT_32 = RT_1
      ELSE
         RT_32 = RT_29
      ENDIF
      NRTCI = NRTCI + 1
!

! 3090:[select] Two Input Selector 
      IF (IT_5 .EQ. RTCI(NRTCI)) THEN
         RT_34 = Qman
      ELSE
         RT_34 = RT_32
      ENDIF
      NRTCI = NRTCI + 1
!

! 3100:[select] Two Input Selector 
      IF (IT_6 .EQ. RTCI(NRTCI)) THEN
         RT_33 = QstpDefault
      ELSE
         RT_33 = RT_34
      ENDIF
      NRTCI = NRTCI + 1
!

! 3110:[select] Two Input Selector 
      IF (IT_19 .EQ. RTCI(NRTCI)) THEN
         RT_87 = RT_13
      ELSE
         RT_87 = RT_84
      ENDIF
      NRTCI = NRTCI + 1
!

! 3120:[select] Two Input Selector 
      IF (IT_20 .EQ. RTCI(NRTCI)) THEN
         RT_89 = Q1man
      ELSE
         RT_89 = RT_87
      ENDIF
      NRTCI = NRTCI + 1
!

! 3130:[select] Two Input Selector 
      IF (IT_21 .EQ. RTCI(NRTCI)) THEN
         RT_88 = Q1stpDefault
      ELSE
         RT_88 = RT_89
      ENDIF
      NRTCI = NRTCI + 1
!

! 3140:[select] Two Input Selector 
      IF (IT_9 .EQ. RTCI(NRTCI)) THEN
         RT_45 = RT_5
      ELSE
         RT_45 = RT_46
      ENDIF
      NRTCI = NRTCI + 1
!

! 3150:[select] Two Input Selector 
      IF (IT_8 .EQ. RTCI(NRTCI)) THEN
         RT_39 = PFman
      ELSE
         RT_39 = RT_45
      ENDIF
      NRTCI = NRTCI + 1
!

! 3160:[select] Two Input Selector 
      IF (IT_7 .EQ. RTCI(NRTCI)) THEN
         RT_40 = PFstpDefault
      ELSE
         RT_40 = RT_39
      ENDIF
      NRTCI = NRTCI + 1
!

! 3170:[select] Two Input Selector 
      IF (IT_24 .EQ. RTCI(NRTCI)) THEN
         RT_100 = RT_15
      ELSE
         RT_100 = RT_101
      ENDIF
      NRTCI = NRTCI + 1
!

! 3180:[select] Two Input Selector 
      IF (IT_23 .EQ. RTCI(NRTCI)) THEN
         RT_94 = PF1man
      ELSE
         RT_94 = RT_100
      ENDIF
      NRTCI = NRTCI + 1
!

! 3190:[select] Two Input Selector 
      IF (IT_22 .EQ. RTCI(NRTCI)) THEN
         RT_95 = PF1stpDefault
      ELSE
         RT_95 = RT_94
      ENDIF
      NRTCI = NRTCI + 1
!

! 3200:[select] Two Input Selector 
      IF (IT_10 .EQ. RTCI(NRTCI)) THEN
         RT_54 = RT_7
      ELSE
         RT_54 = RT_51
      ENDIF
      NRTCI = NRTCI + 1
!

! 3210:[select] Two Input Selector 
      IF (IT_11 .EQ. RTCI(NRTCI)) THEN
         RT_56 = Pman
      ELSE
         RT_56 = RT_54
      ENDIF
      NRTCI = NRTCI + 1
!

! 3220:[select] Two Input Selector 
      IF (IT_12 .EQ. RTCI(NRTCI)) THEN
         RT_55 = PstpDefault
      ELSE
         RT_55 = RT_56
      ENDIF
      NRTCI = NRTCI + 1
!

! 3230:[select] Two Input Selector 
      IF (IT_16 .EQ. RTCI(NRTCI)) THEN
         RT_76 = RT_11
      ELSE
         RT_76 = RT_73
      ENDIF
      NRTCI = NRTCI + 1
!

! 3240:[select] Two Input Selector 
      IF (IT_17 .EQ. RTCI(NRTCI)) THEN
         RT_78 = P1man
      ELSE
         RT_78 = RT_76
      ENDIF
      NRTCI = NRTCI + 1
!

! 3250:[select] Two Input Selector 
      IF (IT_18 .EQ. RTCI(NRTCI)) THEN
         RT_77 = P1stpDefault
      ELSE
         RT_77 = RT_78
      ENDIF
      NRTCI = NRTCI + 1
!

! 3260:[select] Two Input Selector 
      IF (IT_15 .EQ. RTCI(NRTCI)) THEN
         RT_68 = RT_9
      ELSE
         RT_68 = RT_69
      ENDIF
      NRTCI = NRTCI + 1
!

! 3270:[select] Two Input Selector 
      IF (IT_14 .EQ. RTCI(NRTCI)) THEN
         RT_64 = AUXman
      ELSE
         RT_64 = RT_68
      ENDIF
      NRTCI = NRTCI + 1
!

! 3280:[select] Two Input Selector 
      IF (IT_13 .EQ. RTCI(NRTCI)) THEN
         RT_65 = AUXstpDefault
      ELSE
         RT_65 = RT_64
      ENDIF
      NRTCI = NRTCI + 1
!

! 3290:[mult] Multiplier 
      AUXstp = RT_65 * AUXstpBase

! 3300:[mult] Multiplier 
      P1stp = RT_77 * P1stpBase

! 3310:[mult] Multiplier 
      Pstp = RT_55 * PstpBase

! 3320:[mult] Multiplier 
      PF1stp = RT_95 * PF1stpBase

! 3330:[mult] Multiplier 
      PFstp = RT_40 * PFstpBase

! 3340:[mult] Multiplier 
      Q1stp = RT_88 * Q1stpBase

! 3350:[mult] Multiplier 
      Qstp = RT_33 * QstpBase

! 3360:[mult] Multiplier 
      Vstp = RT_18 * VstpBase

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 1) = Pstp
      STOF(ISTOF + 2) = PFstp
      STOF(ISTOF + 3) = Qstp
      STOF(ISTOF + 4) = Vstp
      STOF(ISTOF + 5) = Pman
      STOF(ISTOF + 6) = PFman
      STOF(ISTOF + 7) = Qman
      STOF(ISTOF + 8) = Vman
      STOF(ISTOF + 9) = AUXman
      STOF(ISTOF + 10) = AUXstp
      STOF(ISTOF + 11) = P1stp
      STOF(ISTOF + 12) = P1man
      STOF(ISTOF + 13) = Q1stp
      STOF(ISTOF + 14) = Q1man
      STOF(ISTOF + 15) = PF1stp
      STOF(ISTOF + 16) = PF1man
      STOF(ISTOF + 17) = Vstp_X1
      STOF(ISTOF + 18) = Vstp_Y1
      STOF(ISTOF + 19) = Vstp_Y2
      STOF(ISTOF + 20) = VstpBase
      STOF(ISTOF + 21) = Vstp_Y3
      STOF(ISTOF + 22) = Vstp_Y4
      STOF(ISTOF + 23) = Vstp_Y5
      STOF(ISTOF + 24) = Vstp_Y6
      STOF(ISTOF + 25) = Vstp_Y7
      STOF(ISTOF + 26) = Vstp_Y8
      STOF(ISTOF + 27) = Vstp_Y9
      STOF(ISTOF + 28) = Vstp_X2
      STOF(ISTOF + 29) = Vstp_X3
      STOI(ISTOI + 1) = VstpMethod
      STOF(ISTOF + 30) = Vstp_X4
      STOF(ISTOF + 31) = Vstp_X5
      STOF(ISTOF + 32) = Vstp_X6
      STOF(ISTOF + 33) = Vstp_X7
      STOF(ISTOF + 34) = Vstp_X8
      STOF(ISTOF + 35) = Vstp_X9
      STOF(ISTOF + 36) = Vstp_X10
      STOF(ISTOF + 37) = Vstp_Y10
      STOI(ISTOI + 2) = Vstp_N
      STOF(ISTOF + 38) = VstpDefault
      STOF(ISTOF + 39) = Qstp_X1
      STOF(ISTOF + 40) = Qstp_Y1
      STOF(ISTOF + 41) = Qstp_Y2
      STOF(ISTOF + 42) = QstpBase
      STOF(ISTOF + 43) = Qstp_Y3
      STOF(ISTOF + 44) = Qstp_Y4
      STOF(ISTOF + 45) = Qstp_Y5
      STOF(ISTOF + 46) = Qstp_Y6
      STOF(ISTOF + 47) = Qstp_Y7
      STOF(ISTOF + 48) = Qstp_Y8
      STOF(ISTOF + 49) = Qstp_Y9
      STOF(ISTOF + 50) = Qstp_X2
      STOF(ISTOF + 51) = Qstp_X3
      STOI(ISTOI + 3) = QstpMethod
      STOF(ISTOF + 52) = Qstp_X4
      STOF(ISTOF + 53) = Qstp_X5
      STOF(ISTOF + 54) = Qstp_X6
      STOF(ISTOF + 55) = Qstp_X7
      STOF(ISTOF + 56) = Qstp_X8
      STOF(ISTOF + 57) = Qstp_X9
      STOF(ISTOF + 58) = Qstp_X10
      STOF(ISTOF + 59) = Qstp_Y10
      STOI(ISTOI + 4) = Qstp_N
      STOF(ISTOF + 60) = QstpDefault
      STOF(ISTOF + 61) = Q1stp_X1
      STOF(ISTOF + 62) = Q1stp_Y1
      STOF(ISTOF + 63) = Q1stp_Y2
      STOF(ISTOF + 64) = Q1stpBase
      STOF(ISTOF + 65) = Q1stp_Y3
      STOF(ISTOF + 66) = Q1stp_Y4
      STOF(ISTOF + 67) = Q1stp_Y5
      STOF(ISTOF + 68) = Q1stp_Y6
      STOF(ISTOF + 69) = Q1stp_Y7
      STOF(ISTOF + 70) = Q1stp_Y8
      STOF(ISTOF + 71) = Q1stp_Y9
      STOF(ISTOF + 72) = Q1stp_X2
      STOF(ISTOF + 73) = Q1stp_X3
      STOI(ISTOI + 5) = Q1stpMethod
      STOF(ISTOF + 74) = Q1stp_X4
      STOF(ISTOF + 75) = Q1stp_X5
      STOF(ISTOF + 76) = Q1stp_X6
      STOF(ISTOF + 77) = Q1stp_X7
      STOF(ISTOF + 78) = Q1stp_X8
      STOF(ISTOF + 79) = Q1stp_X9
      STOF(ISTOF + 80) = Q1stp_X10
      STOF(ISTOF + 81) = Q1stp_Y10
      STOI(ISTOI + 6) = Q1stp_N
      STOF(ISTOF + 82) = Q1stpDefault
      STOF(ISTOF + 83) = PFstp_X1
      STOF(ISTOF + 84) = PFstp_Y1
      STOF(ISTOF + 85) = PFstp_Y2
      STOF(ISTOF + 86) = PFstpBase
      STOF(ISTOF + 87) = PFstp_Y3
      STOF(ISTOF + 88) = PFstp_Y4
      STOF(ISTOF + 89) = PFstp_Y5
      STOF(ISTOF + 90) = PFstp_Y6
      STOF(ISTOF + 91) = PFstp_Y7
      STOF(ISTOF + 92) = PFstp_Y8
      STOF(ISTOF + 93) = PFstp_Y9
      STOF(ISTOF + 94) = PFstp_X2
      STOF(ISTOF + 95) = PFstp_X3
      STOI(ISTOI + 7) = PFstpMethod
      STOF(ISTOF + 96) = PFstp_X4
      STOF(ISTOF + 97) = PFstp_X5
      STOF(ISTOF + 98) = PFstp_X6
      STOF(ISTOF + 99) = PFstp_X7
      STOF(ISTOF + 100) = PFstp_X8
      STOF(ISTOF + 101) = PFstp_X9
      STOF(ISTOF + 102) = PFstp_X10
      STOF(ISTOF + 103) = PFstp_Y10
      STOI(ISTOI + 8) = PFstp_N
      STOF(ISTOF + 104) = PFstpDefault
      STOF(ISTOF + 105) = PF1stp_X1
      STOF(ISTOF + 106) = PF1stp_Y1
      STOF(ISTOF + 107) = PF1stp_Y2
      STOF(ISTOF + 108) = PF1stpBase
      STOF(ISTOF + 109) = PF1stp_Y3
      STOF(ISTOF + 110) = PF1stp_Y4
      STOF(ISTOF + 111) = PF1stp_Y5
      STOF(ISTOF + 112) = PF1stp_Y6
      STOF(ISTOF + 113) = PF1stp_Y7
      STOF(ISTOF + 114) = PF1stp_Y8
      STOF(ISTOF + 115) = PF1stp_Y9
      STOF(ISTOF + 116) = PF1stp_X2
      STOF(ISTOF + 117) = PF1stp_X3
      STOI(ISTOI + 9) = PF1stpMethod
      STOF(ISTOF + 118) = PF1stp_X4
      STOF(ISTOF + 119) = PF1stp_X5
      STOF(ISTOF + 120) = PF1stp_X6
      STOF(ISTOF + 121) = PF1stp_X7
      STOF(ISTOF + 122) = PF1stp_X8
      STOF(ISTOF + 123) = PF1stp_X9
      STOF(ISTOF + 124) = PF1stp_X10
      STOF(ISTOF + 125) = PF1stp_Y10
      STOI(ISTOI + 10) = PF1stp_N
      STOF(ISTOF + 126) = PF1stpDefault
      STOF(ISTOF + 127) = Pstp_X1
      STOF(ISTOF + 128) = Pstp_Y1
      STOF(ISTOF + 129) = Pstp_Y2
      STOF(ISTOF + 130) = PstpBase
      STOF(ISTOF + 131) = Pstp_Y3
      STOF(ISTOF + 132) = Pstp_Y4
      STOF(ISTOF + 133) = Pstp_Y5
      STOF(ISTOF + 134) = Pstp_Y6
      STOF(ISTOF + 135) = Pstp_Y7
      STOF(ISTOF + 136) = Pstp_Y8
      STOF(ISTOF + 137) = Pstp_Y9
      STOF(ISTOF + 138) = Pstp_X2
      STOF(ISTOF + 139) = Pstp_X3
      STOI(ISTOI + 11) = PstpMethod
      STOF(ISTOF + 140) = Pstp_X4
      STOF(ISTOF + 141) = Pstp_X5
      STOF(ISTOF + 142) = Pstp_X6
      STOF(ISTOF + 143) = Pstp_X7
      STOF(ISTOF + 144) = Pstp_X8
      STOF(ISTOF + 145) = Pstp_X9
      STOF(ISTOF + 146) = Pstp_X10
      STOF(ISTOF + 147) = Pstp_Y10
      STOI(ISTOI + 12) = Pstp_N
      STOF(ISTOF + 148) = PstpDefault
      STOF(ISTOF + 149) = P1stp_X1
      STOF(ISTOF + 150) = P1stp_Y1
      STOF(ISTOF + 151) = P1stp_Y2
      STOF(ISTOF + 152) = P1stpBase
      STOF(ISTOF + 153) = P1stp_Y3
      STOF(ISTOF + 154) = P1stp_Y4
      STOF(ISTOF + 155) = P1stp_Y5
      STOF(ISTOF + 156) = P1stp_Y6
      STOF(ISTOF + 157) = P1stp_Y7
      STOF(ISTOF + 158) = P1stp_Y8
      STOF(ISTOF + 159) = P1stp_Y9
      STOF(ISTOF + 160) = P1stp_X2
      STOF(ISTOF + 161) = P1stp_X3
      STOI(ISTOI + 13) = P1stpMethod
      STOF(ISTOF + 162) = P1stp_X4
      STOF(ISTOF + 163) = P1stp_X5
      STOF(ISTOF + 164) = P1stp_X6
      STOF(ISTOF + 165) = P1stp_X7
      STOF(ISTOF + 166) = P1stp_X8
      STOF(ISTOF + 167) = P1stp_X9
      STOF(ISTOF + 168) = P1stp_X10
      STOF(ISTOF + 169) = P1stp_Y10
      STOI(ISTOI + 14) = P1stp_N
      STOF(ISTOF + 170) = P1stpDefault
      STOF(ISTOF + 171) = AUXstp_X1
      STOF(ISTOF + 172) = AUXstp_Y1
      STOF(ISTOF + 173) = AUXstp_Y2
      STOF(ISTOF + 174) = AUXstpBase
      STOF(ISTOF + 175) = AUXstp_Y3
      STOF(ISTOF + 176) = AUXstp_Y4
      STOF(ISTOF + 177) = AUXstp_Y5
      STOF(ISTOF + 178) = AUXstp_Y6
      STOF(ISTOF + 179) = AUXstp_Y7
      STOF(ISTOF + 180) = AUXstp_Y8
      STOF(ISTOF + 181) = AUXstp_Y9
      STOF(ISTOF + 182) = AUXstp_X2
      STOF(ISTOF + 183) = AUXstp_X3
      STOI(ISTOI + 15) = AUXstpMethod
      STOF(ISTOF + 184) = AUXstp_X4
      STOF(ISTOF + 185) = AUXstp_X5
      STOF(ISTOF + 186) = AUXstp_X6
      STOF(ISTOF + 187) = AUXstp_X7
      STOF(ISTOF + 188) = AUXstp_X8
      STOF(ISTOF + 189) = AUXstp_X9
      STOF(ISTOF + 190) = AUXstp_X10
      STOF(ISTOF + 191) = AUXstp_Y10
      STOI(ISTOI + 16) = AUXstp_N
      STOF(ISTOF + 192) = AUXstpDefault
      STOF(ISTOF + 193) = RT_1
      STOF(ISTOF + 194) = RT_2
      STOF(ISTOF + 195) = RT_3
      STOF(ISTOF + 196) = RT_4
      STOF(ISTOF + 197) = RT_5
      STOF(ISTOF + 198) = RT_6
      STOF(ISTOF + 199) = RT_7
      STOF(ISTOF + 200) = RT_8
      STOF(ISTOF + 201) = RT_9
      STOF(ISTOF + 202) = RT_10
      STOF(ISTOF + 203) = RT_11
      STOF(ISTOF + 204) = RT_12
      STOF(ISTOF + 205) = RT_13
      STOF(ISTOF + 206) = RT_14
      STOF(ISTOF + 207) = RT_15
      STOF(ISTOF + 208) = RT_16
      STOI(ISTOI + 17) = IT_1
      STOF(ISTOF + 209) = RT_17
      STOF(ISTOF + 210) = RT_18
      STOF(ISTOF + 211) = RT_19
      STOF(ISTOF + 212) = RT_20
      STOF(ISTOF + 213) = RT_21
      STOF(ISTOF + 214) = RT_22
      STOI(ISTOI + 18) = IT_2
      STOF(ISTOF + 215) = RT_23
      STOI(ISTOI + 19) = IT_3
      STOF(ISTOF + 216) = RT_24
      STOF(ISTOF + 217) = RT_25
      STOF(ISTOF + 218) = RT_26
      STOF(ISTOF + 219) = RT_27
      STOF(ISTOF + 220) = RT_28
      STOF(ISTOF + 221) = RT_29
      STOF(ISTOF + 222) = RT_30
      STOF(ISTOF + 223) = RT_31
      STOI(ISTOI + 20) = IT_4
      STOF(ISTOF + 224) = RT_32
      STOF(ISTOF + 225) = RT_33
      STOI(ISTOI + 21) = IT_5
      STOF(ISTOF + 226) = RT_34
      STOF(ISTOF + 227) = RT_35
      STOF(ISTOF + 228) = RT_36
      STOF(ISTOF + 229) = RT_37
      STOF(ISTOF + 230) = RT_38
      STOI(ISTOI + 22) = IT_6
      STOI(ISTOI + 23) = IT_7
      STOF(ISTOF + 231) = RT_39
      STOF(ISTOF + 232) = RT_40
      STOF(ISTOF + 233) = RT_41
      STOF(ISTOF + 234) = RT_42
      STOF(ISTOF + 235) = RT_43
      STOF(ISTOF + 236) = RT_44
      STOI(ISTOI + 24) = IT_8
      STOF(ISTOF + 237) = RT_45
      STOI(ISTOI + 25) = IT_9
      STOF(ISTOF + 238) = RT_46
      STOF(ISTOF + 239) = RT_47
      STOF(ISTOF + 240) = RT_48
      STOF(ISTOF + 241) = RT_49
      STOF(ISTOF + 242) = RT_50
      STOF(ISTOF + 243) = RT_51
      STOF(ISTOF + 244) = RT_52
      STOF(ISTOF + 245) = RT_53
      STOI(ISTOI + 26) = IT_10
      STOF(ISTOF + 246) = RT_54
      STOF(ISTOF + 247) = RT_55
      STOI(ISTOI + 27) = IT_11
      STOF(ISTOF + 248) = RT_56
      STOF(ISTOF + 249) = RT_57
      STOF(ISTOF + 250) = RT_58
      STOF(ISTOF + 251) = RT_59
      STOF(ISTOF + 252) = RT_60
      STOI(ISTOI + 28) = IT_12
      STOF(ISTOF + 253) = RT_61
      STOI(ISTOI + 29) = IT_13
      STOF(ISTOF + 254) = RT_62
      STOI(ISTOI + 30) = IT_14
      STOF(ISTOF + 255) = RT_63
      STOI(ISTOI + 31) = IT_15
      STOF(ISTOF + 256) = RT_64
      STOF(ISTOF + 257) = RT_65
      STOF(ISTOF + 258) = RT_66
      STOF(ISTOF + 259) = RT_67
      STOF(ISTOF + 260) = RT_68
      STOF(ISTOF + 261) = RT_69
      STOF(ISTOF + 262) = RT_70
      STOF(ISTOF + 263) = RT_71
      STOF(ISTOF + 264) = RT_72
      STOF(ISTOF + 265) = RT_73
      STOF(ISTOF + 266) = RT_74
      STOF(ISTOF + 267) = RT_75
      STOI(ISTOI + 32) = IT_16
      STOF(ISTOF + 268) = RT_76
      STOF(ISTOF + 269) = RT_77
      STOI(ISTOI + 33) = IT_17
      STOF(ISTOF + 270) = RT_78
      STOF(ISTOF + 271) = RT_79
      STOF(ISTOF + 272) = RT_80
      STOF(ISTOF + 273) = RT_81
      STOF(ISTOF + 274) = RT_82
      STOI(ISTOI + 34) = IT_18
      STOF(ISTOF + 275) = RT_83
      STOF(ISTOF + 276) = RT_84
      STOF(ISTOF + 277) = RT_85
      STOF(ISTOF + 278) = RT_86
      STOI(ISTOI + 35) = IT_19
      STOF(ISTOF + 279) = RT_87
      STOF(ISTOF + 280) = RT_88
      STOI(ISTOI + 36) = IT_20
      STOF(ISTOF + 281) = RT_89
      STOF(ISTOF + 282) = RT_90
      STOF(ISTOF + 283) = RT_91
      STOF(ISTOF + 284) = RT_92
      STOF(ISTOF + 285) = RT_93
      STOI(ISTOI + 37) = IT_21
      STOI(ISTOI + 38) = IT_22
      STOF(ISTOF + 286) = RT_94
      STOF(ISTOF + 287) = RT_95
      STOF(ISTOF + 288) = RT_96
      STOF(ISTOF + 289) = RT_97
      STOF(ISTOF + 290) = RT_98
      STOF(ISTOF + 291) = RT_99
      STOI(ISTOI + 39) = IT_23
      STOF(ISTOF + 292) = RT_100
      STOI(ISTOI + 40) = IT_24
      STOF(ISTOF + 293) = RT_101
      STOF(ISTOF + 294) = RT_102
      STOF(ISTOF + 295) = RT_103
      STOF(ISTOF + 296) = RT_104


!---------------------------------------
! Transfer to Exports
!---------------------------------------
      !Pstp     is output
      !PFstp    is output
      !Qstp     is output
      !Vstp     is output
      !AUXstp   is output
      !P1stp    is output
      !Q1stp    is output
      !PF1stp   is output

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE setpointProfilesOut()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    XY_profile_2Out  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices

! Control Signals
      REAL     RT_19, RT_21, RT_25, RT_30, RT_35
      REAL     RT_37, RT_41, RT_43, RT_47, RT_52
      REAL     RT_57, RT_59, RT_66, RT_67, RT_70
      REAL     RT_74, RT_79, RT_81, RT_85, RT_90
      REAL     RT_92, RT_96, RT_98, RT_102

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC          ! Storage Indices
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_19    = STOF(ISTOF + 211)
      RT_21    = STOF(ISTOF + 213)
      RT_25    = STOF(ISTOF + 217)
      RT_30    = STOF(ISTOF + 222)
      RT_35    = STOF(ISTOF + 227)
      RT_37    = STOF(ISTOF + 229)
      RT_41    = STOF(ISTOF + 233)
      RT_43    = STOF(ISTOF + 235)
      RT_47    = STOF(ISTOF + 239)
      RT_52    = STOF(ISTOF + 244)
      RT_57    = STOF(ISTOF + 249)
      RT_59    = STOF(ISTOF + 251)
      RT_66    = STOF(ISTOF + 258)
      RT_67    = STOF(ISTOF + 259)
      RT_70    = STOF(ISTOF + 262)
      RT_74    = STOF(ISTOF + 266)
      RT_79    = STOF(ISTOF + 271)
      RT_81    = STOF(ISTOF + 273)
      RT_85    = STOF(ISTOF + 277)
      RT_90    = STOF(ISTOF + 282)
      RT_92    = STOF(ISTOF + 284)
      RT_96    = STOF(ISTOF + 288)
      RT_98    = STOF(ISTOF + 290)
      RT_102   = STOF(ISTOF + 294)


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'setpointProfiles.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 280:[const] Real Constant 

      RT_25 = 0.5

! 300:[const] Real Constant 

      RT_21 = 1.5

! 370:[const] Real Constant 

      RT_19 = 2.5

! 590:[const] Real Constant 

      RT_30 = 0.5

! 610:[const] Real Constant 

      RT_35 = 1.5

! 640:[const] Real Constant 

      RT_37 = 2.5

! 700:[XY_profile_2]  
      CALL XY_profile_2Out()


! 910:[const] Real Constant 

      RT_85 = 0.5

! 930:[const] Real Constant 

      RT_90 = 1.5

! 960:[const] Real Constant 

      RT_92 = 2.5

! 1220:[const] Real Constant 

      RT_47 = 0.5

! 1240:[const] Real Constant 

      RT_43 = 1.5

! 1250:[const] Real Constant 

      RT_41 = 2.5

! 1330:[XY_profile_2]  
      CALL XY_profile_2Out()


! 1540:[const] Real Constant 

      RT_102 = 0.5

! 1560:[const] Real Constant 

      RT_98 = 1.5

! 1570:[const] Real Constant 

      RT_96 = 2.5

! 1850:[const] Real Constant 

      RT_52 = 0.5

! 1870:[const] Real Constant 

      RT_57 = 1.5

! 1940:[const] Real Constant 

      RT_59 = 2.5

! 2160:[const] Real Constant 

      RT_74 = 0.5

! 2180:[const] Real Constant 

      RT_79 = 1.5

! 2210:[const] Real Constant 

      RT_81 = 2.5

! 2280:[XY_profile_2]  
      CALL XY_profile_2Out()


! 2480:[const] Real Constant 

      RT_70 = 0.5

! 2500:[const] Real Constant 

      RT_67 = 1.5

! 2510:[const] Real Constant 

      RT_66 = 2.5

! 2520:[XY_profile_2]  
      CALL XY_profile_2Out()


! 2590:[XY_profile_2]  
      CALL XY_profile_2Out()


! 2720:[XY_profile_2]  
      CALL XY_profile_2Out()


! 2850:[XY_profile_2]  
      CALL XY_profile_2Out()


! 2920:[XY_profile_2]  
      CALL XY_profile_2Out()


!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 211) = RT_19
      STOF(ISTOF + 213) = RT_21
      STOF(ISTOF + 217) = RT_25
      STOF(ISTOF + 222) = RT_30
      STOF(ISTOF + 227) = RT_35
      STOF(ISTOF + 229) = RT_37
      STOF(ISTOF + 233) = RT_41
      STOF(ISTOF + 235) = RT_43
      STOF(ISTOF + 239) = RT_47
      STOF(ISTOF + 244) = RT_52
      STOF(ISTOF + 249) = RT_57
      STOF(ISTOF + 251) = RT_59
      STOF(ISTOF + 258) = RT_66
      STOF(ISTOF + 259) = RT_67
      STOF(ISTOF + 262) = RT_70
      STOF(ISTOF + 266) = RT_74
      STOF(ISTOF + 271) = RT_79
      STOF(ISTOF + 273) = RT_81
      STOF(ISTOF + 277) = RT_85
      STOF(ISTOF + 282) = RT_90
      STOF(ISTOF + 284) = RT_92
      STOF(ISTOF + 288) = RT_96
      STOF(ISTOF + 290) = RT_98
      STOF(ISTOF + 294) = RT_102


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE setpointProfilesDyn_Begin(Vstp_X1, Vstp_Y1, Vstp_Y2,   &
     &   VstpBase, Vstp_Y3, Vstp_Y4, Vstp_Y5, Vstp_Y6, Vstp_Y7,         &
     &   Vstp_Y8, Vstp_Y9, Vstp_X2, Vstp_X3, VstpMethod, Vstp_X4,       &
     &   Vstp_X5, Vstp_X6, Vstp_X7, Vstp_X8, Vstp_X9, Vstp_X10,         &
     &   Vstp_Y10, Vstp_N, VstpDefault, Qstp_X1, Qstp_Y1, Qstp_Y2,      &
     &   QstpBase, Qstp_Y3, Qstp_Y4, Qstp_Y5, Qstp_Y6, Qstp_Y7,         &
     &   Qstp_Y8, Qstp_Y9, Qstp_X2, Qstp_X3, QstpMethod, Qstp_X4,       &
     &   Qstp_X5, Qstp_X6, Qstp_X7, Qstp_X8, Qstp_X9, Qstp_X10,         &
     &   Qstp_Y10, Qstp_N, QstpDefault, Q1stp_X1, Q1stp_Y1, Q1stp_Y2,   &
     &   Q1stpBase, Q1stp_Y3, Q1stp_Y4, Q1stp_Y5, Q1stp_Y6, Q1stp_Y7,   &
     &   Q1stp_Y8, Q1stp_Y9, Q1stp_X2, Q1stp_X3, Q1stpMethod, Q1stp_X4, &
     &   Q1stp_X5, Q1stp_X6, Q1stp_X7, Q1stp_X8, Q1stp_X9, Q1stp_X10,   &
     &   Q1stp_Y10, Q1stp_N, Q1stpDefault, PFstp_X1, PFstp_Y1,          &
     &   PFstp_Y2, PFstpBase, PFstp_Y3, PFstp_Y4, PFstp_Y5, PFstp_Y6,   &
     &   PFstp_Y7, PFstp_Y8, PFstp_Y9, PFstp_X2, PFstp_X3, PFstpMethod, &
     &   PFstp_X4, PFstp_X5, PFstp_X6, PFstp_X7, PFstp_X8, PFstp_X9,    &
     &   PFstp_X10, PFstp_Y10, PFstp_N, PFstpDefault, PF1stp_X1,        &
     &   PF1stp_Y1, PF1stp_Y2, PF1stpBase, PF1stp_Y3, PF1stp_Y4,        &
     &   PF1stp_Y5, PF1stp_Y6, PF1stp_Y7, PF1stp_Y8, PF1stp_Y9,         &
     &   PF1stp_X2, PF1stp_X3, PF1stpMethod, PF1stp_X4, PF1stp_X5,      &
     &   PF1stp_X6, PF1stp_X7, PF1stp_X8, PF1stp_X9, PF1stp_X10,        &
     &   PF1stp_Y10, PF1stp_N, PF1stpDefault, Pstp_X1, Pstp_Y1,         &
     &   Pstp_Y2, PstpBase, Pstp_Y3, Pstp_Y4, Pstp_Y5, Pstp_Y6,         &
     &   Pstp_Y7, Pstp_Y8, Pstp_Y9, Pstp_X2, Pstp_X3, PstpMethod,       &
     &   Pstp_X4, Pstp_X5, Pstp_X6, Pstp_X7, Pstp_X8, Pstp_X9,          &
     &   Pstp_X10, Pstp_Y10, Pstp_N, PstpDefault, P1stp_X1, P1stp_Y1,   &
     &   P1stp_Y2, P1stpBase, P1stp_Y3, P1stp_Y4, P1stp_Y5, P1stp_Y6,   &
     &   P1stp_Y7, P1stp_Y8, P1stp_Y9, P1stp_X2, P1stp_X3, P1stpMethod, &
     &   P1stp_X4, P1stp_X5, P1stp_X6, P1stp_X7, P1stp_X8, P1stp_X9,    &
     &   P1stp_X10, P1stp_Y10, P1stp_N, P1stpDefault, AUXstp_X1,        &
     &   AUXstp_Y1, AUXstp_Y2, AUXstpBase, AUXstp_Y3, AUXstp_Y4,        &
     &   AUXstp_Y5, AUXstp_Y6, AUXstp_Y7, AUXstp_Y8, AUXstp_Y9,         &
     &   AUXstp_X2, AUXstp_X3, AUXstpMethod, AUXstp_X4, AUXstp_X5,      &
     &   AUXstp_X6, AUXstp_X7, AUXstp_X8, AUXstp_X9, AUXstp_X10,        &
     &   AUXstp_Y10, AUXstp_N, AUXstpDefault)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    XY_profile_2Dyn_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      INTEGER, INTENT(IN)  :: VstpMethod, Vstp_N
      INTEGER, INTENT(IN)  :: QstpMethod, Qstp_N
      INTEGER, INTENT(IN)  :: Q1stpMethod
      INTEGER, INTENT(IN)  :: Q1stp_N
      INTEGER, INTENT(IN)  :: PFstpMethod
      INTEGER, INTENT(IN)  :: PFstp_N
      INTEGER, INTENT(IN)  :: PF1stpMethod
      INTEGER, INTENT(IN)  :: PF1stp_N
      INTEGER, INTENT(IN)  :: PstpMethod, Pstp_N
      INTEGER, INTENT(IN)  :: P1stpMethod
      INTEGER, INTENT(IN)  :: P1stp_N
      INTEGER, INTENT(IN)  :: AUXstpMethod
      INTEGER, INTENT(IN)  :: AUXstp_N
      REAL,    INTENT(IN)  :: Vstp_X1, Vstp_Y1
      REAL,    INTENT(IN)  :: Vstp_Y2, VstpBase
      REAL,    INTENT(IN)  :: Vstp_Y3, Vstp_Y4
      REAL,    INTENT(IN)  :: Vstp_Y5, Vstp_Y6
      REAL,    INTENT(IN)  :: Vstp_Y7, Vstp_Y8
      REAL,    INTENT(IN)  :: Vstp_Y9, Vstp_X2
      REAL,    INTENT(IN)  :: Vstp_X3, Vstp_X4
      REAL,    INTENT(IN)  :: Vstp_X5, Vstp_X6
      REAL,    INTENT(IN)  :: Vstp_X7, Vstp_X8
      REAL,    INTENT(IN)  :: Vstp_X9, Vstp_X10
      REAL,    INTENT(IN)  :: Vstp_Y10
      REAL,    INTENT(IN)  :: VstpDefault
      REAL,    INTENT(IN)  :: Qstp_X1, Qstp_Y1
      REAL,    INTENT(IN)  :: Qstp_Y2, QstpBase
      REAL,    INTENT(IN)  :: Qstp_Y3, Qstp_Y4
      REAL,    INTENT(IN)  :: Qstp_Y5, Qstp_Y6
      REAL,    INTENT(IN)  :: Qstp_Y7, Qstp_Y8
      REAL,    INTENT(IN)  :: Qstp_Y9, Qstp_X2
      REAL,    INTENT(IN)  :: Qstp_X3, Qstp_X4
      REAL,    INTENT(IN)  :: Qstp_X5, Qstp_X6
      REAL,    INTENT(IN)  :: Qstp_X7, Qstp_X8
      REAL,    INTENT(IN)  :: Qstp_X9, Qstp_X10
      REAL,    INTENT(IN)  :: Qstp_Y10
      REAL,    INTENT(IN)  :: QstpDefault
      REAL,    INTENT(IN)  :: Q1stp_X1, Q1stp_Y1
      REAL,    INTENT(IN)  :: Q1stp_Y2, Q1stpBase
      REAL,    INTENT(IN)  :: Q1stp_Y3, Q1stp_Y4
      REAL,    INTENT(IN)  :: Q1stp_Y5, Q1stp_Y6
      REAL,    INTENT(IN)  :: Q1stp_Y7, Q1stp_Y8
      REAL,    INTENT(IN)  :: Q1stp_Y9, Q1stp_X2
      REAL,    INTENT(IN)  :: Q1stp_X3, Q1stp_X4
      REAL,    INTENT(IN)  :: Q1stp_X5, Q1stp_X6
      REAL,    INTENT(IN)  :: Q1stp_X7, Q1stp_X8
      REAL,    INTENT(IN)  :: Q1stp_X9, Q1stp_X10
      REAL,    INTENT(IN)  :: Q1stp_Y10
      REAL,    INTENT(IN)  :: Q1stpDefault
      REAL,    INTENT(IN)  :: PFstp_X1, PFstp_Y1
      REAL,    INTENT(IN)  :: PFstp_Y2, PFstpBase
      REAL,    INTENT(IN)  :: PFstp_Y3, PFstp_Y4
      REAL,    INTENT(IN)  :: PFstp_Y5, PFstp_Y6
      REAL,    INTENT(IN)  :: PFstp_Y7, PFstp_Y8
      REAL,    INTENT(IN)  :: PFstp_Y9, PFstp_X2
      REAL,    INTENT(IN)  :: PFstp_X3, PFstp_X4
      REAL,    INTENT(IN)  :: PFstp_X5, PFstp_X6
      REAL,    INTENT(IN)  :: PFstp_X7, PFstp_X8
      REAL,    INTENT(IN)  :: PFstp_X9, PFstp_X10
      REAL,    INTENT(IN)  :: PFstp_Y10
      REAL,    INTENT(IN)  :: PFstpDefault
      REAL,    INTENT(IN)  :: PF1stp_X1
      REAL,    INTENT(IN)  :: PF1stp_Y1
      REAL,    INTENT(IN)  :: PF1stp_Y2
      REAL,    INTENT(IN)  :: PF1stpBase
      REAL,    INTENT(IN)  :: PF1stp_Y3
      REAL,    INTENT(IN)  :: PF1stp_Y4
      REAL,    INTENT(IN)  :: PF1stp_Y5
      REAL,    INTENT(IN)  :: PF1stp_Y6
      REAL,    INTENT(IN)  :: PF1stp_Y7
      REAL,    INTENT(IN)  :: PF1stp_Y8
      REAL,    INTENT(IN)  :: PF1stp_Y9
      REAL,    INTENT(IN)  :: PF1stp_X2
      REAL,    INTENT(IN)  :: PF1stp_X3
      REAL,    INTENT(IN)  :: PF1stp_X4
      REAL,    INTENT(IN)  :: PF1stp_X5
      REAL,    INTENT(IN)  :: PF1stp_X6
      REAL,    INTENT(IN)  :: PF1stp_X7
      REAL,    INTENT(IN)  :: PF1stp_X8
      REAL,    INTENT(IN)  :: PF1stp_X9
      REAL,    INTENT(IN)  :: PF1stp_X10
      REAL,    INTENT(IN)  :: PF1stp_Y10
      REAL,    INTENT(IN)  :: PF1stpDefault
      REAL,    INTENT(IN)  :: Pstp_X1, Pstp_Y1
      REAL,    INTENT(IN)  :: Pstp_Y2, PstpBase
      REAL,    INTENT(IN)  :: Pstp_Y3, Pstp_Y4
      REAL,    INTENT(IN)  :: Pstp_Y5, Pstp_Y6
      REAL,    INTENT(IN)  :: Pstp_Y7, Pstp_Y8
      REAL,    INTENT(IN)  :: Pstp_Y9, Pstp_X2
      REAL,    INTENT(IN)  :: Pstp_X3, Pstp_X4
      REAL,    INTENT(IN)  :: Pstp_X5, Pstp_X6
      REAL,    INTENT(IN)  :: Pstp_X7, Pstp_X8
      REAL,    INTENT(IN)  :: Pstp_X9, Pstp_X10
      REAL,    INTENT(IN)  :: Pstp_Y10
      REAL,    INTENT(IN)  :: PstpDefault
      REAL,    INTENT(IN)  :: P1stp_X1, P1stp_Y1
      REAL,    INTENT(IN)  :: P1stp_Y2, P1stpBase
      REAL,    INTENT(IN)  :: P1stp_Y3, P1stp_Y4
      REAL,    INTENT(IN)  :: P1stp_Y5, P1stp_Y6
      REAL,    INTENT(IN)  :: P1stp_Y7, P1stp_Y8
      REAL,    INTENT(IN)  :: P1stp_Y9, P1stp_X2
      REAL,    INTENT(IN)  :: P1stp_X3, P1stp_X4
      REAL,    INTENT(IN)  :: P1stp_X5, P1stp_X6
      REAL,    INTENT(IN)  :: P1stp_X7, P1stp_X8
      REAL,    INTENT(IN)  :: P1stp_X9, P1stp_X10
      REAL,    INTENT(IN)  :: P1stp_Y10
      REAL,    INTENT(IN)  :: P1stpDefault
      REAL,    INTENT(IN)  :: AUXstp_X1
      REAL,    INTENT(IN)  :: AUXstp_Y1
      REAL,    INTENT(IN)  :: AUXstp_Y2
      REAL,    INTENT(IN)  :: AUXstpBase
      REAL,    INTENT(IN)  :: AUXstp_Y3
      REAL,    INTENT(IN)  :: AUXstp_Y4
      REAL,    INTENT(IN)  :: AUXstp_Y5
      REAL,    INTENT(IN)  :: AUXstp_Y6
      REAL,    INTENT(IN)  :: AUXstp_Y7
      REAL,    INTENT(IN)  :: AUXstp_Y8
      REAL,    INTENT(IN)  :: AUXstp_Y9
      REAL,    INTENT(IN)  :: AUXstp_X2
      REAL,    INTENT(IN)  :: AUXstp_X3
      REAL,    INTENT(IN)  :: AUXstp_X4
      REAL,    INTENT(IN)  :: AUXstp_X5
      REAL,    INTENT(IN)  :: AUXstp_X6
      REAL,    INTENT(IN)  :: AUXstp_X7
      REAL,    INTENT(IN)  :: AUXstp_X8
      REAL,    INTENT(IN)  :: AUXstp_X9
      REAL,    INTENT(IN)  :: AUXstp_X10
      REAL,    INTENT(IN)  :: AUXstp_Y10
      REAL,    INTENT(IN)  :: AUXstpDefault

! Electrical Node Indices

! Control Signals
      REAL     RT_19, RT_21, RT_25, RT_30, RT_35
      REAL     RT_37, RT_41, RT_43, RT_47, RT_52
      REAL     RT_57, RT_59, RT_66, RT_67, RT_70
      REAL     RT_74, RT_79, RT_81, RT_85, RT_90
      REAL     RT_92, RT_96, RT_98, RT_102

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 60:[time-sig] Output of Simulation Time 

! 160:[time-sig] Output of Simulation Time 

! 170:[xy_transfer_function] X-Y transfer function 'Vstp_profile'

! 280:[const] Real Constant 
      RT_25 = 0.5

! 300:[const] Real Constant 
      RT_21 = 1.5

! 360:[time-sig] Output of Simulation Time 

! 370:[const] Real Constant 
      RT_19 = 2.5

! 460:[time-sig] Output of Simulation Time 

! 480:[xy_transfer_function] X-Y transfer function 'Qstp_profile'

! 590:[const] Real Constant 
      RT_30 = 0.5

! 610:[const] Real Constant 
      RT_35 = 1.5

! 640:[const] Real Constant 
      RT_37 = 2.5

! 680:[time-sig] Output of Simulation Time 

! 700:[XY_profile_2]  
      CALL XY_profile_2Dyn_Begin()


! 790:[time-sig] Output of Simulation Time 

! 800:[xy_transfer_function] X-Y transfer function 'Q1stp_profile'

! 910:[const] Real Constant 
      RT_85 = 0.5

! 930:[const] Real Constant 
      RT_90 = 1.5

! 960:[const] Real Constant 
      RT_92 = 2.5

! 1000:[time-sig] Output of Simulation Time 

! 1100:[time-sig] Output of Simulation Time 

! 1110:[xy_transfer_function] X-Y transfer function 'PFstp_profile'

! 1220:[const] Real Constant 
      RT_47 = 0.5

! 1240:[const] Real Constant 
      RT_43 = 1.5

! 1250:[const] Real Constant 
      RT_41 = 2.5

! 1310:[time-sig] Output of Simulation Time 

! 1330:[XY_profile_2]  
      CALL XY_profile_2Dyn_Begin()


! 1420:[time-sig] Output of Simulation Time 

! 1430:[xy_transfer_function] X-Y transfer function 'PF1stp_profile'

! 1540:[const] Real Constant 
      RT_102 = 0.5

! 1560:[const] Real Constant 
      RT_98 = 1.5

! 1570:[const] Real Constant 
      RT_96 = 2.5

! 1630:[time-sig] Output of Simulation Time 

! 1720:[time-sig] Output of Simulation Time 

! 1740:[xy_transfer_function] X-Y transfer function 'Pstp_profile'

! 1850:[const] Real Constant 
      RT_52 = 0.5

! 1870:[const] Real Constant 
      RT_57 = 1.5

! 1930:[time-sig] Output of Simulation Time 

! 1940:[const] Real Constant 
      RT_59 = 2.5

! 2030:[time-sig] Output of Simulation Time 

! 2050:[xy_transfer_function] X-Y transfer function 'P1stp_profile'

! 2160:[const] Real Constant 
      RT_74 = 0.5

! 2180:[const] Real Constant 
      RT_79 = 1.5

! 2210:[const] Real Constant 
      RT_81 = 2.5

! 2250:[time-sig] Output of Simulation Time 

! 2280:[XY_profile_2]  
      CALL XY_profile_2Dyn_Begin()


! 2360:[time-sig] Output of Simulation Time 

! 2370:[xy_transfer_function] X-Y transfer function 'AUX_profile'

! 2480:[const] Real Constant 
      RT_70 = 0.5

! 2500:[const] Real Constant 
      RT_67 = 1.5

! 2510:[const] Real Constant 
      RT_66 = 2.5

! 2520:[XY_profile_2]  
      CALL XY_profile_2Dyn_Begin()


! 2530:[compar] Two Input Comparator 

! 2540:[unity] Type/Shape conversion block 

! 2550:[compar] Two Input Comparator 

! 2560:[unity] Type/Shape conversion block 

! 2570:[compar] Two Input Comparator 

! 2580:[unity] Type/Shape conversion block 

! 2590:[XY_profile_2]  
      CALL XY_profile_2Dyn_Begin()


! 2600:[compar] Two Input Comparator 

! 2610:[unity] Type/Shape conversion block 

! 2620:[compar] Two Input Comparator 

! 2630:[unity] Type/Shape conversion block 

! 2640:[compar] Two Input Comparator 

! 2650:[unity] Type/Shape conversion block 

! 2660:[compar] Two Input Comparator 

! 2670:[unity] Type/Shape conversion block 

! 2680:[compar] Two Input Comparator 

! 2690:[unity] Type/Shape conversion block 

! 2700:[compar] Two Input Comparator 

! 2710:[unity] Type/Shape conversion block 

! 2720:[XY_profile_2]  
      CALL XY_profile_2Dyn_Begin()


! 2730:[compar] Two Input Comparator 

! 2740:[unity] Type/Shape conversion block 

! 2750:[compar] Two Input Comparator 

! 2760:[unity] Type/Shape conversion block 

! 2770:[compar] Two Input Comparator 

! 2780:[unity] Type/Shape conversion block 

! 2790:[compar] Two Input Comparator 

! 2800:[unity] Type/Shape conversion block 

! 2810:[compar] Two Input Comparator 

! 2820:[unity] Type/Shape conversion block 

! 2830:[compar] Two Input Comparator 

! 2840:[unity] Type/Shape conversion block 

! 2850:[XY_profile_2]  
      CALL XY_profile_2Dyn_Begin()


! 2860:[compar] Two Input Comparator 

! 2870:[unity] Type/Shape conversion block 

! 2880:[compar] Two Input Comparator 

! 2890:[unity] Type/Shape conversion block 

! 2900:[compar] Two Input Comparator 

! 2910:[unity] Type/Shape conversion block 

! 2920:[XY_profile_2]  
      CALL XY_profile_2Dyn_Begin()


! 2930:[compar] Two Input Comparator 

! 2940:[unity] Type/Shape conversion block 

! 2950:[compar] Two Input Comparator 

! 2960:[unity] Type/Shape conversion block 

! 2970:[compar] Two Input Comparator 

! 2980:[unity] Type/Shape conversion block 

! 2990:[compar] Two Input Comparator 

! 3000:[unity] Type/Shape conversion block 

! 3010:[compar] Two Input Comparator 

! 3020:[unity] Type/Shape conversion block 

! 3030:[compar] Two Input Comparator 

! 3040:[unity] Type/Shape conversion block 

! 3050:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3060:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3070:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3080:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3090:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3100:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3110:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3120:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3130:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3140:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3150:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3160:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3170:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3180:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3190:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3200:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3210:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3220:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3230:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3240:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3250:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3260:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3270:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3280:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 3290:[mult] Multiplier 

! 3300:[mult] Multiplier 

! 3310:[mult] Multiplier 

! 3320:[mult] Multiplier 

! 3330:[mult] Multiplier 

! 3340:[mult] Multiplier 

! 3350:[mult] Multiplier 

! 3360:[mult] Multiplier 

      RETURN
      END

!=======================================================================

      SUBROUTINE setpointProfilesOut_Begin(Vstp_X1, Vstp_Y1, Vstp_Y2,   &
     &   VstpBase, Vstp_Y3, Vstp_Y4, Vstp_Y5, Vstp_Y6, Vstp_Y7,         &
     &   Vstp_Y8, Vstp_Y9, Vstp_X2, Vstp_X3, VstpMethod, Vstp_X4,       &
     &   Vstp_X5, Vstp_X6, Vstp_X7, Vstp_X8, Vstp_X9, Vstp_X10,         &
     &   Vstp_Y10, Vstp_N, VstpDefault, Qstp_X1, Qstp_Y1, Qstp_Y2,      &
     &   QstpBase, Qstp_Y3, Qstp_Y4, Qstp_Y5, Qstp_Y6, Qstp_Y7,         &
     &   Qstp_Y8, Qstp_Y9, Qstp_X2, Qstp_X3, QstpMethod, Qstp_X4,       &
     &   Qstp_X5, Qstp_X6, Qstp_X7, Qstp_X8, Qstp_X9, Qstp_X10,         &
     &   Qstp_Y10, Qstp_N, QstpDefault, Q1stp_X1, Q1stp_Y1, Q1stp_Y2,   &
     &   Q1stpBase, Q1stp_Y3, Q1stp_Y4, Q1stp_Y5, Q1stp_Y6, Q1stp_Y7,   &
     &   Q1stp_Y8, Q1stp_Y9, Q1stp_X2, Q1stp_X3, Q1stpMethod, Q1stp_X4, &
     &   Q1stp_X5, Q1stp_X6, Q1stp_X7, Q1stp_X8, Q1stp_X9, Q1stp_X10,   &
     &   Q1stp_Y10, Q1stp_N, Q1stpDefault, PFstp_X1, PFstp_Y1,          &
     &   PFstp_Y2, PFstpBase, PFstp_Y3, PFstp_Y4, PFstp_Y5, PFstp_Y6,   &
     &   PFstp_Y7, PFstp_Y8, PFstp_Y9, PFstp_X2, PFstp_X3, PFstpMethod, &
     &   PFstp_X4, PFstp_X5, PFstp_X6, PFstp_X7, PFstp_X8, PFstp_X9,    &
     &   PFstp_X10, PFstp_Y10, PFstp_N, PFstpDefault, PF1stp_X1,        &
     &   PF1stp_Y1, PF1stp_Y2, PF1stpBase, PF1stp_Y3, PF1stp_Y4,        &
     &   PF1stp_Y5, PF1stp_Y6, PF1stp_Y7, PF1stp_Y8, PF1stp_Y9,         &
     &   PF1stp_X2, PF1stp_X3, PF1stpMethod, PF1stp_X4, PF1stp_X5,      &
     &   PF1stp_X6, PF1stp_X7, PF1stp_X8, PF1stp_X9, PF1stp_X10,        &
     &   PF1stp_Y10, PF1stp_N, PF1stpDefault, Pstp_X1, Pstp_Y1,         &
     &   Pstp_Y2, PstpBase, Pstp_Y3, Pstp_Y4, Pstp_Y5, Pstp_Y6,         &
     &   Pstp_Y7, Pstp_Y8, Pstp_Y9, Pstp_X2, Pstp_X3, PstpMethod,       &
     &   Pstp_X4, Pstp_X5, Pstp_X6, Pstp_X7, Pstp_X8, Pstp_X9,          &
     &   Pstp_X10, Pstp_Y10, Pstp_N, PstpDefault, P1stp_X1, P1stp_Y1,   &
     &   P1stp_Y2, P1stpBase, P1stp_Y3, P1stp_Y4, P1stp_Y5, P1stp_Y6,   &
     &   P1stp_Y7, P1stp_Y8, P1stp_Y9, P1stp_X2, P1stp_X3, P1stpMethod, &
     &   P1stp_X4, P1stp_X5, P1stp_X6, P1stp_X7, P1stp_X8, P1stp_X9,    &
     &   P1stp_X10, P1stp_Y10, P1stp_N, P1stpDefault, AUXstp_X1,        &
     &   AUXstp_Y1, AUXstp_Y2, AUXstpBase, AUXstp_Y3, AUXstp_Y4,        &
     &   AUXstp_Y5, AUXstp_Y6, AUXstp_Y7, AUXstp_Y8, AUXstp_Y9,         &
     &   AUXstp_X2, AUXstp_X3, AUXstpMethod, AUXstp_X4, AUXstp_X5,      &
     &   AUXstp_X6, AUXstp_X7, AUXstp_X8, AUXstp_X9, AUXstp_X10,        &
     &   AUXstp_Y10, AUXstp_N, AUXstpDefault)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    XY_profile_2Out_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      INTEGER, INTENT(IN)  :: VstpMethod, Vstp_N
      INTEGER, INTENT(IN)  :: QstpMethod, Qstp_N
      INTEGER, INTENT(IN)  :: Q1stpMethod
      INTEGER, INTENT(IN)  :: Q1stp_N
      INTEGER, INTENT(IN)  :: PFstpMethod
      INTEGER, INTENT(IN)  :: PFstp_N
      INTEGER, INTENT(IN)  :: PF1stpMethod
      INTEGER, INTENT(IN)  :: PF1stp_N
      INTEGER, INTENT(IN)  :: PstpMethod, Pstp_N
      INTEGER, INTENT(IN)  :: P1stpMethod
      INTEGER, INTENT(IN)  :: P1stp_N
      INTEGER, INTENT(IN)  :: AUXstpMethod
      INTEGER, INTENT(IN)  :: AUXstp_N
      REAL,    INTENT(IN)  :: Vstp_X1, Vstp_Y1
      REAL,    INTENT(IN)  :: Vstp_Y2, VstpBase
      REAL,    INTENT(IN)  :: Vstp_Y3, Vstp_Y4
      REAL,    INTENT(IN)  :: Vstp_Y5, Vstp_Y6
      REAL,    INTENT(IN)  :: Vstp_Y7, Vstp_Y8
      REAL,    INTENT(IN)  :: Vstp_Y9, Vstp_X2
      REAL,    INTENT(IN)  :: Vstp_X3, Vstp_X4
      REAL,    INTENT(IN)  :: Vstp_X5, Vstp_X6
      REAL,    INTENT(IN)  :: Vstp_X7, Vstp_X8
      REAL,    INTENT(IN)  :: Vstp_X9, Vstp_X10
      REAL,    INTENT(IN)  :: Vstp_Y10
      REAL,    INTENT(IN)  :: VstpDefault
      REAL,    INTENT(IN)  :: Qstp_X1, Qstp_Y1
      REAL,    INTENT(IN)  :: Qstp_Y2, QstpBase
      REAL,    INTENT(IN)  :: Qstp_Y3, Qstp_Y4
      REAL,    INTENT(IN)  :: Qstp_Y5, Qstp_Y6
      REAL,    INTENT(IN)  :: Qstp_Y7, Qstp_Y8
      REAL,    INTENT(IN)  :: Qstp_Y9, Qstp_X2
      REAL,    INTENT(IN)  :: Qstp_X3, Qstp_X4
      REAL,    INTENT(IN)  :: Qstp_X5, Qstp_X6
      REAL,    INTENT(IN)  :: Qstp_X7, Qstp_X8
      REAL,    INTENT(IN)  :: Qstp_X9, Qstp_X10
      REAL,    INTENT(IN)  :: Qstp_Y10
      REAL,    INTENT(IN)  :: QstpDefault
      REAL,    INTENT(IN)  :: Q1stp_X1, Q1stp_Y1
      REAL,    INTENT(IN)  :: Q1stp_Y2, Q1stpBase
      REAL,    INTENT(IN)  :: Q1stp_Y3, Q1stp_Y4
      REAL,    INTENT(IN)  :: Q1stp_Y5, Q1stp_Y6
      REAL,    INTENT(IN)  :: Q1stp_Y7, Q1stp_Y8
      REAL,    INTENT(IN)  :: Q1stp_Y9, Q1stp_X2
      REAL,    INTENT(IN)  :: Q1stp_X3, Q1stp_X4
      REAL,    INTENT(IN)  :: Q1stp_X5, Q1stp_X6
      REAL,    INTENT(IN)  :: Q1stp_X7, Q1stp_X8
      REAL,    INTENT(IN)  :: Q1stp_X9, Q1stp_X10
      REAL,    INTENT(IN)  :: Q1stp_Y10
      REAL,    INTENT(IN)  :: Q1stpDefault
      REAL,    INTENT(IN)  :: PFstp_X1, PFstp_Y1
      REAL,    INTENT(IN)  :: PFstp_Y2, PFstpBase
      REAL,    INTENT(IN)  :: PFstp_Y3, PFstp_Y4
      REAL,    INTENT(IN)  :: PFstp_Y5, PFstp_Y6
      REAL,    INTENT(IN)  :: PFstp_Y7, PFstp_Y8
      REAL,    INTENT(IN)  :: PFstp_Y9, PFstp_X2
      REAL,    INTENT(IN)  :: PFstp_X3, PFstp_X4
      REAL,    INTENT(IN)  :: PFstp_X5, PFstp_X6
      REAL,    INTENT(IN)  :: PFstp_X7, PFstp_X8
      REAL,    INTENT(IN)  :: PFstp_X9, PFstp_X10
      REAL,    INTENT(IN)  :: PFstp_Y10
      REAL,    INTENT(IN)  :: PFstpDefault
      REAL,    INTENT(IN)  :: PF1stp_X1
      REAL,    INTENT(IN)  :: PF1stp_Y1
      REAL,    INTENT(IN)  :: PF1stp_Y2
      REAL,    INTENT(IN)  :: PF1stpBase
      REAL,    INTENT(IN)  :: PF1stp_Y3
      REAL,    INTENT(IN)  :: PF1stp_Y4
      REAL,    INTENT(IN)  :: PF1stp_Y5
      REAL,    INTENT(IN)  :: PF1stp_Y6
      REAL,    INTENT(IN)  :: PF1stp_Y7
      REAL,    INTENT(IN)  :: PF1stp_Y8
      REAL,    INTENT(IN)  :: PF1stp_Y9
      REAL,    INTENT(IN)  :: PF1stp_X2
      REAL,    INTENT(IN)  :: PF1stp_X3
      REAL,    INTENT(IN)  :: PF1stp_X4
      REAL,    INTENT(IN)  :: PF1stp_X5
      REAL,    INTENT(IN)  :: PF1stp_X6
      REAL,    INTENT(IN)  :: PF1stp_X7
      REAL,    INTENT(IN)  :: PF1stp_X8
      REAL,    INTENT(IN)  :: PF1stp_X9
      REAL,    INTENT(IN)  :: PF1stp_X10
      REAL,    INTENT(IN)  :: PF1stp_Y10
      REAL,    INTENT(IN)  :: PF1stpDefault
      REAL,    INTENT(IN)  :: Pstp_X1, Pstp_Y1
      REAL,    INTENT(IN)  :: Pstp_Y2, PstpBase
      REAL,    INTENT(IN)  :: Pstp_Y3, Pstp_Y4
      REAL,    INTENT(IN)  :: Pstp_Y5, Pstp_Y6
      REAL,    INTENT(IN)  :: Pstp_Y7, Pstp_Y8
      REAL,    INTENT(IN)  :: Pstp_Y9, Pstp_X2
      REAL,    INTENT(IN)  :: Pstp_X3, Pstp_X4
      REAL,    INTENT(IN)  :: Pstp_X5, Pstp_X6
      REAL,    INTENT(IN)  :: Pstp_X7, Pstp_X8
      REAL,    INTENT(IN)  :: Pstp_X9, Pstp_X10
      REAL,    INTENT(IN)  :: Pstp_Y10
      REAL,    INTENT(IN)  :: PstpDefault
      REAL,    INTENT(IN)  :: P1stp_X1, P1stp_Y1
      REAL,    INTENT(IN)  :: P1stp_Y2, P1stpBase
      REAL,    INTENT(IN)  :: P1stp_Y3, P1stp_Y4
      REAL,    INTENT(IN)  :: P1stp_Y5, P1stp_Y6
      REAL,    INTENT(IN)  :: P1stp_Y7, P1stp_Y8
      REAL,    INTENT(IN)  :: P1stp_Y9, P1stp_X2
      REAL,    INTENT(IN)  :: P1stp_X3, P1stp_X4
      REAL,    INTENT(IN)  :: P1stp_X5, P1stp_X6
      REAL,    INTENT(IN)  :: P1stp_X7, P1stp_X8
      REAL,    INTENT(IN)  :: P1stp_X9, P1stp_X10
      REAL,    INTENT(IN)  :: P1stp_Y10
      REAL,    INTENT(IN)  :: P1stpDefault
      REAL,    INTENT(IN)  :: AUXstp_X1
      REAL,    INTENT(IN)  :: AUXstp_Y1
      REAL,    INTENT(IN)  :: AUXstp_Y2
      REAL,    INTENT(IN)  :: AUXstpBase
      REAL,    INTENT(IN)  :: AUXstp_Y3
      REAL,    INTENT(IN)  :: AUXstp_Y4
      REAL,    INTENT(IN)  :: AUXstp_Y5
      REAL,    INTENT(IN)  :: AUXstp_Y6
      REAL,    INTENT(IN)  :: AUXstp_Y7
      REAL,    INTENT(IN)  :: AUXstp_Y8
      REAL,    INTENT(IN)  :: AUXstp_Y9
      REAL,    INTENT(IN)  :: AUXstp_X2
      REAL,    INTENT(IN)  :: AUXstp_X3
      REAL,    INTENT(IN)  :: AUXstp_X4
      REAL,    INTENT(IN)  :: AUXstp_X5
      REAL,    INTENT(IN)  :: AUXstp_X6
      REAL,    INTENT(IN)  :: AUXstp_X7
      REAL,    INTENT(IN)  :: AUXstp_X8
      REAL,    INTENT(IN)  :: AUXstp_X9
      REAL,    INTENT(IN)  :: AUXstp_X10
      REAL,    INTENT(IN)  :: AUXstp_Y10
      REAL,    INTENT(IN)  :: AUXstpDefault

! Electrical Node Indices

! Control Signals
      REAL     RT_19, RT_21, RT_25, RT_30, RT_35
      REAL     RT_37, RT_41, RT_43, RT_47, RT_52
      REAL     RT_57, RT_59, RT_66, RT_67, RT_70
      REAL     RT_74, RT_79, RT_81, RT_85, RT_90
      REAL     RT_92, RT_96, RT_98, RT_102

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 280:[const] Real Constant 
      RT_25 = 0.5

! 300:[const] Real Constant 
      RT_21 = 1.5

! 370:[const] Real Constant 
      RT_19 = 2.5

! 590:[const] Real Constant 
      RT_30 = 0.5

! 610:[const] Real Constant 
      RT_35 = 1.5

! 640:[const] Real Constant 
      RT_37 = 2.5

! 700:[XY_profile_2]  
      CALL XY_profile_2Out_Begin()


! 910:[const] Real Constant 
      RT_85 = 0.5

! 930:[const] Real Constant 
      RT_90 = 1.5

! 960:[const] Real Constant 
      RT_92 = 2.5

! 1220:[const] Real Constant 
      RT_47 = 0.5

! 1240:[const] Real Constant 
      RT_43 = 1.5

! 1250:[const] Real Constant 
      RT_41 = 2.5

! 1330:[XY_profile_2]  
      CALL XY_profile_2Out_Begin()


! 1540:[const] Real Constant 
      RT_102 = 0.5

! 1560:[const] Real Constant 
      RT_98 = 1.5

! 1570:[const] Real Constant 
      RT_96 = 2.5

! 1850:[const] Real Constant 
      RT_52 = 0.5

! 1870:[const] Real Constant 
      RT_57 = 1.5

! 1940:[const] Real Constant 
      RT_59 = 2.5

! 2160:[const] Real Constant 
      RT_74 = 0.5

! 2180:[const] Real Constant 
      RT_79 = 1.5

! 2210:[const] Real Constant 
      RT_81 = 2.5

! 2280:[XY_profile_2]  
      CALL XY_profile_2Out_Begin()


! 2480:[const] Real Constant 
      RT_70 = 0.5

! 2500:[const] Real Constant 
      RT_67 = 1.5

! 2510:[const] Real Constant 
      RT_66 = 2.5

! 2520:[XY_profile_2]  
      CALL XY_profile_2Out_Begin()


! 2590:[XY_profile_2]  
      CALL XY_profile_2Out_Begin()


! 2720:[XY_profile_2]  
      CALL XY_profile_2Out_Begin()


! 2850:[XY_profile_2]  
      CALL XY_profile_2Out_Begin()


! 2920:[XY_profile_2]  
      CALL XY_profile_2Out_Begin()


      RETURN
      END

