!=======================================================================
! Generated by: PSCAD v5.0.1.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : SC_Scope
! Description   : Scopes for monitoring
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE SC_ScopeDyn(DEBUG_PCU, MEAS_PCU)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: DEBUG_PCU(100)
      REAL,    INTENT(IN)  :: MEAS_PCU(17)

! Electrical Node Indices

! Control Signals
      REAL     Cpu2SubStt, ErrBits, AmpPsD
      REAL     AmpPsQ, AmpPsDSpt, AmpPsQSpt
      REAL     AmpNsD, AmpNsQ, AmpNsDSpt
      REAL     AmpNsQSpt, MsPllCnv_Hz
      REAL     MsPllCnv_VolPsD, CnvQAC, CnvPAC
      REAL     CnvCurABC(3), StackCur(3)
      REAL     CnvVtg(3), ExtVtg(3)
      REAL     MsPllCnv_VolPsQ, MsPllCnv_VolNsD
      REAL     MsPllCnv_VolNsQ, CtlSignals_VolPsD
      REAL     MsPllMM_VolPsQNotFil
      REAL     MsPllMM_VolPsDNotFil, MsPllMM_Hz
      REAL     MsPllMM_VolPsQ, MsPllMM_VolPsD
      REAL     SimDeltT, DrtStt, Mpp_PvVolSpt
      REAL     MppStt, GriErr2, GriErr1
      REAL     MsPllMM_PllOpStt
      REAL     MsMM_AccVolMonCheb
      REAL     CtlSignals_VolPsQ, PLDOut
      REAL     MsPllCnv_VolPsQNotFil
      REAL     MsPllCnv_VolPsQNomSum10ms
      REAL     Aid_HzHPFilOut, PVVtg, Ipv
      REAL     DCLinkVtg, DcCtl_VecLen
      REAL     InvMs_TotW, InvMs_TotVAr, WSpt_Ext
      REAL     VArSpt_Ext

! Internal Variables
      INTEGER  IVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOF, IT_0                         ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOF     = NSTOF
      NSTOF     = NSTOF + 173
      IPGB      = NPGB
      NPGB      = NPGB + 56
      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      Cpu2SubStt = STOF(ISTOF + 118)
      ErrBits  = STOF(ISTOF + 119)
      AmpPsD   = STOF(ISTOF + 120)
      AmpPsQ   = STOF(ISTOF + 121)
      AmpPsDSpt = STOF(ISTOF + 122)
      AmpPsQSpt = STOF(ISTOF + 123)
      AmpNsD   = STOF(ISTOF + 124)
      AmpNsQ   = STOF(ISTOF + 125)
      AmpNsDSpt = STOF(ISTOF + 126)
      AmpNsQSpt = STOF(ISTOF + 127)
      MsPllCnv_Hz = STOF(ISTOF + 128)
      MsPllCnv_VolPsD = STOF(ISTOF + 129)
      CnvQAC   = STOF(ISTOF + 130)
      CnvPAC   = STOF(ISTOF + 131)
      MsPllCnv_VolPsQ = STOF(ISTOF + 144)
      MsPllCnv_VolNsD = STOF(ISTOF + 145)
      MsPllCnv_VolNsQ = STOF(ISTOF + 146)
      CtlSignals_VolPsD = STOF(ISTOF + 147)
      MsPllMM_VolPsQNotFil = STOF(ISTOF + 148)
      MsPllMM_VolPsDNotFil = STOF(ISTOF + 149)
      MsPllMM_Hz = STOF(ISTOF + 150)
      MsPllMM_VolPsQ = STOF(ISTOF + 151)
      MsPllMM_VolPsD = STOF(ISTOF + 152)
      SimDeltT = STOF(ISTOF + 153)
      DrtStt   = STOF(ISTOF + 154)
      Mpp_PvVolSpt = STOF(ISTOF + 155)
      MppStt   = STOF(ISTOF + 156)
      GriErr2  = STOF(ISTOF + 157)
      GriErr1  = STOF(ISTOF + 158)
      MsPllMM_PllOpStt = STOF(ISTOF + 159)
      MsMM_AccVolMonCheb = STOF(ISTOF + 160)
      CtlSignals_VolPsQ = STOF(ISTOF + 161)
      PLDOut   = STOF(ISTOF + 162)
      MsPllCnv_VolPsQNotFil = STOF(ISTOF + 163)
      MsPllCnv_VolPsQNomSum10ms = STOF(ISTOF + 164)
      Aid_HzHPFilOut = STOF(ISTOF + 165)
      PVVtg    = STOF(ISTOF + 166)
      Ipv      = STOF(ISTOF + 167)
      DCLinkVtg = STOF(ISTOF + 168)
      DcCtl_VecLen = STOF(ISTOF + 169)
      InvMs_TotW = STOF(ISTOF + 170)
      InvMs_TotVAr = STOF(ISTOF + 171)
      WSpt_Ext = STOF(ISTOF + 172)
      VArSpt_Ext = STOF(ISTOF + 173)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         CnvCurABC(IT_0) = STOF(ISTOF + 131 + IT_0)
         StackCur(IT_0) = STOF(ISTOF + 134 + IT_0)
         CnvVtg(IT_0) = STOF(ISTOF + 137 + IT_0)
         ExtVtg(IT_0) = STOF(ISTOF + 140 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'SC_Scope.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 30:[datatap] Scalar/Array Tap 
      Cpu2SubStt = DEBUG_PCU(1)

! 40:[datatap] Scalar/Array Tap 
      ErrBits = DEBUG_PCU(2)

! 50:[datatap] Scalar/Array Tap 
      CtlSignals_VolPsD = DEBUG_PCU(16)

! 60:[datatap] Scalar/Array Tap 
      AmpPsD = DEBUG_PCU(3)

! 70:[datatap] Scalar/Array Tap 
      AmpPsQ = DEBUG_PCU(4)

! 80:[datatap] Scalar/Array Tap 
      CtlSignals_VolPsQ = DEBUG_PCU(17)

! 90:[datatap] Scalar/Array Tap 
      MsMM_AccVolMonCheb = DEBUG_PCU(18)

! 100:[datatap] Scalar/Array Tap 
      Aid_HzHPFilOut = DEBUG_PCU(31)

! 110:[datatap] Scalar/Array Tap 
      AmpPsDSpt = DEBUG_PCU(5)

! 120:[datatap] Scalar/Array Tap 
      PLDOut = DEBUG_PCU(32)

! 130:[datatap] Scalar/Array Tap 
      MsPllMM_PllOpStt = DEBUG_PCU(19)

! 140:[datatap] Scalar/Array Tap 
      AmpPsQSpt = DEBUG_PCU(6)

! 150:[datatap] Scalar/Array Tap 
      AmpNsD = DEBUG_PCU(7)

! 160:[datatap] Scalar/Array Tap 
      MsPllCnv_VolPsQNotFil = DEBUG_PCU(33)

! 170:[datatap] Scalar/Array Tap 
      GriErr1 = DEBUG_PCU(20)

! 180:[datatap] Scalar/Array Tap 
      ExtVtg = MEAS_PCU(1 : 3)

! 190:[datatap] Scalar/Array Tap 
      AmpNsQ = DEBUG_PCU(8)

! 200:[datatap] Scalar/Array Tap 
      MsPllCnv_VolPsQNomSum10ms = DEBUG_PCU(34)

! 210:[datatap] Scalar/Array Tap 
      GriErr2 = DEBUG_PCU(21)

! 220:[datatap] Scalar/Array Tap 
      CnvVtg = MEAS_PCU(4 : 6)

! 230:[datatap] Scalar/Array Tap 
      MppStt = DEBUG_PCU(22)

! 240:[datatap] Scalar/Array Tap 
      AmpNsDSpt = DEBUG_PCU(9)

! 250:[datatap] Scalar/Array Tap 
      DcCtl_VecLen = DEBUG_PCU(35)

! 260:[datatap] Scalar/Array Tap 
      StackCur = MEAS_PCU(7 : 9)

! 270:[datatap] Scalar/Array Tap 
      Mpp_PvVolSpt = DEBUG_PCU(23)

! 280:[datatap] Scalar/Array Tap 
      InvMs_TotW = DEBUG_PCU(36)

! 281:[datatap] Scalar/Array Tap 
      WSpt_Ext = DEBUG_PCU(75)

! 290:[datatap] Scalar/Array Tap 
      AmpNsQSpt = DEBUG_PCU(10)

! 300:[datatap] Scalar/Array Tap 
      CnvCurABC = MEAS_PCU(10 : 12)

! 310:[datatap] Scalar/Array Tap 
      DrtStt = DEBUG_PCU(24)

! 320:[datatap] Scalar/Array Tap 
      InvMs_TotVAr = DEBUG_PCU(37)

! 322:[datatap] Scalar/Array Tap 
      VArSpt_Ext = DEBUG_PCU(76)

! 330:[datatap] Scalar/Array Tap 
      MsPllCnv_Hz = DEBUG_PCU(11)

! 340:[datatap] Scalar/Array Tap 
      CnvPAC = MEAS_PCU(13)

! 350:[datatap] Scalar/Array Tap 
      SimDeltT = DEBUG_PCU(25)

! 360:[datatap] Scalar/Array Tap 
      MsPllCnv_VolPsD = DEBUG_PCU(12)

! 370:[datatap] Scalar/Array Tap 
      CnvQAC = MEAS_PCU(14)

! 380:[datatap] Scalar/Array Tap 
      MsPllMM_VolPsD = DEBUG_PCU(26)

! 390:[datatap] Scalar/Array Tap 
      MsPllCnv_VolPsQ = DEBUG_PCU(13)

! 400:[datatap] Scalar/Array Tap 
      PVVtg = MEAS_PCU(15)

! 410:[datatap] Scalar/Array Tap 
      MsPllMM_VolPsQ = DEBUG_PCU(27)

! 420:[datatap] Scalar/Array Tap 
      MsPllCnv_VolNsD = DEBUG_PCU(14)

! 430:[datatap] Scalar/Array Tap 
      Ipv = MEAS_PCU(16)

! 440:[datatap] Scalar/Array Tap 
      MsPllMM_VolPsDNotFil = DEBUG_PCU(28)

! 450:[datatap] Scalar/Array Tap 
      MsPllCnv_VolNsQ = DEBUG_PCU(15)

! 460:[datatap] Scalar/Array Tap 
      DCLinkVtg = MEAS_PCU(17)

! 470:[datatap] Scalar/Array Tap 
      MsPllMM_VolPsQNotFil = DEBUG_PCU(29)

! 480:[datatap] Scalar/Array Tap 
      MsPllMM_Hz = DEBUG_PCU(30)

! 600:[pgb] Output Channel 'SimDeltT'

      PGB(IPGB+1) = SimDeltT

! 700:[pgb] Output Channel 'ExtVtg'

      DO IVD1_1 = 1, 3
         PGB(IPGB+2+IVD1_1-1) = ExtVtg(IVD1_1)
      ENDDO

! 710:[pgb] Output Channel 'CnvCurABC'

      DO IVD1_1 = 1, 3
         PGB(IPGB+5+IVD1_1-1) = CnvCurABC(IVD1_1)
      ENDDO

! 720:[pgb] Output Channel 'CnvVtg'

      DO IVD1_1 = 1, 3
         PGB(IPGB+8+IVD1_1-1) = CnvVtg(IVD1_1)
      ENDDO

! 730:[pgb] Output Channel 'StackCur'

      DO IVD1_1 = 1, 3
         PGB(IPGB+11+IVD1_1-1) = StackCur(IVD1_1)
      ENDDO

! 740:[pgb] Output Channel 'CnvPAC'

      PGB(IPGB+14) = CnvPAC

! 750:[pgb] Output Channel 'CnvQAC'

      PGB(IPGB+15) = CnvQAC

! 760:[pgb] Output Channel 'DCLinkVtg'

      PGB(IPGB+16) = DCLinkVtg

! 770:[pgb] Output Channel 'PVVtg'

      PGB(IPGB+17) = PVVtg

! 780:[pgb] Output Channel 'Ipv'

      PGB(IPGB+18) = Ipv

! 1000:[pgb] Output Channel 'Cpu2SubStt'

      PGB(IPGB+19) = Cpu2SubStt

! 1010:[pgb] Output Channel 'ErrBits'

      PGB(IPGB+20) = ErrBits

! 1020:[pgb] Output Channel 'GriErr1'

      PGB(IPGB+21) = GriErr1

! 1030:[pgb] Output Channel 'GriErr2'

      PGB(IPGB+22) = GriErr2

! 1040:[pgb] Output Channel 'DrtStt'

      PGB(IPGB+23) = DrtStt

! 1050:[pgb] Output Channel 'MppStt'

      PGB(IPGB+24) = MppStt

! 1100:[pgb] Output Channel 'InvMs_TotW'

      PGB(IPGB+25) = InvMs_TotW

! 1101:[pgb] Output Channel 'WSpt_Ext'

      PGB(IPGB+26) = WSpt_Ext

! 1110:[pgb] Output Channel 'InvMs_TotVAr'

      PGB(IPGB+27) = InvMs_TotVAr

! 1112:[pgb] Output Channel 'VArSpt_Ext'

      PGB(IPGB+28) = VArSpt_Ext

! 1200:[pgb] Output Channel 'AmpPsDSpt'

      PGB(IPGB+29) = AmpPsDSpt

! 1210:[pgb] Output Channel 'AmpPsD'

      PGB(IPGB+30) = AmpPsD

! 1220:[pgb] Output Channel 'AmpPsQSpt'

      PGB(IPGB+31) = AmpPsQSpt

! 1230:[pgb] Output Channel 'AmpPsQ'

      PGB(IPGB+32) = AmpPsQ

! 1240:[pgb] Output Channel 'AmpNsDSpt'

      PGB(IPGB+33) = AmpNsDSpt

! 1250:[pgb] Output Channel 'AmpNsD'

      PGB(IPGB+34) = AmpNsD

! 1260:[pgb] Output Channel 'AmpNsQSpt'

      PGB(IPGB+35) = AmpNsQSpt

! 1270:[pgb] Output Channel 'AmpNsQ'

      PGB(IPGB+36) = AmpNsQ

! 1280:[pgb] Output Channel 'CtlSignals_VolPsD'

      PGB(IPGB+37) = CtlSignals_VolPsD

! 1290:[pgb] Output Channel 'CtlSignals_VolPsQ'

      PGB(IPGB+38) = CtlSignals_VolPsQ

! 1300:[pgb] Output Channel 'MsPllCnv_VolPsD'

      PGB(IPGB+39) = MsPllCnv_VolPsD

! 1310:[pgb] Output Channel 'MsPllCnv_VolPsQ'

      PGB(IPGB+40) = MsPllCnv_VolPsQ

! 1311:[pgb] Output Channel 'MsPllCnv_VolPsQNotFil'

      PGB(IPGB+41) = MsPllCnv_VolPsQNotFil

! 1320:[pgb] Output Channel 'MsPllCnv_VolNsD'

      PGB(IPGB+42) = MsPllCnv_VolNsD

! 1330:[pgb] Output Channel 'MsPllCnv_VolNsQ'

      PGB(IPGB+43) = MsPllCnv_VolNsQ

! 1340:[pgb] Output Channel 'MsPllCnv_Hz'

      PGB(IPGB+44) = MsPllCnv_Hz

! 1350:[pgb] Output Channel 'MsPllCnv_VolPsQNomSum10ms'

      PGB(IPGB+45) = MsPllCnv_VolPsQNomSum10ms

! 1400:[pgb] Output Channel 'MsPllMM_VolPsD'

      PGB(IPGB+46) = MsPllMM_VolPsD

! 1410:[pgb] Output Channel 'MsPllMM_VolPsQ'

      PGB(IPGB+47) = MsPllMM_VolPsQ

! 1420:[pgb] Output Channel 'MsPllMM_VolPsDNotFil'

      PGB(IPGB+48) = MsPllMM_VolPsDNotFil

! 1430:[pgb] Output Channel 'MsPllMM_VolPsQNotFil'

      PGB(IPGB+49) = MsPllMM_VolPsQNotFil

! 1440:[pgb] Output Channel 'MsPllMM_Hz'

      PGB(IPGB+50) = MsPllMM_Hz

! 1450:[pgb] Output Channel 'MsPllMM_PllOpStt'

      PGB(IPGB+51) = MsPllMM_PllOpStt

! 1500:[pgb] Output Channel 'Mpp_PvVolSpt'

      PGB(IPGB+52) = Mpp_PvVolSpt

! 1600:[pgb] Output Channel 'Aid_HzHPFilOut'

      PGB(IPGB+53) = Aid_HzHPFilOut

! 1610:[pgb] Output Channel 'PLDOut'

      PGB(IPGB+54) = PLDOut

! 1620:[pgb] Output Channel 'DcCtl_VecLen'

      PGB(IPGB+55) = DcCtl_VecLen

! 1700:[pgb] Output Channel 'MsMM_AccVolMonCheb'

      PGB(IPGB+56) = MsMM_AccVolMonCheb

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 118) = Cpu2SubStt
      STOF(ISTOF + 119) = ErrBits
      STOF(ISTOF + 120) = AmpPsD
      STOF(ISTOF + 121) = AmpPsQ
      STOF(ISTOF + 122) = AmpPsDSpt
      STOF(ISTOF + 123) = AmpPsQSpt
      STOF(ISTOF + 124) = AmpNsD
      STOF(ISTOF + 125) = AmpNsQ
      STOF(ISTOF + 126) = AmpNsDSpt
      STOF(ISTOF + 127) = AmpNsQSpt
      STOF(ISTOF + 128) = MsPllCnv_Hz
      STOF(ISTOF + 129) = MsPllCnv_VolPsD
      STOF(ISTOF + 130) = CnvQAC
      STOF(ISTOF + 131) = CnvPAC
      STOF(ISTOF + 144) = MsPllCnv_VolPsQ
      STOF(ISTOF + 145) = MsPllCnv_VolNsD
      STOF(ISTOF + 146) = MsPllCnv_VolNsQ
      STOF(ISTOF + 147) = CtlSignals_VolPsD
      STOF(ISTOF + 148) = MsPllMM_VolPsQNotFil
      STOF(ISTOF + 149) = MsPllMM_VolPsDNotFil
      STOF(ISTOF + 150) = MsPllMM_Hz
      STOF(ISTOF + 151) = MsPllMM_VolPsQ
      STOF(ISTOF + 152) = MsPllMM_VolPsD
      STOF(ISTOF + 153) = SimDeltT
      STOF(ISTOF + 154) = DrtStt
      STOF(ISTOF + 155) = Mpp_PvVolSpt
      STOF(ISTOF + 156) = MppStt
      STOF(ISTOF + 157) = GriErr2
      STOF(ISTOF + 158) = GriErr1
      STOF(ISTOF + 159) = MsPllMM_PllOpStt
      STOF(ISTOF + 160) = MsMM_AccVolMonCheb
      STOF(ISTOF + 161) = CtlSignals_VolPsQ
      STOF(ISTOF + 162) = PLDOut
      STOF(ISTOF + 163) = MsPllCnv_VolPsQNotFil
      STOF(ISTOF + 164) = MsPllCnv_VolPsQNomSum10ms
      STOF(ISTOF + 165) = Aid_HzHPFilOut
      STOF(ISTOF + 166) = PVVtg
      STOF(ISTOF + 167) = Ipv
      STOF(ISTOF + 168) = DCLinkVtg
      STOF(ISTOF + 169) = DcCtl_VecLen
      STOF(ISTOF + 170) = InvMs_TotW
      STOF(ISTOF + 171) = InvMs_TotVAr
      STOF(ISTOF + 172) = WSpt_Ext
      STOF(ISTOF + 173) = VArSpt_Ext

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 131 + IT_0) = CnvCurABC(IT_0)
         STOF(ISTOF + 134 + IT_0) = StackCur(IT_0)
         STOF(ISTOF + 137 + IT_0) = CnvVtg(IT_0)
         STOF(ISTOF + 140 + IT_0) = ExtVtg(IT_0)
      END DO

! Array (1:17) quantities...
      DO IT_0 = 1,17
         STOF(ISTOF + 100 + IT_0) = MEAS_PCU(IT_0)
      END DO

! Array (1:100) quantities...
      DO IT_0 = 1,100
         STOF(ISTOF + 0 + IT_0) = DEBUG_PCU(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE SC_ScopeOut()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC          ! Storage Indices
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NPGB      = NPGB + 56
      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------



!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'SC_Scope.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------



!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE SC_ScopeDyn_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 30:[datatap] Scalar/Array Tap 

! 40:[datatap] Scalar/Array Tap 

! 50:[datatap] Scalar/Array Tap 

! 60:[datatap] Scalar/Array Tap 

! 70:[datatap] Scalar/Array Tap 

! 80:[datatap] Scalar/Array Tap 

! 90:[datatap] Scalar/Array Tap 

! 100:[datatap] Scalar/Array Tap 

! 110:[datatap] Scalar/Array Tap 

! 120:[datatap] Scalar/Array Tap 

! 130:[datatap] Scalar/Array Tap 

! 140:[datatap] Scalar/Array Tap 

! 150:[datatap] Scalar/Array Tap 

! 160:[datatap] Scalar/Array Tap 

! 170:[datatap] Scalar/Array Tap 

! 180:[datatap] Scalar/Array Tap 

! 190:[datatap] Scalar/Array Tap 

! 200:[datatap] Scalar/Array Tap 

! 210:[datatap] Scalar/Array Tap 

! 220:[datatap] Scalar/Array Tap 

! 230:[datatap] Scalar/Array Tap 

! 240:[datatap] Scalar/Array Tap 

! 250:[datatap] Scalar/Array Tap 

! 260:[datatap] Scalar/Array Tap 

! 270:[datatap] Scalar/Array Tap 

! 280:[datatap] Scalar/Array Tap 

! 281:[datatap] Scalar/Array Tap 

! 290:[datatap] Scalar/Array Tap 

! 300:[datatap] Scalar/Array Tap 

! 310:[datatap] Scalar/Array Tap 

! 320:[datatap] Scalar/Array Tap 

! 322:[datatap] Scalar/Array Tap 

! 330:[datatap] Scalar/Array Tap 

! 340:[datatap] Scalar/Array Tap 

! 350:[datatap] Scalar/Array Tap 

! 360:[datatap] Scalar/Array Tap 

! 370:[datatap] Scalar/Array Tap 

! 380:[datatap] Scalar/Array Tap 

! 390:[datatap] Scalar/Array Tap 

! 400:[datatap] Scalar/Array Tap 

! 410:[datatap] Scalar/Array Tap 

! 420:[datatap] Scalar/Array Tap 

! 430:[datatap] Scalar/Array Tap 

! 440:[datatap] Scalar/Array Tap 

! 450:[datatap] Scalar/Array Tap 

! 460:[datatap] Scalar/Array Tap 

! 470:[datatap] Scalar/Array Tap 

! 480:[datatap] Scalar/Array Tap 

! 600:[pgb] Output Channel 'SimDeltT'

! 700:[pgb] Output Channel 'ExtVtg'

! 710:[pgb] Output Channel 'CnvCurABC'

! 720:[pgb] Output Channel 'CnvVtg'

! 730:[pgb] Output Channel 'StackCur'

! 740:[pgb] Output Channel 'CnvPAC'

! 750:[pgb] Output Channel 'CnvQAC'

! 760:[pgb] Output Channel 'DCLinkVtg'

! 770:[pgb] Output Channel 'PVVtg'

! 780:[pgb] Output Channel 'Ipv'

! 1000:[pgb] Output Channel 'Cpu2SubStt'

! 1010:[pgb] Output Channel 'ErrBits'

! 1020:[pgb] Output Channel 'GriErr1'

! 1030:[pgb] Output Channel 'GriErr2'

! 1040:[pgb] Output Channel 'DrtStt'

! 1050:[pgb] Output Channel 'MppStt'

! 1100:[pgb] Output Channel 'InvMs_TotW'

! 1101:[pgb] Output Channel 'WSpt_Ext'

! 1110:[pgb] Output Channel 'InvMs_TotVAr'

! 1112:[pgb] Output Channel 'VArSpt_Ext'

! 1200:[pgb] Output Channel 'AmpPsDSpt'

! 1210:[pgb] Output Channel 'AmpPsD'

! 1220:[pgb] Output Channel 'AmpPsQSpt'

! 1230:[pgb] Output Channel 'AmpPsQ'

! 1240:[pgb] Output Channel 'AmpNsDSpt'

! 1250:[pgb] Output Channel 'AmpNsD'

! 1260:[pgb] Output Channel 'AmpNsQSpt'

! 1270:[pgb] Output Channel 'AmpNsQ'

! 1280:[pgb] Output Channel 'CtlSignals_VolPsD'

! 1290:[pgb] Output Channel 'CtlSignals_VolPsQ'

! 1300:[pgb] Output Channel 'MsPllCnv_VolPsD'

! 1310:[pgb] Output Channel 'MsPllCnv_VolPsQ'

! 1311:[pgb] Output Channel 'MsPllCnv_VolPsQNotFil'

! 1320:[pgb] Output Channel 'MsPllCnv_VolNsD'

! 1330:[pgb] Output Channel 'MsPllCnv_VolNsQ'

! 1340:[pgb] Output Channel 'MsPllCnv_Hz'

! 1350:[pgb] Output Channel 'MsPllCnv_VolPsQNomSum10ms'

! 1400:[pgb] Output Channel 'MsPllMM_VolPsD'

! 1410:[pgb] Output Channel 'MsPllMM_VolPsQ'

! 1420:[pgb] Output Channel 'MsPllMM_VolPsDNotFil'

! 1430:[pgb] Output Channel 'MsPllMM_VolPsQNotFil'

! 1440:[pgb] Output Channel 'MsPllMM_Hz'

! 1450:[pgb] Output Channel 'MsPllMM_PllOpStt'

! 1500:[pgb] Output Channel 'Mpp_PvVolSpt'

! 1600:[pgb] Output Channel 'Aid_HzHPFilOut'

! 1610:[pgb] Output Channel 'PLDOut'

! 1620:[pgb] Output Channel 'DcCtl_VecLen'

! 1700:[pgb] Output Channel 'MsMM_AccVolMonCheb'

      RETURN
      END

!=======================================================================

      SUBROUTINE SC_ScopeOut_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


      RETURN
      END

