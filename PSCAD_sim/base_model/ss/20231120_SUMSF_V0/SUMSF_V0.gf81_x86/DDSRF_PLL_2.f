!=======================================================================
! Generated by: PSCAD v5.0.1.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : DDSRF_PLL_2
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE DDSRF_PLL_2Dyn(Fo, Vabc, Fs)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    TRDQO         ! DQ0 transformation
      REAL    REALPOLE      ! Real Pole
      REAL    EMTDC_XINT    ! 'Integrator /w Interpolation'
!     SUBR    EMTDC_X2COMP  ! 'Comparator with Interpolation'

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: Vabc(3), Fs
      REAL,    INTENT(OUT) :: Fo! Aliases: Fout

! Electrical Node Indices

! Control Signals
      REAL     Vqp, RT_1, RT_2, reset, RT_3, RT_4
      REAL     RT_5, RT_6, ws, RT_7, Tf, RT_8(2)
      REAL     wo, RT_9, RT_10, RT_11, RT_12
      REAL     RT_13, RT_14, RT_15, RT_16, RT_17
      REAL     RT_18, RT_19, RT_20, RT_21, RT_22
      REAL     RT_23, RT_24, Vdp, RT_25, RT_26
      REAL     RT_27, RT_28, Vqn, RT_29, RT_30
      REAL     cos2, RT_31, sin2, RT_32, Vdn
      REAL     RT_33, Thetam_neg, Thetam, RT_34
      REAL     RT_35, RT_36, RT_37, RT_38, RT_39

! Internal Variables
      REAL     RVD1_1, RVD2_1(2), RVD2_2(2)

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOF, IT_0                         ! Storage Indices
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOF     = NSTOF
      NSTOF     = NSTOF + 57
      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      Fo       = STOF(ISTOF + 1)
      Vqp      = STOF(ISTOF + 6)
      RT_1     = STOF(ISTOF + 7)
      RT_2     = STOF(ISTOF + 8)
      reset    = STOF(ISTOF + 9)
      RT_3     = STOF(ISTOF + 10)
      RT_4     = STOF(ISTOF + 11)
      RT_5     = STOF(ISTOF + 12)
      RT_6     = STOF(ISTOF + 13)
      ws       = STOF(ISTOF + 14)
      RT_7     = STOF(ISTOF + 15)
      Tf       = STOF(ISTOF + 16)
      wo       = STOF(ISTOF + 19)
      RT_9     = STOF(ISTOF + 20)
      RT_10    = STOF(ISTOF + 21)
      RT_11    = STOF(ISTOF + 22)
      RT_12    = STOF(ISTOF + 23)
      RT_13    = STOF(ISTOF + 24)
      RT_14    = STOF(ISTOF + 25)
      RT_15    = STOF(ISTOF + 26)
      RT_16    = STOF(ISTOF + 27)
      RT_17    = STOF(ISTOF + 28)
      RT_18    = STOF(ISTOF + 29)
      RT_19    = STOF(ISTOF + 30)
      RT_20    = STOF(ISTOF + 31)
      RT_21    = STOF(ISTOF + 32)
      RT_22    = STOF(ISTOF + 33)
      RT_23    = STOF(ISTOF + 34)
      RT_24    = STOF(ISTOF + 35)
      Vdp      = STOF(ISTOF + 36)
      RT_25    = STOF(ISTOF + 37)
      RT_26    = STOF(ISTOF + 38)
      RT_27    = STOF(ISTOF + 39)
      RT_28    = STOF(ISTOF + 40)
      Vqn      = STOF(ISTOF + 41)
      RT_29    = STOF(ISTOF + 42)
      RT_30    = STOF(ISTOF + 43)
      cos2     = STOF(ISTOF + 44)
      RT_31    = STOF(ISTOF + 45)
      sin2     = STOF(ISTOF + 46)
      RT_32    = STOF(ISTOF + 47)
      Vdn      = STOF(ISTOF + 48)
      RT_33    = STOF(ISTOF + 49)
      Thetam_neg = STOF(ISTOF + 50)
      Thetam   = STOF(ISTOF + 51)
      RT_34    = STOF(ISTOF + 52)
      RT_35    = STOF(ISTOF + 53)
      RT_36    = STOF(ISTOF + 54)
      RT_37    = STOF(ISTOF + 55)
      RT_38    = STOF(ISTOF + 56)
      RT_39    = STOF(ISTOF + 57)

! Array (1:2) quantities...
      DO IT_0 = 1,2
         RT_8(IT_0) = STOF(ISTOF + 16 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'DDSRF_PLL_2.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 20:[datatap] Scalar/Array Tap 
      RT_36 = Vabc(3)

! 40:[delta-t] Output of Simulation Time-Step (DELT) 
      RT_3 = DELT

! 50:[emtconst] Commonly Used Constants (pi...) 
      RT_2 = TWO_PI

! 60:[datatap] Scalar/Array Tap 
      RT_9 = Vabc(1)

! 70:[datatap] Scalar/Array Tap 
      RT_10 = Vabc(2)

! 80:[datatap] Scalar/Array Tap 
      RT_11 = Vabc(3)

! 90:[const] Real Constant 
      RT_7 = 1.0

! 100:[gain] Gain Block 
!  Gain
      ws = 6.28318530718 * Fs

! 110:[gain] Gain Block 
!  Gain
      RT_6 = 0.707 * ws

! 120:[datatap] Scalar/Array Tap 
      RT_34 = Vabc(1)

! 130:[datatap] Scalar/Array Tap 
      RT_35 = Vabc(2)

! 140:[div] Divider 
      IF (ABS(RT_6) .LT. 1.0E-100) THEN
         IF (RT_6 .LT. 0.0)  THEN
            Tf = -1.0E100 * RT_7
         ELSE
            Tf =  1.0E100 * RT_7
         ENDIF
      ELSE
         Tf = RT_7 / RT_6
      ENDIF

! 150:[gain] Gain Block 
!  Gain
      Thetam_neg = -1.0 * Thetam

! 160:[abcdq0] abc dq0 transformation 
!ABC to DQ0 transformation
      CALL TRDQO(RT_9,RT_10,RT_11,RT_12,RT_13,RT_14,Thetam_neg,1)

! 170:[mult] Multiplier 
      RT_32 = cos2 * Vdn

! 180:[gain] Gain Block 
!  Gain
      RT_31 = 2.0 * Thetam

! 190:[trig] Trigonometric Functions 
!  Trig-Func
      sin2 = SIN(RT_31)
!

! 200:[mult] Multiplier 
      RT_17 = sin2 * Vdp

! 210:[trig] Trigonometric Functions 
!  Trig-Func
      cos2 = COS(RT_31)
!

! 220:[sumjct] Summing/Differencing Junctions 
      RT_18 = + RT_13 + RT_17

! 230:[abcdq0] abc dq0 transformation 
!ABC to DQ0 transformation
      CALL TRDQO(RT_34,RT_35,RT_36,RT_33,RT_29,RT_37,Thetam,1)

! 240:[sumjct] Summing/Differencing Junctions 
      RT_27 = + RT_33 - RT_32

! 250:[mult] Multiplier 
      RT_28 = sin2 * Vqn

! 260:[sumjct] Summing/Differencing Junctions 
      RT_24 = + RT_27 + RT_28

! 270:[realpole] Real Pole 
!  Real_Pole
      Vdp = REALPOLE(0,1,0,1.0,Tf,RT_24,0.0,-1.0E20,1.0E20)

! 280:[mult] Multiplier 
      RT_15 = cos2 * Vdp

! 290:[sumjct] Summing/Differencing Junctions 
      RT_16 = + RT_12 - RT_15

! 300:[mult] Multiplier 
      RT_21 = cos2 * Vqp

! 310:[sumjct] Summing/Differencing Junctions 
      RT_22 = + RT_18 - RT_21

! 320:[realpole] Real Pole 
!  Real_Pole
      Vqn = REALPOLE(0,1,0,1.0,Tf,RT_22,0.0,-1.0E20,1.0E20)

! 330:[mult] Multiplier 
      RT_26 = cos2 * Vqn

! 340:[mult] Multiplier 
      RT_30 = sin2 * Vdn

! 350:[sumjct] Summing/Differencing Junctions 
      RT_25 = + RT_29 - RT_30

! 360:[sumjct] Summing/Differencing Junctions 
      RT_23 = + RT_25 - RT_26

! 370:[realpole] Real Pole 
!  Real_Pole
      Vqp = REALPOLE(0,1,0,1.0,Tf,RT_23,0.0,-1.0E20,1.0E20)

! 380:[mult] Multiplier 
      RT_19 = sin2 * Vqp

! 390:[sumjct] Summing/Differencing Junctions 
      RT_20 = + RT_16 - RT_19

! 400:[realpole] Real Pole 
!  Real_Pole
      Vdn = REALPOLE(0,1,0,1.0,Tf,RT_20,0.0,-1.0E20,1.0E20)

! 410:[ratelimit] Rate Limiter 
!  Rate_Limiter
      CALL RATE_LIMITER(300.0,300.0,Vqp,RT_1)

! 420:[gain] Gain Block 
!  Gain
      RT_4 = -1.0 * RT_1

! 430:[integral] Interpolated Integrator 
      RVD1_1 = RTCF(NRTCF) ! Initial Output
      NRTCF = NRTCF + 1
      RVD2_1(1) = RT_4
      RVD2_1(2) = 0.0
      RVD2_2(1) = 0.0
      RVD2_2(2) = 0.0
      RT_39 = EMTDC_XINT(0, 0, 0, RVD1_1, 0.0004, 0.0, -31.4, 31.4, RVD2&
     &_2, RVD2_1)

! 440:[sumjct] Summing/Differencing Junctions 
      RT_5 = + RT_39 + ws

! 450:[gain] Gain Block 
!  Gain
      RT_38 = 80.0 * RT_4

! 460:[sumjct] Summing/Differencing Junctions 
      wo = + RT_38 + RT_5

! 470:[mult] Multiplier 
      reset = RT_3 * wo

! 480:[integral] Interpolated Integrator 
      RVD1_1 = RTCF(NRTCF) ! Initial Output
      NRTCF = NRTCF + 1
      RVD2_1(1) = wo
      RVD2_1(2) = 0.0
      Thetam = EMTDC_XINT(0, 1, 1, RVD1_1, 1.0, reset, -10.0, 10.0, RT_8&
     &, RVD2_1)

! 490:[compare] Single Input Level Comparator 
!
!
      CALL EMTDC_X2COMP(1,0,6.28318530718,Thetam,0.0,0.0,1.0,RT_8)

! 500:[div] Divider 
      IF (ABS(RT_2) .LT. 1.0E-100) THEN
         IF (RT_2 .LT. 0.0)  THEN
            Fo = -1.0E100 * RT_5
         ELSE
            Fo =  1.0E100 * RT_5
         ENDIF
      ELSE
         Fo = RT_5 / RT_2
      ENDIF

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 1) = Fo
      STOF(ISTOF + 5) = Fs
      STOF(ISTOF + 6) = Vqp
      STOF(ISTOF + 7) = RT_1
      STOF(ISTOF + 8) = RT_2
      STOF(ISTOF + 9) = reset
      STOF(ISTOF + 10) = RT_3
      STOF(ISTOF + 11) = RT_4
      STOF(ISTOF + 12) = RT_5
      STOF(ISTOF + 13) = RT_6
      STOF(ISTOF + 14) = ws
      STOF(ISTOF + 15) = RT_7
      STOF(ISTOF + 16) = Tf
      STOF(ISTOF + 19) = wo
      STOF(ISTOF + 20) = RT_9
      STOF(ISTOF + 21) = RT_10
      STOF(ISTOF + 22) = RT_11
      STOF(ISTOF + 23) = RT_12
      STOF(ISTOF + 24) = RT_13
      STOF(ISTOF + 25) = RT_14
      STOF(ISTOF + 26) = RT_15
      STOF(ISTOF + 27) = RT_16
      STOF(ISTOF + 28) = RT_17
      STOF(ISTOF + 29) = RT_18
      STOF(ISTOF + 30) = RT_19
      STOF(ISTOF + 31) = RT_20
      STOF(ISTOF + 32) = RT_21
      STOF(ISTOF + 33) = RT_22
      STOF(ISTOF + 34) = RT_23
      STOF(ISTOF + 35) = RT_24
      STOF(ISTOF + 36) = Vdp
      STOF(ISTOF + 37) = RT_25
      STOF(ISTOF + 38) = RT_26
      STOF(ISTOF + 39) = RT_27
      STOF(ISTOF + 40) = RT_28
      STOF(ISTOF + 41) = Vqn
      STOF(ISTOF + 42) = RT_29
      STOF(ISTOF + 43) = RT_30
      STOF(ISTOF + 44) = cos2
      STOF(ISTOF + 45) = RT_31
      STOF(ISTOF + 46) = sin2
      STOF(ISTOF + 47) = RT_32
      STOF(ISTOF + 48) = Vdn
      STOF(ISTOF + 49) = RT_33
      STOF(ISTOF + 50) = Thetam_neg
      STOF(ISTOF + 51) = Thetam
      STOF(ISTOF + 52) = RT_34
      STOF(ISTOF + 53) = RT_35
      STOF(ISTOF + 54) = RT_36
      STOF(ISTOF + 55) = RT_37
      STOF(ISTOF + 56) = RT_38
      STOF(ISTOF + 57) = RT_39

! Array (1:2) quantities...
      DO IT_0 = 1,2
         STOF(ISTOF + 16 + IT_0) = RT_8(IT_0)
      END DO

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 1 + IT_0) = Vabc(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------
      !Fo       is output

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE DDSRF_PLL_2Out()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices

! Control Signals
      REAL     RT_2, RT_3, RT_7

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC          ! Storage Indices
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_2     = STOF(ISTOF + 8)
      RT_3     = STOF(ISTOF + 10)
      RT_7     = STOF(ISTOF + 15)


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'DDSRF_PLL_2.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 40:[delta-t] Output of Simulation Time-Step (DELT) 
      RT_3 = DELT

! 50:[emtconst] Commonly Used Constants (pi...) 
      RT_2 = TWO_PI

! 90:[const] Real Constant 

      RT_7 = 1.0

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 8) = RT_2
      STOF(ISTOF + 10) = RT_3
      STOF(ISTOF + 15) = RT_7


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE DDSRF_PLL_2Dyn_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_2, RT_3, RT_7

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 20:[datatap] Scalar/Array Tap 

! 40:[delta-t] Output of Simulation Time-Step (DELT) 
      RT_3 = DELT

! 50:[emtconst] Commonly Used Constants (pi...) 
      RT_2 = TWO_PI

! 60:[datatap] Scalar/Array Tap 

! 70:[datatap] Scalar/Array Tap 

! 80:[datatap] Scalar/Array Tap 

! 90:[const] Real Constant 
      RT_7 = 1.0

! 100:[gain] Gain Block 

! 110:[gain] Gain Block 

! 120:[datatap] Scalar/Array Tap 

! 130:[datatap] Scalar/Array Tap 

! 140:[div] Divider 

! 150:[gain] Gain Block 

! 160:[abcdq0] abc dq0 transformation 

! 170:[mult] Multiplier 

! 180:[gain] Gain Block 

! 190:[trig] Trigonometric Functions 

! 200:[mult] Multiplier 

! 210:[trig] Trigonometric Functions 

! 220:[sumjct] Summing/Differencing Junctions 

! 230:[abcdq0] abc dq0 transformation 

! 240:[sumjct] Summing/Differencing Junctions 

! 250:[mult] Multiplier 

! 260:[sumjct] Summing/Differencing Junctions 

! 270:[realpole] Real Pole 

! 280:[mult] Multiplier 

! 290:[sumjct] Summing/Differencing Junctions 

! 300:[mult] Multiplier 

! 310:[sumjct] Summing/Differencing Junctions 

! 320:[realpole] Real Pole 

! 330:[mult] Multiplier 

! 340:[mult] Multiplier 

! 350:[sumjct] Summing/Differencing Junctions 

! 360:[sumjct] Summing/Differencing Junctions 

! 370:[realpole] Real Pole 

! 380:[mult] Multiplier 

! 390:[sumjct] Summing/Differencing Junctions 

! 400:[realpole] Real Pole 

! 410:[ratelimit] Rate Limiter 

! 420:[gain] Gain Block 

! 430:[integral] Interpolated Integrator 
      RTCF(NRTCF) = 0.0
      NRTCF = NRTCF + 1

! 440:[sumjct] Summing/Differencing Junctions 

! 450:[gain] Gain Block 

! 460:[sumjct] Summing/Differencing Junctions 

! 470:[mult] Multiplier 

! 480:[integral] Interpolated Integrator 
      RTCF(NRTCF) = 0.0
      NRTCF = NRTCF + 1

! 490:[compare] Single Input Level Comparator 

! 500:[div] Divider 

      RETURN
      END

!=======================================================================

      SUBROUTINE DDSRF_PLL_2Out_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_2, RT_3, RT_7

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 40:[delta-t] Output of Simulation Time-Step (DELT) 
      RT_3 = DELT

! 50:[emtconst] Commonly Used Constants (pi...) 
      RT_2 = TWO_PI

! 90:[const] Real Constant 
      RT_7 = 1.0

      RETURN
      END

